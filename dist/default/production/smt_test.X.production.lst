

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Mar 05 14:34:37 2023

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og9 
     1                           	processor	16F1619
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2,group=3
    18                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text6,local,class=CODE,merge=1,delta=2,group=3
    21                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text9,local,class=CODE,merge=1,delta=2,group=3
    24                           	psect	text10,local,class=CODE,merge=1,delta=2,group=3
    25                           	psect	text11,local,class=CODE,merge=1,delta=2,group=3
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2,group=3
    28                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	intentry,global,class=CODE,delta=2
    32                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    33                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    34                           	dabs	1,0x7E,2
    35  0000                     
    36                           ; Version 2.40
    37                           ; Generated 17/11/2021 GMT
    38                           ; 
    39                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution. Publication is not required when
    53                           ;        this file is used in an embedded application.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC16F1619 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71  0000                     	;# 
    72  0001                     	;# 
    73  0002                     	;# 
    74  0003                     	;# 
    75  0004                     	;# 
    76  0005                     	;# 
    77  0006                     	;# 
    78  0007                     	;# 
    79  0008                     	;# 
    80  0009                     	;# 
    81  000A                     	;# 
    82  000B                     	;# 
    83  000C                     	;# 
    84  000D                     	;# 
    85  000E                     	;# 
    86  0010                     	;# 
    87  0011                     	;# 
    88  0012                     	;# 
    89  0013                     	;# 
    90  0014                     	;# 
    91  0015                     	;# 
    92  0016                     	;# 
    93  0016                     	;# 
    94  0017                     	;# 
    95  0018                     	;# 
    96  0019                     	;# 
    97  001A                     	;# 
    98  001A                     	;# 
    99  001B                     	;# 
   100  001B                     	;# 
   101  001C                     	;# 
   102  001D                     	;# 
   103  001E                     	;# 
   104  001F                     	;# 
   105  008C                     	;# 
   106  008D                     	;# 
   107  008E                     	;# 
   108  0090                     	;# 
   109  0091                     	;# 
   110  0092                     	;# 
   111  0093                     	;# 
   112  0094                     	;# 
   113  0095                     	;# 
   114  0096                     	;# 
   115  0098                     	;# 
   116  0099                     	;# 
   117  009A                     	;# 
   118  009B                     	;# 
   119  009B                     	;# 
   120  009C                     	;# 
   121  009D                     	;# 
   122  009E                     	;# 
   123  009F                     	;# 
   124  010C                     	;# 
   125  010D                     	;# 
   126  010E                     	;# 
   127  0111                     	;# 
   128  0112                     	;# 
   129  0113                     	;# 
   130  0114                     	;# 
   131  0115                     	;# 
   132  0116                     	;# 
   133  0117                     	;# 
   134  0118                     	;# 
   135  0119                     	;# 
   136  011C                     	;# 
   137  018C                     	;# 
   138  018D                     	;# 
   139  018E                     	;# 
   140  0191                     	;# 
   141  0191                     	;# 
   142  0192                     	;# 
   143  0193                     	;# 
   144  0193                     	;# 
   145  0194                     	;# 
   146  0195                     	;# 
   147  0196                     	;# 
   148  0197                     	;# 
   149  0199                     	;# 
   150  0199                     	;# 
   151  0199                     	;# 
   152  019A                     	;# 
   153  019A                     	;# 
   154  019A                     	;# 
   155  019B                     	;# 
   156  019B                     	;# 
   157  019B                     	;# 
   158  019B                     	;# 
   159  019B                     	;# 
   160  019C                     	;# 
   161  019C                     	;# 
   162  019C                     	;# 
   163  019D                     	;# 
   164  019D                     	;# 
   165  019D                     	;# 
   166  019E                     	;# 
   167  019E                     	;# 
   168  019E                     	;# 
   169  019F                     	;# 
   170  019F                     	;# 
   171  019F                     	;# 
   172  019F                     	;# 
   173  019F                     	;# 
   174  020C                     	;# 
   175  020D                     	;# 
   176  020E                     	;# 
   177  0211                     	;# 
   178  0211                     	;# 
   179  0212                     	;# 
   180  0212                     	;# 
   181  0213                     	;# 
   182  0213                     	;# 
   183  0214                     	;# 
   184  0214                     	;# 
   185  0215                     	;# 
   186  0215                     	;# 
   187  0215                     	;# 
   188  0215                     	;# 
   189  0216                     	;# 
   190  0216                     	;# 
   191  0217                     	;# 
   192  0217                     	;# 
   193  028C                     	;# 
   194  028D                     	;# 
   195  028E                     	;# 
   196  0291                     	;# 
   197  0291                     	;# 
   198  0292                     	;# 
   199  0293                     	;# 
   200  0294                     	;# 
   201  0298                     	;# 
   202  0298                     	;# 
   203  0299                     	;# 
   204  029A                     	;# 
   205  029B                     	;# 
   206  029E                     	;# 
   207  030C                     	;# 
   208  030D                     	;# 
   209  030E                     	;# 
   210  038C                     	;# 
   211  038D                     	;# 
   212  038E                     	;# 
   213  0391                     	;# 
   214  0392                     	;# 
   215  0393                     	;# 
   216  0394                     	;# 
   217  0395                     	;# 
   218  0396                     	;# 
   219  0397                     	;# 
   220  0398                     	;# 
   221  0399                     	;# 
   222  040E                     	;# 
   223  0413                     	;# 
   224  0413                     	;# 
   225  0414                     	;# 
   226  0414                     	;# 
   227  0415                     	;# 
   228  0416                     	;# 
   229  0417                     	;# 
   230  0418                     	;# 
   231  041A                     	;# 
   232  041A                     	;# 
   233  041B                     	;# 
   234  041B                     	;# 
   235  041C                     	;# 
   236  041D                     	;# 
   237  041E                     	;# 
   238  041F                     	;# 
   239  0493                     	;# 
   240  0494                     	;# 
   241  0495                     	;# 
   242  0496                     	;# 
   243  049A                     	;# 
   244  049B                     	;# 
   245  049C                     	;# 
   246  049D                     	;# 
   247  058C                     	;# 
   248  058C                     	;# 
   249  058D                     	;# 
   250  058E                     	;# 
   251  058E                     	;# 
   252  058F                     	;# 
   253  0590                     	;# 
   254  0590                     	;# 
   255  0591                     	;# 
   256  0592                     	;# 
   257  0592                     	;# 
   258  0593                     	;# 
   259  0594                     	;# 
   260  0594                     	;# 
   261  0595                     	;# 
   262  0596                     	;# 
   263  0596                     	;# 
   264  0597                     	;# 
   265  0598                     	;# 
   266  0599                     	;# 
   267  059A                     	;# 
   268  059B                     	;# 
   269  059B                     	;# 
   270  059C                     	;# 
   271  059D                     	;# 
   272  060C                     	;# 
   273  060C                     	;# 
   274  060D                     	;# 
   275  060E                     	;# 
   276  060F                     	;# 
   277  060F                     	;# 
   278  0610                     	;# 
   279  0611                     	;# 
   280  0612                     	;# 
   281  0613                     	;# 
   282  0614                     	;# 
   283  0617                     	;# 
   284  0617                     	;# 
   285  0618                     	;# 
   286  0619                     	;# 
   287  061A                     	;# 
   288  061A                     	;# 
   289  061B                     	;# 
   290  061C                     	;# 
   291  0691                     	;# 
   292  0692                     	;# 
   293  0693                     	;# 
   294  0694                     	;# 
   295  0695                     	;# 
   296  0696                     	;# 
   297  0697                     	;# 
   298  0699                     	;# 
   299  069A                     	;# 
   300  0711                     	;# 
   301  0712                     	;# 
   302  0713                     	;# 
   303  0714                     	;# 
   304  0715                     	;# 
   305  0718                     	;# 
   306  0718                     	;# 
   307  0719                     	;# 
   308  071A                     	;# 
   309  071A                     	;# 
   310  071B                     	;# 
   311  071C                     	;# 
   312  071D                     	;# 
   313  0791                     	;# 
   314  0791                     	;# 
   315  0792                     	;# 
   316  0793                     	;# 
   317  0793                     	;# 
   318  0794                     	;# 
   319  0795                     	;# 
   320  0795                     	;# 
   321  0796                     	;# 
   322  0797                     	;# 
   323  0797                     	;# 
   324  0798                     	;# 
   325  0799                     	;# 
   326  079A                     	;# 
   327  080C                     	;# 
   328  080C                     	;# 
   329  080D                     	;# 
   330  080E                     	;# 
   331  080E                     	;# 
   332  080F                     	;# 
   333  0810                     	;# 
   334  0810                     	;# 
   335  0811                     	;# 
   336  0812                     	;# 
   337  0812                     	;# 
   338  0813                     	;# 
   339  0814                     	;# 
   340  0815                     	;# 
   341  0816                     	;# 
   342  0817                     	;# 
   343  0818                     	;# 
   344  0819                     	;# 
   345  081A                     	;# 
   346  081A                     	;# 
   347  081B                     	;# 
   348  081C                     	;# 
   349  081C                     	;# 
   350  081D                     	;# 
   351  088C                     	;# 
   352  088D                     	;# 
   353  088E                     	;# 
   354  088F                     	;# 
   355  088F                     	;# 
   356  0890                     	;# 
   357  0891                     	;# 
   358  0892                     	;# 
   359  0893                     	;# 
   360  0893                     	;# 
   361  0894                     	;# 
   362  0895                     	;# 
   363  0896                     	;# 
   364  0897                     	;# 
   365  0897                     	;# 
   366  0898                     	;# 
   367  0899                     	;# 
   368  0D8C                     	;# 
   369  0D8C                     	;# 
   370  0D8D                     	;# 
   371  0D8E                     	;# 
   372  0D8F                     	;# 
   373  0D8F                     	;# 
   374  0D90                     	;# 
   375  0D91                     	;# 
   376  0D92                     	;# 
   377  0D92                     	;# 
   378  0D93                     	;# 
   379  0D94                     	;# 
   380  0D95                     	;# 
   381  0D95                     	;# 
   382  0D96                     	;# 
   383  0D97                     	;# 
   384  0D98                     	;# 
   385  0D99                     	;# 
   386  0D9A                     	;# 
   387  0D9B                     	;# 
   388  0D9C                     	;# 
   389  0D9D                     	;# 
   390  0D9E                     	;# 
   391  0D9E                     	;# 
   392  0D9F                     	;# 
   393  0DA0                     	;# 
   394  0DA1                     	;# 
   395  0DA1                     	;# 
   396  0DA2                     	;# 
   397  0DA3                     	;# 
   398  0DA4                     	;# 
   399  0DA4                     	;# 
   400  0DA5                     	;# 
   401  0DA6                     	;# 
   402  0DA7                     	;# 
   403  0DA7                     	;# 
   404  0DA8                     	;# 
   405  0DA9                     	;# 
   406  0DAA                     	;# 
   407  0DAB                     	;# 
   408  0DAC                     	;# 
   409  0DAD                     	;# 
   410  0DAE                     	;# 
   411  0DAF                     	;# 
   412  0E0F                     	;# 
   413  0E10                     	;# 
   414  0E11                     	;# 
   415  0E12                     	;# 
   416  0E13                     	;# 
   417  0E14                     	;# 
   418  0E15                     	;# 
   419  0E16                     	;# 
   420  0E17                     	;# 
   421  0E18                     	;# 
   422  0E19                     	;# 
   423  0E1A                     	;# 
   424  0E1B                     	;# 
   425  0E1C                     	;# 
   426  0E1D                     	;# 
   427  0E1E                     	;# 
   428  0E1F                     	;# 
   429  0E20                     	;# 
   430  0E21                     	;# 
   431  0E22                     	;# 
   432  0E23                     	;# 
   433  0E24                     	;# 
   434  0E25                     	;# 
   435  0E26                     	;# 
   436  0E27                     	;# 
   437  0E28                     	;# 
   438  0E29                     	;# 
   439  0E2A                     	;# 
   440  0E2B                     	;# 
   441  0E2C                     	;# 
   442  0E2D                     	;# 
   443  0E2E                     	;# 
   444  0E90                     	;# 
   445  0E91                     	;# 
   446  0E92                     	;# 
   447  0E94                     	;# 
   448  0E95                     	;# 
   449  0E9C                     	;# 
   450  0E9D                     	;# 
   451  0E9E                     	;# 
   452  0E9F                     	;# 
   453  0EA0                     	;# 
   454  0EA1                     	;# 
   455  0EA2                     	;# 
   456  0EA3                     	;# 
   457  0EA4                     	;# 
   458  0EA5                     	;# 
   459  0EA6                     	;# 
   460  0EA7                     	;# 
   461  0F0F                     	;# 
   462  0F10                     	;# 
   463  0F11                     	;# 
   464  0F12                     	;# 
   465  0F13                     	;# 
   466  0F14                     	;# 
   467  0F15                     	;# 
   468  0F16                     	;# 
   469  0F17                     	;# 
   470  0F18                     	;# 
   471  0F19                     	;# 
   472  0F1A                     	;# 
   473  0F1B                     	;# 
   474  0F1C                     	;# 
   475  0F1D                     	;# 
   476  0F1E                     	;# 
   477  0F1F                     	;# 
   478  0F20                     	;# 
   479  0F21                     	;# 
   480  0F22                     	;# 
   481  0F23                     	;# 
   482  0F24                     	;# 
   483  0F25                     	;# 
   484  0F26                     	;# 
   485  0F27                     	;# 
   486  0F28                     	;# 
   487  0F29                     	;# 
   488  0F2A                     	;# 
   489  0F2B                     	;# 
   490  0F2C                     	;# 
   491  0F2D                     	;# 
   492  0F2E                     	;# 
   493  0F2F                     	;# 
   494  0F30                     	;# 
   495  0F31                     	;# 
   496  0F32                     	;# 
   497  0F33                     	;# 
   498  0F34                     	;# 
   499  0F35                     	;# 
   500  0F36                     	;# 
   501  0F37                     	;# 
   502  0FE4                     	;# 
   503  0FE5                     	;# 
   504  0FE6                     	;# 
   505  0FE7                     	;# 
   506  0FE8                     	;# 
   507  0FE9                     	;# 
   508  0FEA                     	;# 
   509  0FEB                     	;# 
   510  0FED                     	;# 
   511  0FEE                     	;# 
   512  0FEF                     	;# 
   513  0013                     _PIR4bits	set	19
   514  000B                     _INTCONbits	set	11
   515  0098                     _OSCTUNEbits	set	152
   516  0093                     _PIE4bits	set	147
   517  0099                     _OSCCONbits	set	153
   518  008E                     _TRISCbits	set	142
   519  008C                     _TRISAbits	set	140
   520  008D                     _TRISBbits	set	141
   521  010D                     _LATBbits	set	269
   522  019A                     _TX1REG	set	410
   523  018C                     _ANSELAbits	set	396
   524  019B                     _SPBRGL	set	411
   525  019C                     _SPBRGH	set	412
   526  019F                     _BAUD1CONbits	set	415
   527  019D                     _RC1STAbits	set	413
   528  019E                     _TX1STAbits	set	414
   529  0D9E                     _SMT2TMR	set	3486
   530  0D8F                     _SMT1CPR	set	3471
   531  0D95                     _SMT1PR	set	3477
   532  0DAA                     _SMT2CON0bits	set	3498
   533  0DAB                     _SMT2CON1bits	set	3499
   534  0D99                     _SMT1CON1bits	set	3481
   535  0D98                     _SMT1CON0bits	set	3480
   536  0E9E                     _RB6PPS	set	3742
   537  0EA7                     _RC7PPS	set	3751
   538  0F10                     _CLC1CONbits	set	3856
   539  0F15                     _CLC1SEL3	set	3861
   540  0F14                     _CLC1SEL2	set	3860
   541  0F13                     _CLC1SEL1	set	3859
   542  0F12                     _CLC1SEL0	set	3858
   543  0F11                     _CLC1POL	set	3857
   544  0F19                     _CLC1GLS3	set	3865
   545  0F18                     _CLC1GLS2	set	3864
   546  0F17                     _CLC1GLS1	set	3863
   547  0F16                     _CLC1GLS0	set	3862
   548  0F10                     _CLC1CON	set	3856
   549                           
   550                           	psect	stringtext1
   551  06CD                     __pstringtext1:
   552  06CD                     STR_1:
   553  06CD  3425               	retlw	37	;'%'
   554  06CE  346C               	retlw	108	;'l'
   555  06CF  3464               	retlw	100	;'d'
   556  06D0  340A               	retlw	10
   557  06D1  3400               	retlw	0
   558                           
   559                           	psect	stringtext2
   560  06D2                     __pstringtext2:
   561  06D2                     STR_2:
   562  06D2  346C               	retlw	108	;'l'
   563  06D3  3464               	retlw	100	;'d'
   564  06D4  3400               	retlw	0
   565                           
   566                           	psect	stringtext3
   567  06D5                     __pstringtext3:
   568  06D5                     STR_6:
   569  06D5  346C               	retlw	108	;'l'
   570  06D6  3469               	retlw	105	;'i'
   571  06D7  3400               	retlw	0
   572                           
   573                           	psect	stringtext4
   574  0000                     __pstringtext4:
   575  06D2                     
   576                           	psect	cinit
   577  0034                     start_initialization:	
   578                           ; #config settings
   579                           
   580  0034                     __initialization:
   581                           
   582                           ; Clear objects allocated to BANK0
   583  0034  0020               	movlb	0	; select bank0
   584  0035  01ED               	clrf	__pbssBANK0& (0+127)
   585  0036  01EE               	clrf	(__pbssBANK0+1)& (0+127)
   586  0037  01EF               	clrf	(__pbssBANK0+2)& (0+127)
   587                           
   588                           ; Clear objects allocated to BANK1
   589  0038  30A0               	movlw	low __pbssBANK1
   590  0039  0084               	movwf	4
   591  003A  3000               	movlw	high __pbssBANK1
   592  003B  0085               	movwf	5
   593  003C  302A               	movlw	42
   594  003D  3186  26C7         	fcall	clear_ram0
   595  003F                     end_of_initialization:	
   596                           ;End of C runtime variable initialization code
   597                           
   598  003F                     __end_of__initialization:
   599  003F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   600  0040  0020               	movlb	0
   601  0041  3184  2C94         	ljmp	_main	;jump to C main() function
   602                           
   603                           	psect	bssBANK0
   604  006D                     __pbssBANK0:
   605  006D                     _flags:
   606  006D                     	ds	2
   607  006F                     _dataAvailable:
   608  006F                     	ds	1
   609                           
   610                           	psect	bssBANK1
   611  00A0                     __pbssBANK1:
   612  00A0                     _smt2Value:
   613  00A0                     	ds	4
   614  00A4                     _nout:
   615  00A4                     	ds	2
   616  00A6                     _width:
   617  00A6                     	ds	2
   618  00A8                     _prec:
   619  00A8                     	ds	2
   620  00AA                     _dbuf:
   621  00AA                     	ds	32
   622                           
   623                           	psect	clrtext
   624  06C7                     clear_ram0:	
   625                           ;	Called with FSR0 containing the base address, and
   626                           ;	WREG with the size to clear
   627                           
   628  06C7  0064               	clrwdt	;clear the watchdog before getting into this loop
   629  06C8                     clrloop0:
   630  06C8  0180               	clrf	0	;clear RAM location pointed to by FSR
   631  06C9  3101               	addfsr 0,1
   632  06CA  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   633  06CB  2EC8               	goto	clrloop0	;have we reached the end yet?
   634  06CC  3400               	retlw	0	;all done for this memory range, return
   635                           
   636                           	psect	cstackCOMMON
   637  0070                     __pcstackCOMMON:
   638  0070                     ?_smt_init:
   639  0070                     ?_uart_init:	
   640                           ; 1 bytes @ 0x0
   641                           
   642  0070                     ?_main:	
   643                           ; 1 bytes @ 0x0
   644                           
   645  0070                     ?_myIsr:	
   646                           ; 1 bytes @ 0x0
   647                           
   648  0070                     ??_myIsr:	
   649                           ; 1 bytes @ 0x0
   650                           
   651  0070                     ?_putch:	
   652                           ; 1 bytes @ 0x0
   653                           
   654                           
   655                           ; 1 bytes @ 0x0
   656  0070                     	ds	1
   657  0071                     ??_smt_init:
   658  0071                     ??_uart_init:	
   659                           ; 1 bytes @ 0x1
   660                           
   661  0071                     ??_putch:	
   662                           ; 1 bytes @ 0x1
   663                           
   664  0071                     ??___aodiv:	
   665                           ; 1 bytes @ 0x1
   666                           
   667  0071                     ??___aomod:	
   668                           ; 1 bytes @ 0x1
   669                           
   670  0071                     ?_strlen:	
   671                           ; 1 bytes @ 0x1
   672                           
   673  0071                     ?_strncmp:	
   674                           ; 2 bytes @ 0x1
   675                           
   676  0071                     ?___ltdiv:	
   677                           ; 2 bytes @ 0x1
   678                           
   679  0071                     putch@c:	
   680                           ; 3 bytes @ 0x1
   681                           
   682  0071                     strncmp@_l:	
   683                           ; 1 bytes @ 0x1
   684                           
   685  0071                     ___ltdiv@divisor:	
   686                           ; 2 bytes @ 0x1
   687                           
   688                           
   689                           ; 3 bytes @ 0x1
   690  0071                     	ds	1
   691  0072                     ?_fputc:
   692  0072                     ___aodiv@counter:	
   693                           ; 2 bytes @ 0x2
   694                           
   695  0072                     ___aomod@counter:	
   696                           ; 1 bytes @ 0x2
   697                           
   698  0072                     fputc@c:	
   699                           ; 1 bytes @ 0x2
   700                           
   701                           
   702                           ; 2 bytes @ 0x2
   703  0072                     	ds	1
   704  0073                     ??_strlen:
   705  0073                     ___aodiv@sign:	
   706                           ; 1 bytes @ 0x3
   707                           
   708  0073                     ___aomod@sign:	
   709                           ; 1 bytes @ 0x3
   710                           
   711  0073                     strncmp@_r:	
   712                           ; 1 bytes @ 0x3
   713                           
   714                           
   715                           ; 2 bytes @ 0x3
   716  0073                     	ds	1
   717  0074                     ?_abs:
   718  0074                     fputc@fp:	
   719                           ; 2 bytes @ 0x4
   720                           
   721  0074                     strlen@a:	
   722                           ; 1 bytes @ 0x4
   723                           
   724  0074                     abs@a:	
   725                           ; 1 bytes @ 0x4
   726                           
   727  0074                     ___ltdiv@dividend:	
   728                           ; 2 bytes @ 0x4
   729                           
   730  0074                     ___aodiv@quotient:	
   731                           ; 3 bytes @ 0x4
   732                           
   733                           
   734                           ; 8 bytes @ 0x4
   735  0074                     	ds	1
   736  0075                     ??_fputc:
   737  0075                     strlen@s:	
   738                           ; 1 bytes @ 0x5
   739                           
   740  0075                     strncmp@n:	
   741                           ; 1 bytes @ 0x5
   742                           
   743                           
   744                           ; 2 bytes @ 0x5
   745  0075                     	ds	1
   746  0076                     ??_abs:
   747                           
   748                           ; 1 bytes @ 0x6
   749  0076                     	ds	1
   750  0077                     ??_strncmp:
   751  0077                     ??___ltdiv:	
   752                           ; 1 bytes @ 0x7
   753                           
   754                           
   755                           ; 1 bytes @ 0x7
   756  0077                     	ds	1
   757  0078                     strncmp@l:
   758  0078                     ___ltdiv@quotient:	
   759                           ; 2 bytes @ 0x8
   760                           
   761                           
   762                           ; 3 bytes @ 0x8
   763  0078                     	ds	2
   764  007A                     ?_fputs:
   765  007A                     fputs@fp:	
   766                           ; 2 bytes @ 0xA
   767                           
   768  007A                     strncmp@r:	
   769                           ; 1 bytes @ 0xA
   770                           
   771                           
   772                           ; 2 bytes @ 0xA
   773  007A                     	ds	1
   774  007B                     ??_pad:
   775  007B                     ___ltdiv@counter:	
   776                           ; 1 bytes @ 0xB
   777                           
   778                           
   779                           ; 1 bytes @ 0xB
   780  007B                     	ds	1
   781  007C                     ??_printf:
   782                           
   783                           ; 1 bytes @ 0xC
   784  007C                     	ds	1
   785  007D                     ??_main:
   786                           
   787                           	psect	cstackBANK0
   788  0020                     __pcstackBANK0:	
   789                           ; 1 bytes @ 0xD
   790                           
   791  0020                     ??_fputs:
   792  0020                     ?___aodiv:	
   793                           ; 1 bytes @ 0x0
   794                           
   795  0020                     ?___aomod:	
   796                           ; 8 bytes @ 0x0
   797                           
   798  0020                     ___aodiv@divisor:	
   799                           ; 8 bytes @ 0x0
   800                           
   801  0020                     ___aomod@divisor:	
   802                           ; 8 bytes @ 0x0
   803                           
   804                           
   805                           ; 8 bytes @ 0x0
   806  0020                     	ds	3
   807  0023                     fputs@c:
   808                           
   809                           ; 1 bytes @ 0x3
   810  0023                     	ds	1
   811  0024                     fputs@i:
   812                           
   813                           ; 2 bytes @ 0x4
   814  0024                     	ds	2
   815  0026                     fputs@s:
   816                           
   817                           ; 1 bytes @ 0x6
   818  0026                     	ds	1
   819  0027                     ?_pad:
   820  0027                     pad@buf:	
   821                           ; 2 bytes @ 0x7
   822                           
   823                           
   824                           ; 1 bytes @ 0x7
   825  0027                     	ds	1
   826  0028                     pad@p:
   827  0028                     ___aodiv@dividend:	
   828                           ; 2 bytes @ 0x8
   829                           
   830  0028                     ___aomod@dividend:	
   831                           ; 8 bytes @ 0x8
   832                           
   833                           
   834                           ; 8 bytes @ 0x8
   835  0028                     	ds	2
   836  002A                     pad@i:
   837                           
   838                           ; 2 bytes @ 0xA
   839  002A                     	ds	2
   840  002C                     pad@w:
   841                           
   842                           ; 2 bytes @ 0xC
   843  002C                     	ds	2
   844  002E                     pad@fp:
   845                           
   846                           ; 1 bytes @ 0xE
   847  002E                     	ds	2
   848  0030                     ?_dtoa:
   849  0030                     dtoa@d:	
   850                           ; 2 bytes @ 0x10
   851                           
   852                           
   853                           ; 8 bytes @ 0x10
   854  0030                     	ds	8
   855  0038                     ??_dtoa:
   856                           
   857                           ; 1 bytes @ 0x18
   858  0038                     	ds	3
   859  003B                     _dtoa$1028:
   860                           
   861                           ; 2 bytes @ 0x1B
   862  003B                     	ds	2
   863  003D                     dtoa@p:
   864                           
   865                           ; 2 bytes @ 0x1D
   866  003D                     	ds	2
   867  003F                     dtoa@fp:
   868                           
   869                           ; 1 bytes @ 0x1F
   870  003F                     	ds	1
   871  0040                     dtoa@w:
   872                           
   873                           ; 2 bytes @ 0x20
   874  0040                     	ds	2
   875  0042                     dtoa@s:
   876                           
   877                           ; 2 bytes @ 0x22
   878  0042                     	ds	2
   879  0044                     dtoa@n:
   880                           
   881                           ; 8 bytes @ 0x24
   882  0044                     	ds	8
   883  004C                     dtoa@i:
   884                           
   885                           ; 2 bytes @ 0x2C
   886  004C                     	ds	2
   887  004E                     ?_vfpfcnvrt:
   888  004E                     vfpfcnvrt@fmt:	
   889                           ; 2 bytes @ 0x2E
   890                           
   891                           
   892                           ; 1 bytes @ 0x2E
   893  004E                     	ds	1
   894  004F                     vfpfcnvrt@ap:
   895                           
   896                           ; 1 bytes @ 0x2F
   897  004F                     	ds	1
   898  0050                     ??_vfpfcnvrt:
   899                           
   900                           ; 1 bytes @ 0x30
   901  0050                     	ds	5
   902  0055                     vfpfcnvrt@ll:
   903                           
   904                           ; 8 bytes @ 0x35
   905  0055                     	ds	8
   906  005D                     vfpfcnvrt@fp:
   907                           
   908                           ; 1 bytes @ 0x3D
   909  005D                     	ds	1
   910  005E                     ?_vfprintf:
   911  005E                     vfprintf@fmt:	
   912                           ; 2 bytes @ 0x3E
   913                           
   914                           
   915                           ; 2 bytes @ 0x3E
   916  005E                     	ds	2
   917  0060                     vfprintf@ap:
   918                           
   919                           ; 1 bytes @ 0x40
   920  0060                     	ds	1
   921  0061                     ??_vfprintf:
   922                           
   923                           ; 1 bytes @ 0x41
   924  0061                     	ds	2
   925  0063                     vfprintf@fp:
   926                           
   927                           ; 1 bytes @ 0x43
   928  0063                     	ds	1
   929  0064                     vfprintf@cfmt:
   930                           
   931                           ; 2 bytes @ 0x44
   932  0064                     	ds	2
   933  0066                     ?_printf:
   934  0066                     printf@fmt:	
   935                           ; 2 bytes @ 0x46
   936                           
   937                           
   938                           ; 2 bytes @ 0x46
   939  0066                     	ds	6
   940  006C                     printf@ap:
   941                           
   942                           ; 1 bytes @ 0x4C
   943  006C                     	ds	1
   944                           
   945                           	psect	maintext
   946  0494                     __pmaintext:	
   947 ;;
   948 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   949 ;;
   950 ;; *************** function _main *****************
   951 ;; Defined at:
   952 ;;		line 75 in file "smt_main.c"
   953 ;; Parameters:    Size  Location     Type
   954 ;;		None
   955 ;; Auto vars:     Size  Location     Type
   956 ;;		None
   957 ;; Return value:  Size  Location     Type
   958 ;;                  1    wreg      void 
   959 ;; Registers used:
   960 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   961 ;; Tracked objects:
   962 ;;		On entry : B1F/0
   963 ;;		On exit  : 1F/0
   964 ;;		Unchanged: 0/0
   965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   969 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   970 ;;Total ram usage:        0 bytes
   971 ;; Hardware stack levels required when called: 9
   972 ;; This function calls:
   973 ;;		___ltdiv
   974 ;;		_printf
   975 ;;		_smt_init
   976 ;;		_uart_init
   977 ;; This function is called by:
   978 ;;		Startup code after reset
   979 ;; This function uses a non-reentrant model
   980 ;;
   981                           
   982                           
   983                           ;psect for function _main
   984  0494                     _main:
   985                           
   986                           ;smt_main.c: 76:     TRISBbits.TRISB7 = 0;
   987                           
   988                           ;incstack = 0
   989                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   990  0494  0021               	movlb	1	; select bank1
   991  0495  138D               	bcf	13,7	;volatile
   992                           
   993                           ;smt_main.c: 77:     TRISAbits.TRISA4 = 1;
   994  0496  160C               	bsf	12,4	;volatile
   995                           
   996                           ;smt_main.c: 78:     ANSELAbits.ANSA4 =0;
   997  0497  0023               	movlb	3	; select bank3
   998  0498  120C               	bcf	12,4	;volatile
   999                           
  1000                           ;smt_main.c: 79:     TRISBbits.TRISB6 = 0;
  1001  0499  0021               	movlb	1	; select bank1
  1002  049A  130D               	bcf	13,6	;volatile
  1003                           
  1004                           ;smt_main.c: 80:     TRISCbits.TRISC7 = 1;
  1005  049B  178E               	bsf	14,7	;volatile
  1006                           
  1007                           ;smt_main.c: 81:     OSCCONbits.SCS = 0;
  1008  049C  30FC               	movlw	-4
  1009  049D  0599               	andwf	25,f	;volatile
  1010                           
  1011                           ;smt_main.c: 82:     OSCCONbits.IRCF = 0b1110;
  1012  049E  0819               	movf	25,w	;volatile
  1013  049F  3987               	andlw	-121
  1014  04A0  3870               	iorlw	112
  1015  04A1  0099               	movwf	25	;volatile
  1016                           
  1017                           ;smt_main.c: 83:     INTCONbits.GIE = 1;
  1018  04A2  178B               	bsf	11,7	;volatile
  1019                           
  1020                           ;smt_main.c: 84:     INTCONbits.PEIE = 1;
  1021  04A3  170B               	bsf	11,6	;volatile
  1022                           
  1023                           ;smt_main.c: 85:     PIE4bits.SMT1PRAIE = 1;
  1024  04A4  1493               	bsf	19,1	;volatile
  1025                           
  1026                           ;smt_main.c: 86:     PIE4bits.SMT2IE = 1;
  1027  04A5  1593               	bsf	19,3	;volatile
  1028                           
  1029                           ;smt_main.c: 87:     OSCTUNEbits.TUN = 0b011111;
  1030  04A6  0818               	movf	24,w	;volatile
  1031  04A7  39C0               	andlw	-64
  1032  04A8  381F               	iorlw	31
  1033  04A9  0098               	movwf	24	;volatile
  1034                           
  1035                           ;smt_main.c: 89:     smt_init();
  1036  04AA  3186  265C  3184   	fcall	_smt_init
  1037                           
  1038                           ;smt_main.c: 90:     uart_init();
  1039  04AD  3186  26B4  3184   	fcall	_uart_init
  1040                           
  1041                           ;smt_main.c: 91:     CLC1CON = 0x86;
  1042  04B0  3086               	movlw	134
  1043  04B1  003E               	movlb	30	; select bank30
  1044  04B2  0090               	movwf	16	;volatile
  1045                           
  1046                           ;smt_main.c: 92:     CLC1GLS0 = 0x02;
  1047  04B3  3002               	movlw	2
  1048  04B4  0096               	movwf	22	;volatile
  1049                           
  1050                           ;smt_main.c: 93:     CLC1GLS1 = 0;
  1051  04B5  0197               	clrf	23	;volatile
  1052                           
  1053                           ;smt_main.c: 94:     CLC1GLS2 = 0;
  1054  04B6  0198               	clrf	24	;volatile
  1055                           
  1056                           ;smt_main.c: 95:     CLC1GLS3 = 0;
  1057  04B7  0199               	clrf	25	;volatile
  1058                           
  1059                           ;smt_main.c: 96:     CLC1POL = 0xA;
  1060  04B8  300A               	movlw	10
  1061  04B9  0091               	movwf	17	;volatile
  1062                           
  1063                           ;smt_main.c: 97:     CLC1SEL0 = 0x14;
  1064  04BA  3014               	movlw	20
  1065  04BB  0092               	movwf	18	;volatile
  1066                           
  1067                           ;smt_main.c: 98:     CLC1SEL1 = 0;
  1068  04BC  0193               	clrf	19	;volatile
  1069                           
  1070                           ;smt_main.c: 99:     CLC1SEL2 = 0;
  1071  04BD  0194               	clrf	20	;volatile
  1072                           
  1073                           ;smt_main.c: 100:     CLC1SEL3 = 0;
  1074  04BE  0195               	clrf	21	;volatile
  1075                           
  1076                           ;smt_main.c: 101:     RB6PPS = 0b00100;
  1077  04BF  3004               	movlw	4
  1078  04C0  003D               	movlb	29	; select bank29
  1079  04C1  009E               	movwf	30	;volatile
  1080                           
  1081                           ;smt_main.c: 102:     CLC1CONbits.EN = 1;
  1082  04C2  003E               	movlb	30	; select bank30
  1083  04C3  1790               	bsf	16,7	;volatile
  1084  04C4                     l1524:
  1085                           
  1086                           ;smt_main.c: 104:     {;smt_main.c: 105:         if(dataAvailable)
  1087  04C4  0020               	movlb	0	; select bank0
  1088  04C5  086F               	movf	_dataAvailable,w	;volatile
  1089  04C6  1903               	btfsc	3,2
  1090  04C7  2CC4               	goto	l1524
  1091                           
  1092                           ;smt_main.c: 106:         {;smt_main.c: 107:             smt2Value = ((SMT1CPR&0xffffff)
      +                          /25);
  1093  04C8  3019               	movlw	25
  1094  04C9  00F1               	movwf	___ltdiv@divisor
  1095  04CA  3000               	movlw	0
  1096  04CB  00F2               	movwf	___ltdiv@divisor+1
  1097  04CC  3000               	movlw	0
  1098  04CD  00F3               	movwf	___ltdiv@divisor+2
  1099  04CE  003B               	movlb	27	; select bank27
  1100  04CF  080F               	movf	15,w	;volatile
  1101  04D0  00F4               	movwf	___ltdiv@dividend
  1102  04D1  0810               	movf	16,w	;volatile
  1103  04D2  00F5               	movwf	___ltdiv@dividend+1
  1104  04D3  0811               	movf	17,w	;volatile
  1105  04D4  00F6               	movwf	___ltdiv@dividend+2
  1106  04D5  3185  2592  3184   	fcall	___ltdiv
  1107  04D8  0871               	movf	?___ltdiv,w
  1108  04D9  0021               	movlb	1	; select bank1
  1109  04DA  00A0               	movwf	_smt2Value^(0+128)	;volatile
  1110  04DB  0872               	movf	?___ltdiv+1,w
  1111  04DC  00A1               	movwf	(_smt2Value^(0+128)+1)	;volatile
  1112  04DD  0873               	movf	?___ltdiv+2,w
  1113  04DE  00A2               	movwf	(_smt2Value^(0+128)+2)	;volatile
  1114  04DF  01A3               	clrf	(_smt2Value^(0+128)+3)	;volatile
  1115                           
  1116                           ;smt_main.c: 108:             printf("%ld\n",SMT1CPR&0xffffff);
  1117  04E0  30CD               	movlw	low (STR_1| (0+32768))
  1118  04E1  0020               	movlb	0	; select bank0
  1119  04E2  00E6               	movwf	printf@fmt
  1120  04E3  3086               	movlw	high (STR_1| (0+32768))
  1121  04E4  00E7               	movwf	printf@fmt+1
  1122  04E5  003B               	movlb	27	; select bank27
  1123  04E6  080F               	movf	15,w	;volatile
  1124  04E7  0020               	movlb	0	; select bank0
  1125  04E8  00E8               	movwf	?_printf+2
  1126  04E9  003B               	movlb	27	; select bank27
  1127  04EA  0810               	movf	16,w	;volatile
  1128  04EB  0020               	movlb	0	; select bank0
  1129  04EC  00E9               	movwf	?_printf+3
  1130  04ED  003B               	movlb	27	; select bank27
  1131  04EE  0811               	movf	17,w	;volatile
  1132  04EF  0020               	movlb	0	; select bank0
  1133  04F0  00EA               	movwf	?_printf+4
  1134  04F1  01EB               	clrf	?_printf+5
  1135  04F2  3186  26A4  3184   	fcall	_printf
  1136                           
  1137                           ;smt_main.c: 109:             dataAvailable = 0;
  1138  04F5  01EF               	clrf	_dataAvailable	;volatile
  1139  04F6  2CC4               	goto	l1524
  1140  04F7                     __end_of_main:
  1141                           
  1142                           	psect	text1
  1143  06B4                     __ptext1:	
  1144 ;; *************** function _uart_init *****************
  1145 ;; Defined at:
  1146 ;;		line 59 in file "smt_main.c"
  1147 ;; Parameters:    Size  Location     Type
  1148 ;;		None
  1149 ;; Auto vars:     Size  Location     Type
  1150 ;;		None
  1151 ;; Return value:  Size  Location     Type
  1152 ;;                  1    wreg      void 
  1153 ;; Registers used:
  1154 ;;		wreg, status,2
  1155 ;; Tracked objects:
  1156 ;;		On entry : B1F/1B
  1157 ;;		On exit  : B1F/1D
  1158 ;;		Unchanged: B00/0
  1159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1163 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1164 ;;Total ram usage:        0 bytes
  1165 ;; Hardware stack levels used: 1
  1166 ;; Hardware stack levels required when called: 1
  1167 ;; This function calls:
  1168 ;;		Nothing
  1169 ;; This function is called by:
  1170 ;;		_main
  1171 ;; This function uses a non-reentrant model
  1172 ;;
  1173                           
  1174                           
  1175                           ;psect for function _uart_init
  1176  06B4                     _uart_init:
  1177                           
  1178                           ;smt_main.c: 61:     TX1STAbits.TXEN = 1;
  1179                           
  1180                           ;incstack = 0
  1181                           ; Regs used in _uart_init: [wreg+status,2]
  1182  06B4  0023               	movlb	3	; select bank3
  1183  06B5  169E               	bsf	30,5	;volatile
  1184                           
  1185                           ;smt_main.c: 62:     TX1STAbits.BRGH = 1;
  1186  06B6  151E               	bsf	30,2	;volatile
  1187                           
  1188                           ;smt_main.c: 63:     RC1STAbits.SPEN = 1;
  1189  06B7  179D               	bsf	29,7	;volatile
  1190                           
  1191                           ;smt_main.c: 64:     BAUD1CONbits.BRG16 = 1;
  1192  06B8  159F               	bsf	31,3	;volatile
  1193                           
  1194                           ;smt_main.c: 65:     SPBRGH = 0;
  1195  06B9  019C               	clrf	28	;volatile
  1196                           
  1197                           ;smt_main.c: 66:     SPBRGL = 70;
  1198  06BA  3046               	movlw	70
  1199  06BB  009B               	movwf	27	;volatile
  1200                           
  1201                           ;smt_main.c: 67:     RC7PPS = 0b10010;
  1202  06BC  3012               	movlw	18
  1203  06BD  003D               	movlb	29	; select bank29
  1204  06BE  00A7               	movwf	39	;volatile
  1205  06BF  0008               	return
  1206  06C0                     __end_of_uart_init:
  1207                           
  1208                           	psect	text2
  1209  065C                     __ptext2:	
  1210 ;; *************** function _smt_init *****************
  1211 ;; Defined at:
  1212 ;;		line 43 in file "smt_main.c"
  1213 ;; Parameters:    Size  Location     Type
  1214 ;;		None
  1215 ;; Auto vars:     Size  Location     Type
  1216 ;;		None
  1217 ;; Return value:  Size  Location     Type
  1218 ;;                  1    wreg      void 
  1219 ;; Registers used:
  1220 ;;		wreg, status,2, status,0
  1221 ;; Tracked objects:
  1222 ;;		On entry : B1F/1
  1223 ;;		On exit  : B1F/1B
  1224 ;;		Unchanged: B00/0
  1225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1229 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1230 ;;Total ram usage:        0 bytes
  1231 ;; Hardware stack levels used: 1
  1232 ;; Hardware stack levels required when called: 1
  1233 ;; This function calls:
  1234 ;;		Nothing
  1235 ;; This function is called by:
  1236 ;;		_main
  1237 ;; This function uses a non-reentrant model
  1238 ;;
  1239                           
  1240                           
  1241                           ;psect for function _smt_init
  1242  065C                     _smt_init:
  1243                           
  1244                           ;smt_main.c: 45:     SMT1CON0bits.EN = 1;
  1245                           
  1246                           ;incstack = 0
  1247                           ; Regs used in _smt_init: [wreg+status,2+status,0]
  1248  065C  003B               	movlb	27	; select bank27
  1249  065D  1798               	bsf	24,7	;volatile
  1250                           
  1251                           ;smt_main.c: 46:     SMT1CON1bits.MODE = 0b0010;
  1252  065E  0819               	movf	25,w	;volatile
  1253  065F  39F0               	andlw	-16
  1254  0660  3802               	iorlw	2
  1255  0661  0099               	movwf	25	;volatile
  1256                           
  1257                           ;smt_main.c: 47:     SMT1CON1bits.REPEAT =1;
  1258  0662  1719               	bsf	25,6	;volatile
  1259                           
  1260                           ;smt_main.c: 48:     SMT1CON0bits.SMT1PS = 3;
  1261  0663  3003               	movlw	3
  1262  0664  0498               	iorwf	24,f	;volatile
  1263                           
  1264                           ;smt_main.c: 49:     SMT1PR = 0xffffff;
  1265  0665  30FF               	movlw	255
  1266  0666  0095               	movwf	21	;volatile
  1267  0667  30FF               	movlw	255
  1268  0668  0096               	movwf	22	;volatile
  1269  0669  30FF               	movlw	255
  1270  066A  0097               	movwf	23	;volatile
  1271                           
  1272                           ;smt_main.c: 50:     SMT1CON1bits.SMT1GO = 1;
  1273  066B  1799               	bsf	25,7	;volatile
  1274                           
  1275                           ;smt_main.c: 52:     SMT2CON1bits.MODE = 0;
  1276  066C  30F0               	movlw	-16
  1277  066D  05AB               	andwf	43,f	;volatile
  1278                           
  1279                           ;smt_main.c: 53:     SMT2CON1bits.REPEAT =1;
  1280  066E  172B               	bsf	43,6	;volatile
  1281                           
  1282                           ;smt_main.c: 54:     SMT2CON0bits.SMT2PS = 1;
  1283  066F  082A               	movf	42,w	;volatile
  1284  0670  39FC               	andlw	-4
  1285  0671  3801               	iorlw	1
  1286  0672  00AA               	movwf	42	;volatile
  1287                           
  1288                           ;smt_main.c: 55:     SMT2CON0bits.EN = 1;
  1289  0673  17AA               	bsf	42,7	;volatile
  1290                           
  1291                           ;smt_main.c: 56:     SMT2CON1bits.SMT2GO = 1;
  1292  0674  17AB               	bsf	43,7	;volatile
  1293  0675  0008               	return
  1294  0676                     __end_of_smt_init:
  1295                           
  1296                           	psect	text3
  1297  06A4                     __ptext3:	
  1298 ;; *************** function _printf *****************
  1299 ;; Defined at:
  1300 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\printf.c"
  1301 ;; Parameters:    Size  Location     Type
  1302 ;;  fmt             2   70[BANK0 ] PTR const unsigned char 
  1303 ;;		 -> STR_1(5), 
  1304 ;; Auto vars:     Size  Location     Type
  1305 ;;  ret             2    0        int 
  1306 ;;  ap              1   76[BANK0 ] PTR void [1]
  1307 ;;		 -> ?_printf(2), 
  1308 ;; Return value:  Size  Location     Type
  1309 ;;                  2   70[BANK0 ] int 
  1310 ;; Registers used:
  1311 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1312 ;; Tracked objects:
  1313 ;;		On entry : 1F/0
  1314 ;;		On exit  : 1F/0
  1315 ;;		Unchanged: 0/0
  1316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1317 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1318 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1319 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1320 ;;      Totals:         1       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1321 ;;Total ram usage:        8 bytes
  1322 ;; Hardware stack levels used: 1
  1323 ;; Hardware stack levels required when called: 8
  1324 ;; This function calls:
  1325 ;;		_vfprintf
  1326 ;; This function is called by:
  1327 ;;		_main
  1328 ;; This function uses a non-reentrant model
  1329 ;;
  1330                           
  1331                           
  1332                           ;psect for function _printf
  1333  06A4                     _printf:
  1334                           
  1335                           ;incstack = 0
  1336                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1337  06A4  3068               	movlw	(low ((?_printf| 0+2)))& (0+255)
  1338  06A5  00FC               	movwf	??_printf
  1339  06A6  087C               	movf	??_printf,w
  1340  06A7  00EC               	movwf	printf@ap
  1341  06A8  0867               	movf	printf@fmt+1,w
  1342  06A9  00DF               	movwf	vfprintf@fmt+1
  1343  06AA  0866               	movf	printf@fmt,w
  1344  06AB  00DE               	movwf	vfprintf@fmt
  1345  06AC  306C               	movlw	(low (printf@ap| 0))& (0+255)
  1346  06AD  00FC               	movwf	??_printf
  1347  06AE  087C               	movf	??_printf,w
  1348  06AF  00E0               	movwf	vfprintf@ap
  1349  06B0  3000               	movlw	0
  1350  06B1  3186  260B         	fcall	_vfprintf
  1351  06B3  0008               	return
  1352  06B4                     __end_of_printf:
  1353                           
  1354                           	psect	text4
  1355  060B                     __ptext4:	
  1356 ;; *************** function _vfprintf *****************
  1357 ;; Defined at:
  1358 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1359 ;; Parameters:    Size  Location     Type
  1360 ;;  fp              1    wreg     PTR struct _IO_FILE
  1361 ;;		 -> NULL(0), 
  1362 ;;  fmt             2   62[BANK0 ] PTR const unsigned char 
  1363 ;;		 -> STR_1(5), 
  1364 ;;  ap              1   64[BANK0 ] PTR PTR void 
  1365 ;;		 -> printf@ap(1), 
  1366 ;; Auto vars:     Size  Location     Type
  1367 ;;  fp              1   67[BANK0 ] PTR struct _IO_FILE
  1368 ;;		 -> NULL(0), 
  1369 ;;  cfmt            2   68[BANK0 ] PTR unsigned char 
  1370 ;;		 -> STR_1(5), 
  1371 ;; Return value:  Size  Location     Type
  1372 ;;                  2   62[BANK0 ] int 
  1373 ;; Registers used:
  1374 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1375 ;; Tracked objects:
  1376 ;;		On entry : 1F/0
  1377 ;;		On exit  : 1F/0
  1378 ;;		Unchanged: 0/0
  1379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1380 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1381 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1382 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1383 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1384 ;;Total ram usage:        8 bytes
  1385 ;; Hardware stack levels used: 1
  1386 ;; Hardware stack levels required when called: 7
  1387 ;; This function calls:
  1388 ;;		_vfpfcnvrt
  1389 ;; This function is called by:
  1390 ;;		_printf
  1391 ;; This function uses a non-reentrant model
  1392 ;;
  1393                           
  1394                           
  1395                           ;psect for function _vfprintf
  1396  060B                     _vfprintf:
  1397                           
  1398                           ;incstack = 0
  1399                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1400                           ;vfprintf@fp stored from wreg
  1401  060B  00E3               	movwf	vfprintf@fp
  1402                           
  1403                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1404  060C  085F               	movf	vfprintf@fmt+1,w
  1405  060D  00E5               	movwf	vfprintf@cfmt+1
  1406  060E  085E               	movf	vfprintf@fmt,w
  1407  060F  00E4               	movwf	vfprintf@cfmt
  1408                           
  1409                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1410  0610  0021               	movlb	1	; select bank1
  1411  0611  01A4               	clrf	_nout^(0+128)
  1412  0612  01A5               	clrf	(_nout+1)^(0+128)
  1413  0613                     l1420:	
  1414                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1415                           
  1416                           
  1417                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1418  0613  0020               	movlb	0	; select bank0
  1419  0614  0864               	movf	vfprintf@cfmt,w
  1420  0615  0084               	movwf	4
  1421  0616  0865               	movf	vfprintf@cfmt+1,w
  1422  0617  0085               	movwf	5
  1423  0618  0012               	moviw fsr0++
  1424  0619  1903               	btfsc	3,2
  1425  061A  2E2F               	goto	l1422
  1426                           
  1427                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1428  061B  3064               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  1429  061C  00E1               	movwf	??_vfprintf
  1430  061D  0861               	movf	??_vfprintf,w
  1431  061E  00CE               	movwf	vfpfcnvrt@fmt
  1432  061F  0860               	movf	vfprintf@ap,w
  1433  0620  00E2               	movwf	??_vfprintf+1
  1434  0621  0862               	movf	??_vfprintf+1,w
  1435  0622  00CF               	movwf	vfpfcnvrt@ap
  1436  0623  0863               	movf	vfprintf@fp,w
  1437  0624  3181  218A  3186   	fcall	_vfpfcnvrt
  1438  0627  084E               	movf	?_vfpfcnvrt,w
  1439  0628  0021               	movlb	1	; select bank1
  1440  0629  07A4               	addwf	_nout^(0+128),f
  1441  062A  0020               	movlb	0	; select bank0
  1442  062B  084F               	movf	?_vfpfcnvrt+1,w
  1443  062C  0021               	movlb	1	; select bank1
  1444  062D  3DA5               	addwfc	(_nout+1)^(0+128),f
  1445  062E  2E13               	goto	l1420
  1446  062F                     l1422:
  1447                           
  1448                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1449  062F  0021               	movlb	1	; select bank1
  1450  0630  0825               	movf	(_nout+1)^(0+128),w
  1451  0631  0020               	movlb	0	; select bank0
  1452  0632  00DF               	movwf	?_vfprintf+1
  1453  0633  0021               	movlb	1	; select bank1
  1454  0634  0824               	movf	_nout^(0+128),w
  1455  0635  0020               	movlb	0	; select bank0
  1456  0636  00DE               	movwf	?_vfprintf
  1457  0637  0008               	return
  1458  0638                     __end_of_vfprintf:
  1459                           
  1460                           	psect	text5
  1461  018A                     __ptext5:	
  1462 ;; *************** function _vfpfcnvrt *****************
  1463 ;; Defined at:
  1464 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1465 ;; Parameters:    Size  Location     Type
  1466 ;;  fp              1    wreg     PTR struct _IO_FILE
  1467 ;;		 -> NULL(0), 
  1468 ;;  fmt             1   46[BANK0 ] PTR PTR unsigned char 
  1469 ;;		 -> vfprintf@cfmt(2), 
  1470 ;;  ap              1   47[BANK0 ] PTR PTR void 
  1471 ;;		 -> printf@ap(1), 
  1472 ;; Auto vars:     Size  Location     Type
  1473 ;;  fp              1   61[BANK0 ] PTR struct _IO_FILE
  1474 ;;		 -> NULL(0), 
  1475 ;;  ll              8   53[BANK0 ] long long 
  1476 ;;  llu             8    0        unsigned long long 
  1477 ;;  f               4    0        unsigned long long 
  1478 ;;  ct              3    0        unsigned char [3]
  1479 ;;  vp              2    0        PTR void 
  1480 ;;  i               2    0        int 
  1481 ;;  done            2    0        int 
  1482 ;;  cp              2    0        PTR unsigned char 
  1483 ;;  c               1    0        unsigned char 
  1484 ;; Return value:  Size  Location     Type
  1485 ;;                  2   46[BANK0 ] int 
  1486 ;; Registers used:
  1487 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1488 ;; Tracked objects:
  1489 ;;		On entry : 1F/0
  1490 ;;		On exit  : 1F/0
  1491 ;;		Unchanged: 0/0
  1492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1493 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1494 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1495 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1496 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1497 ;;Total ram usage:       16 bytes
  1498 ;; Hardware stack levels used: 1
  1499 ;; Hardware stack levels required when called: 6
  1500 ;; This function calls:
  1501 ;;		_dtoa
  1502 ;;		_fputc
  1503 ;;		_strncmp
  1504 ;; This function is called by:
  1505 ;;		_vfprintf
  1506 ;; This function uses a non-reentrant model
  1507 ;;
  1508                           
  1509                           
  1510                           ;psect for function _vfpfcnvrt
  1511  018A                     _vfpfcnvrt:
  1512                           
  1513                           ;incstack = 0
  1514                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1515                           ;vfpfcnvrt@fp stored from wreg
  1516  018A  00DD               	movwf	vfpfcnvrt@fp
  1517                           
  1518                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1519  018B  084E               	movf	vfpfcnvrt@fmt,w
  1520  018C  0086               	movwf	6
  1521  018D  0187               	clrf	7
  1522  018E  3F40               	moviw [0]fsr1
  1523  018F  00D0               	movwf	??_vfpfcnvrt
  1524  0190  3F41               	moviw [1]fsr1
  1525  0191  00D1               	movwf	??_vfpfcnvrt+1
  1526  0192  0850               	movf	??_vfpfcnvrt,w
  1527  0193  0084               	movwf	4
  1528  0194  0851               	movf	??_vfpfcnvrt+1,w
  1529  0195  0085               	movwf	5
  1530  0196  0012               	moviw fsr0++
  1531  0197  3A25               	xorlw	37
  1532  0198  1D03               	btfss	3,2
  1533  0199  2AA2               	goto	l1406
  1534                           
  1535                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1536  019A  084E               	movf	vfpfcnvrt@fmt,w
  1537  019B  0086               	movwf	6
  1538  019C  0187               	clrf	7
  1539  019D  3001               	movlw	1
  1540  019E  0781               	addwf	1,f
  1541  019F  3141               	addfsr 1,1
  1542  01A0  1803               	skipnc
  1543  01A1  0A81               	incf	1,f
  1544                           
  1545                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1546  01A2  0021               	movlb	1	; select bank1
  1547  01A3  01A6               	clrf	_width^(0+128)
  1548  01A4  01A7               	clrf	(_width+1)^(0+128)
  1549  01A5  0020               	movlb	0	; select bank0
  1550  01A6  01ED               	clrf	_flags
  1551  01A7  01EE               	clrf	_flags+1
  1552                           
  1553                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1554  01A8  30FF               	movlw	255
  1555  01A9  0021               	movlb	1	; select bank1
  1556  01AA  00A8               	movwf	_prec^(0+128)
  1557  01AB  30FF               	movlw	255
  1558  01AC  00A9               	movwf	(_prec^(0+128)+1)
  1559                           
  1560                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  1561  01AD  0020               	movlb	0	; select bank0
  1562  01AE  084E               	movf	vfpfcnvrt@fmt,w
  1563  01AF  0086               	movwf	6
  1564  01B0  0187               	clrf	7
  1565  01B1  3F40               	moviw [0]fsr1
  1566  01B2  00D0               	movwf	??_vfpfcnvrt
  1567  01B3  3F41               	moviw [1]fsr1
  1568  01B4  00D1               	movwf	??_vfpfcnvrt+1
  1569  01B5  0850               	movf	??_vfpfcnvrt,w
  1570  01B6  0084               	movwf	4
  1571  01B7  0851               	movf	??_vfpfcnvrt+1,w
  1572  01B8  0085               	movwf	5
  1573  01B9  0012               	moviw fsr0++
  1574  01BA  3A64               	xorlw	100
  1575  01BB  1903               	btfsc	3,2
  1576  01BC  29CC               	goto	l1370
  1577  01BD  084E               	movf	vfpfcnvrt@fmt,w
  1578  01BE  0086               	movwf	6
  1579  01BF  0187               	clrf	7
  1580  01C0  3F40               	moviw [0]fsr1
  1581  01C1  00D0               	movwf	??_vfpfcnvrt
  1582  01C2  3F41               	moviw [1]fsr1
  1583  01C3  00D1               	movwf	??_vfpfcnvrt+1
  1584  01C4  0850               	movf	??_vfpfcnvrt,w
  1585  01C5  0084               	movwf	4
  1586  01C6  0851               	movf	??_vfpfcnvrt+1,w
  1587  01C7  0085               	movwf	5
  1588  01C8  0012               	moviw fsr0++
  1589  01C9  3A69               	xorlw	105
  1590  01CA  1D03               	btfss	3,2
  1591  01CB  2A05               	goto	l1378
  1592  01CC                     l1370:
  1593                           
  1594                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  1595  01CC  084E               	movf	vfpfcnvrt@fmt,w
  1596  01CD  0086               	movwf	6
  1597  01CE  0187               	clrf	7
  1598  01CF  3001               	movlw	1
  1599  01D0  0781               	addwf	1,f
  1600  01D1  3141               	addfsr 1,1
  1601  01D2  1803               	skipnc
  1602  01D3  0A81               	incf	1,f
  1603                           
  1604                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  1605  01D4  084F               	movf	vfpfcnvrt@ap,w
  1606  01D5  0086               	movwf	6
  1607  01D6  0187               	clrf	7
  1608  01D7  0801               	movf	1,w
  1609  01D8  0084               	movwf	4
  1610  01D9  0185               	clrf	5
  1611  01DA  3002               	movlw	2
  1612  01DB  0781               	addwf	1,f
  1613  01DC  3F00               	moviw [0]fsr0
  1614  01DD  00D0               	movwf	??_vfpfcnvrt
  1615  01DE  3F01               	moviw [1]fsr0
  1616  01DF  00D1               	movwf	??_vfpfcnvrt+1
  1617  01E0  0850               	movf	??_vfpfcnvrt,w
  1618  01E1  00D5               	movwf	vfpfcnvrt@ll
  1619  01E2  0851               	movf	??_vfpfcnvrt+1,w
  1620  01E3  00D6               	movwf	vfpfcnvrt@ll+1
  1621  01E4  0D89               	rlf	9,f
  1622  01E5  3B89               	subwfb	9,f
  1623  01E6  0989               	comf	9,f
  1624  01E7  00D7               	movwf	vfpfcnvrt@ll+2
  1625  01E8  00D8               	movwf	vfpfcnvrt@ll+3
  1626  01E9  00D9               	movwf	vfpfcnvrt@ll+4
  1627  01EA  00DA               	movwf	vfpfcnvrt@ll+5
  1628  01EB  00DB               	movwf	vfpfcnvrt@ll+6
  1629  01EC  00DC               	movwf	vfpfcnvrt@ll+7
  1630                           
  1631                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  1632  01ED  0855               	movf	vfpfcnvrt@ll,w
  1633  01EE  00B0               	movwf	dtoa@d
  1634  01EF  0856               	movf	vfpfcnvrt@ll+1,w
  1635  01F0  00B1               	movwf	dtoa@d+1
  1636  01F1  0857               	movf	vfpfcnvrt@ll+2,w
  1637  01F2  00B2               	movwf	dtoa@d+2
  1638  01F3  0858               	movf	vfpfcnvrt@ll+3,w
  1639  01F4  00B3               	movwf	dtoa@d+3
  1640  01F5  0859               	movf	vfpfcnvrt@ll+4,w
  1641  01F6  00B4               	movwf	dtoa@d+4
  1642  01F7  085A               	movf	vfpfcnvrt@ll+5,w
  1643  01F8  00B5               	movwf	dtoa@d+5
  1644  01F9  085B               	movf	vfpfcnvrt@ll+6,w
  1645  01FA  00B6               	movwf	dtoa@d+6
  1646  01FB  085C               	movf	vfpfcnvrt@ll+7,w
  1647  01FC  00B7               	movwf	dtoa@d+7
  1648  01FD  085D               	movf	vfpfcnvrt@fp,w
  1649  01FE  3180  2043         	fcall	_dtoa
  1650  0200  0831               	movf	?_dtoa+1,w
  1651  0201  00CF               	movwf	?_vfpfcnvrt+1
  1652  0202  0830               	movf	?_dtoa,w
  1653  0203  00CE               	movwf	?_vfpfcnvrt
  1654  0204  0008               	return
  1655  0205                     l1378:
  1656                           
  1657                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 857:         if (
      +                          !strncmp(*fmt, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeo
      +                          f("li")/sizeof("li"[0]))-1))) {
  1658  0205  084E               	movf	vfpfcnvrt@fmt,w
  1659  0206  0086               	movwf	6
  1660  0207  0187               	clrf	7
  1661  0208  3F40               	moviw [0]fsr1
  1662  0209  00F1               	movwf	strncmp@_l
  1663  020A  3F41               	moviw [1]fsr1
  1664  020B  00F2               	movwf	strncmp@_l+1
  1665  020C  30D2               	movlw	low (STR_2| (0+32768))
  1666  020D  00F3               	movwf	strncmp@_r
  1667  020E  3086               	movlw	high (STR_2| (0+32768))
  1668  020F  00F4               	movwf	strncmp@_r+1
  1669  0210  3002               	movlw	2
  1670  0211  00F5               	movwf	strncmp@n
  1671  0212  3000               	movlw	0
  1672  0213  00F6               	movwf	strncmp@n+1
  1673  0214  3184  24F7  3181   	fcall	_strncmp
  1674  0217  0871               	movf	?_strncmp,w
  1675  0218  0472               	iorwf	?_strncmp+1,w
  1676  0219  1903               	btfsc	3,2
  1677  021A  2A31               	goto	l1382
  1678  021B  084E               	movf	vfpfcnvrt@fmt,w
  1679  021C  0086               	movwf	6
  1680  021D  0187               	clrf	7
  1681  021E  3F40               	moviw [0]fsr1
  1682  021F  00F1               	movwf	strncmp@_l
  1683  0220  3F41               	moviw [1]fsr1
  1684  0221  00F2               	movwf	strncmp@_l+1
  1685  0222  30D5               	movlw	low (STR_6| (0+32768))
  1686  0223  00F3               	movwf	strncmp@_r
  1687  0224  3086               	movlw	high (STR_6| (0+32768))
  1688  0225  00F4               	movwf	strncmp@_r+1
  1689  0226  3002               	movlw	2
  1690  0227  00F5               	movwf	strncmp@n
  1691  0228  3000               	movlw	0
  1692  0229  00F6               	movwf	strncmp@n+1
  1693  022A  3184  24F7  3181   	fcall	_strncmp
  1694  022D  0871               	movf	?_strncmp,w
  1695  022E  0472               	iorwf	?_strncmp+1,w
  1696  022F  1D03               	btfss	3,2
  1697  0230  2A70               	goto	l1390
  1698  0231                     l1382:
  1699                           
  1700                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 858: ;C:\Program 
      +                          Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 860:             *fmt += ((si
      +                          zeof("ld")/sizeof("ld"[0]))-1);
  1701  0231  084E               	movf	vfpfcnvrt@fmt,w
  1702  0232  0086               	movwf	6
  1703  0233  0187               	clrf	7
  1704  0234  3002               	movlw	2
  1705  0235  0781               	addwf	1,f
  1706  0236  3141               	addfsr 1,1
  1707  0237  1803               	skipnc
  1708  0238  0A81               	incf	1,f
  1709                           
  1710                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 861:             
      +                          ll = (long long)(*(long *)__va_arg(*(long **)ap, (long)0));
  1711  0239  084F               	movf	vfpfcnvrt@ap,w
  1712  023A  0086               	movwf	6
  1713  023B  0187               	clrf	7
  1714  023C  0801               	movf	1,w
  1715  023D  0084               	movwf	4
  1716  023E  0185               	clrf	5
  1717  023F  3004               	movlw	4
  1718  0240  0781               	addwf	1,f
  1719  0241  3F00               	moviw [0]fsr0
  1720  0242  00D0               	movwf	??_vfpfcnvrt
  1721  0243  3F01               	moviw [1]fsr0
  1722  0244  00D1               	movwf	??_vfpfcnvrt+1
  1723  0245  3F02               	moviw [2]fsr0
  1724  0246  00D2               	movwf	??_vfpfcnvrt+2
  1725  0247  3F03               	moviw [3]fsr0
  1726  0248  00D3               	movwf	??_vfpfcnvrt+3
  1727  0249  0850               	movf	??_vfpfcnvrt,w
  1728  024A  00D5               	movwf	vfpfcnvrt@ll
  1729  024B  0851               	movf	??_vfpfcnvrt+1,w
  1730  024C  00D6               	movwf	vfpfcnvrt@ll+1
  1731  024D  0852               	movf	??_vfpfcnvrt+2,w
  1732  024E  00D7               	movwf	vfpfcnvrt@ll+2
  1733  024F  0853               	movf	??_vfpfcnvrt+3,w
  1734  0250  00D8               	movwf	vfpfcnvrt@ll+3
  1735  0251  3000               	movlw	0
  1736  0252  1BD8               	btfsc	vfpfcnvrt@ll+3,7
  1737  0253  30FF               	movlw	255
  1738  0254  00D9               	movwf	vfpfcnvrt@ll+4
  1739  0255  00DA               	movwf	vfpfcnvrt@ll+5
  1740  0256  00DB               	movwf	vfpfcnvrt@ll+6
  1741  0257  00DC               	movwf	vfpfcnvrt@ll+7
  1742                           
  1743                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 863:             
      +                          return dtoa(fp, ll);
  1744  0258  0855               	movf	vfpfcnvrt@ll,w
  1745  0259  00B0               	movwf	dtoa@d
  1746  025A  0856               	movf	vfpfcnvrt@ll+1,w
  1747  025B  00B1               	movwf	dtoa@d+1
  1748  025C  0857               	movf	vfpfcnvrt@ll+2,w
  1749  025D  00B2               	movwf	dtoa@d+2
  1750  025E  0858               	movf	vfpfcnvrt@ll+3,w
  1751  025F  00B3               	movwf	dtoa@d+3
  1752  0260  0859               	movf	vfpfcnvrt@ll+4,w
  1753  0261  00B4               	movwf	dtoa@d+4
  1754  0262  085A               	movf	vfpfcnvrt@ll+5,w
  1755  0263  00B5               	movwf	dtoa@d+5
  1756  0264  085B               	movf	vfpfcnvrt@ll+6,w
  1757  0265  00B6               	movwf	dtoa@d+6
  1758  0266  085C               	movf	vfpfcnvrt@ll+7,w
  1759  0267  00B7               	movwf	dtoa@d+7
  1760  0268  085D               	movf	vfpfcnvrt@fp,w
  1761  0269  3180  2043         	fcall	_dtoa
  1762  026B  0831               	movf	?_dtoa+1,w
  1763  026C  00CF               	movwf	?_vfpfcnvrt+1
  1764  026D  0830               	movf	?_dtoa,w
  1765  026E  00CE               	movwf	?_vfpfcnvrt
  1766  026F  0008               	return
  1767  0270                     l1390:
  1768                           
  1769                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  1770  0270  084E               	movf	vfpfcnvrt@fmt,w
  1771  0271  0086               	movwf	6
  1772  0272  0187               	clrf	7
  1773  0273  3F40               	moviw [0]fsr1
  1774  0274  00D0               	movwf	??_vfpfcnvrt
  1775  0275  3F41               	moviw [1]fsr1
  1776  0276  00D1               	movwf	??_vfpfcnvrt+1
  1777  0277  0850               	movf	??_vfpfcnvrt,w
  1778  0278  0084               	movwf	4
  1779  0279  0851               	movf	??_vfpfcnvrt+1,w
  1780  027A  0085               	movwf	5
  1781  027B  0012               	moviw fsr0++
  1782  027C  3A25               	xorlw	37
  1783  027D  1D03               	btfss	3,2
  1784  027E  2A97               	goto	l1400
  1785                           
  1786                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  1787  027F  084E               	movf	vfpfcnvrt@fmt,w
  1788  0280  0086               	movwf	6
  1789  0281  0187               	clrf	7
  1790  0282  3001               	movlw	1
  1791  0283  0781               	addwf	1,f
  1792  0284  3141               	addfsr 1,1
  1793  0285  1803               	skipnc
  1794  0286  0A81               	incf	1,f
  1795                           
  1796                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  1797  0287  3025               	movlw	37
  1798  0288  00F2               	movwf	fputc@c
  1799  0289  3000               	movlw	0
  1800  028A  00F3               	movwf	fputc@c+1
  1801  028B  085D               	movf	vfpfcnvrt@fp,w
  1802  028C  00D0               	movwf	??_vfpfcnvrt
  1803  028D  0850               	movf	??_vfpfcnvrt,w
  1804  028E  00F4               	movwf	fputc@fp
  1805  028F  3185  25D6         	fcall	_fputc
  1806  0291                     l1396:
  1807                           
  1808                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  1809  0291  3001               	movlw	1
  1810  0292  0020               	movlb	0	; select bank0
  1811  0293  00CE               	movwf	?_vfpfcnvrt
  1812  0294  3000               	movlw	0
  1813  0295  00CF               	movwf	?_vfpfcnvrt+1
  1814  0296  0008               	return
  1815  0297                     l1400:
  1816                           
  1817                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  1818  0297  084E               	movf	vfpfcnvrt@fmt,w
  1819  0298  0086               	movwf	6
  1820  0299  0187               	clrf	7
  1821  029A  3001               	movlw	1
  1822  029B  0781               	addwf	1,f
  1823  029C  3141               	addfsr 1,1
  1824  029D  1803               	skipnc
  1825  029E  0A81               	incf	1,f
  1826                           
  1827                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  1828  029F  01CE               	clrf	?_vfpfcnvrt
  1829  02A0  01CF               	clrf	?_vfpfcnvrt+1
  1830  02A1  0008               	return
  1831  02A2                     l1406:
  1832                           
  1833                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  1834  02A2  084E               	movf	vfpfcnvrt@fmt,w
  1835  02A3  0086               	movwf	6
  1836  02A4  0187               	clrf	7
  1837  02A5  3F40               	moviw [0]fsr1
  1838  02A6  00D0               	movwf	??_vfpfcnvrt
  1839  02A7  3F41               	moviw [1]fsr1
  1840  02A8  00D1               	movwf	??_vfpfcnvrt+1
  1841  02A9  0850               	movf	??_vfpfcnvrt,w
  1842  02AA  0084               	movwf	4
  1843  02AB  0851               	movf	??_vfpfcnvrt+1,w
  1844  02AC  0085               	movwf	5
  1845  02AD  0800               	movf	0,w	;code access
  1846  02AE  00D2               	movwf	??_vfpfcnvrt+2
  1847  02AF  01D3               	clrf	??_vfpfcnvrt+3
  1848  02B0  0852               	movf	??_vfpfcnvrt+2,w
  1849  02B1  00F2               	movwf	fputc@c
  1850  02B2  0853               	movf	??_vfpfcnvrt+3,w
  1851  02B3  00F3               	movwf	fputc@c+1
  1852  02B4  085D               	movf	vfpfcnvrt@fp,w
  1853  02B5  00D4               	movwf	??_vfpfcnvrt+4
  1854  02B6  0854               	movf	??_vfpfcnvrt+4,w
  1855  02B7  00F4               	movwf	fputc@fp
  1856  02B8  3185  25D6  3181   	fcall	_fputc
  1857                           
  1858                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  1859  02BB  0020               	movlb	0	; select bank0
  1860  02BC  084E               	movf	vfpfcnvrt@fmt,w
  1861  02BD  0086               	movwf	6
  1862  02BE  0187               	clrf	7
  1863  02BF  3001               	movlw	1
  1864  02C0  0781               	addwf	1,f
  1865  02C1  3141               	addfsr 1,1
  1866  02C2  1803               	skipnc
  1867  02C3  0A81               	incf	1,f
  1868  02C4  2A91               	goto	l1396
  1869  02C5                     __end_of_vfpfcnvrt:
  1870                           
  1871                           	psect	text6
  1872  04F7                     __ptext6:	
  1873 ;; *************** function _strncmp *****************
  1874 ;; Defined at:
  1875 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strncmp.c"
  1876 ;; Parameters:    Size  Location     Type
  1877 ;;  _l              2    1[COMMON] PTR const unsigned char 
  1878 ;;		 -> STR_1(5), 
  1879 ;;  _r              2    3[COMMON] PTR const unsigned char 
  1880 ;;		 -> STR_8(3), STR_4(3), 
  1881 ;;  n               2    5[COMMON] unsigned int 
  1882 ;; Auto vars:     Size  Location     Type
  1883 ;;  r               2   10[COMMON] PTR const unsigned char 
  1884 ;;		 -> STR_8(3), STR_4(3), 
  1885 ;;  l               2    8[COMMON] PTR const unsigned char 
  1886 ;;		 -> STR_1(5), 
  1887 ;; Return value:  Size  Location     Type
  1888 ;;                  2    1[COMMON] int 
  1889 ;; Registers used:
  1890 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  1891 ;; Tracked objects:
  1892 ;;		On entry : 1F/0
  1893 ;;		On exit  : 1F/0
  1894 ;;		Unchanged: 1F/0
  1895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1896 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1897 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1898 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1899 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1900 ;;Total ram usage:       11 bytes
  1901 ;; Hardware stack levels used: 1
  1902 ;; Hardware stack levels required when called: 1
  1903 ;; This function calls:
  1904 ;;		Nothing
  1905 ;; This function is called by:
  1906 ;;		_vfpfcnvrt
  1907 ;; This function uses a non-reentrant model
  1908 ;;
  1909                           
  1910                           
  1911                           ;psect for function _strncmp
  1912  04F7                     _strncmp:
  1913                           
  1914                           ;incstack = 0
  1915                           ; Regs used in _strncmp: [wreg-fsr0h+status,2+status,0+pclath]
  1916  04F7  0872               	movf	strncmp@_l+1,w
  1917  04F8  00F9               	movwf	strncmp@l+1
  1918  04F9  0871               	movf	strncmp@_l,w
  1919  04FA  00F8               	movwf	strncmp@l
  1920  04FB  0874               	movf	strncmp@_r+1,w
  1921  04FC  00FB               	movwf	strncmp@r+1
  1922  04FD  0873               	movf	strncmp@_r,w
  1923  04FE  00FA               	movwf	strncmp@r
  1924  04FF  3001               	movlw	1
  1925  0500  02F5               	subwf	strncmp@n,f
  1926  0501  3000               	movlw	0
  1927  0502  3BF6               	subwfb	strncmp@n+1,f
  1928  0503  0A75               	incf	strncmp@n,w
  1929  0504  1D03               	skipz
  1930  0505  2D31               	goto	l1346
  1931  0506  0A76               	incf	strncmp@n+1,w
  1932  0507  1D03               	btfss	3,2
  1933  0508  2D31               	goto	l1346
  1934  0509  01F1               	clrf	?_strncmp
  1935  050A  01F2               	clrf	?_strncmp+1
  1936  050B  0008               	return
  1937  050C                     l1348:
  1938  050C  087A               	movf	strncmp@r,w
  1939  050D  0084               	movwf	4
  1940  050E  087B               	movf	strncmp@r+1,w
  1941  050F  0085               	movwf	5
  1942  0510  0012               	moviw fsr0++
  1943  0511  1903               	btfsc	3,2
  1944  0512  2D38               	goto	l1354
  1945  0513  0875               	movf	strncmp@n,w
  1946  0514  0476               	iorwf	strncmp@n+1,w
  1947  0515  1903               	btfsc	3,2
  1948  0516  2D38               	goto	l1354
  1949  0517  087A               	movf	strncmp@r,w
  1950  0518  0084               	movwf	4
  1951  0519  087B               	movf	strncmp@r+1,w
  1952  051A  0085               	movwf	5
  1953  051B  0800               	movf	0,w	;code access
  1954  051C  00F7               	movwf	??_strncmp
  1955  051D  0878               	movf	strncmp@l,w
  1956  051E  0084               	movwf	4
  1957  051F  0879               	movf	strncmp@l+1,w
  1958  0520  0085               	movwf	5
  1959  0521  0800               	movf	0,w	;code access
  1960  0522  0677               	xorwf	??_strncmp,w
  1961  0523  1D03               	btfss	3,2
  1962  0524  2D38               	goto	l1354
  1963  0525  3001               	movlw	1
  1964  0526  07F8               	addwf	strncmp@l,f
  1965  0527  3000               	movlw	0
  1966  0528  3DF9               	addwfc	strncmp@l+1,f
  1967  0529  3001               	movlw	1
  1968  052A  07FA               	addwf	strncmp@r,f
  1969  052B  3000               	movlw	0
  1970  052C  3DFB               	addwfc	strncmp@r+1,f
  1971  052D  3001               	movlw	1
  1972  052E  02F5               	subwf	strncmp@n,f
  1973  052F  3000               	movlw	0
  1974  0530  3BF6               	subwfb	strncmp@n+1,f
  1975  0531                     l1346:
  1976  0531  0878               	movf	strncmp@l,w
  1977  0532  0084               	movwf	4
  1978  0533  0879               	movf	strncmp@l+1,w
  1979  0534  0085               	movwf	5
  1980  0535  0012               	moviw fsr0++
  1981  0536  1D03               	btfss	3,2
  1982  0537  2D0C               	goto	l1348
  1983  0538                     l1354:
  1984  0538  0878               	movf	strncmp@l,w
  1985  0539  0084               	movwf	4
  1986  053A  0879               	movf	strncmp@l+1,w
  1987  053B  0085               	movwf	5
  1988  053C  0800               	movf	0,w	;code access
  1989  053D  00F7               	movwf	??_strncmp
  1990  053E  087A               	movf	strncmp@r,w
  1991  053F  0084               	movwf	4
  1992  0540  087B               	movf	strncmp@r+1,w
  1993  0541  0085               	movwf	5
  1994  0542  0800               	movf	0,w	;code access
  1995  0543  0277               	subwf	??_strncmp,w
  1996  0544  00F1               	movwf	?_strncmp
  1997  0545  01F2               	clrf	?_strncmp+1
  1998  0546  1C03               	skipc
  1999  0547  03F2               	decf	?_strncmp+1,f
  2000  0548  0008               	return
  2001  0549                     __end_of_strncmp:
  2002                           
  2003                           	psect	text7
  2004  0043                     __ptext7:	
  2005 ;; *************** function _dtoa *****************
  2006 ;; Defined at:
  2007 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2008 ;; Parameters:    Size  Location     Type
  2009 ;;  fp              1    wreg     PTR struct _IO_FILE
  2010 ;;		 -> NULL(0), 
  2011 ;;  d               8   16[BANK0 ] long long 
  2012 ;; Auto vars:     Size  Location     Type
  2013 ;;  fp              1   31[BANK0 ] PTR struct _IO_FILE
  2014 ;;		 -> NULL(0), 
  2015 ;;  n               8   36[BANK0 ] long long 
  2016 ;;  i               2   44[BANK0 ] int 
  2017 ;;  s               2   34[BANK0 ] int 
  2018 ;;  w               2   32[BANK0 ] int 
  2019 ;;  p               2   29[BANK0 ] int 
  2020 ;; Return value:  Size  Location     Type
  2021 ;;                  2   16[BANK0 ] int 
  2022 ;; Registers used:
  2023 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2024 ;; Tracked objects:
  2025 ;;		On entry : 1F/0
  2026 ;;		On exit  : 1F/0
  2027 ;;		Unchanged: 0/0
  2028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2029 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2030 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2031 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2032 ;;      Totals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2033 ;;Total ram usage:       30 bytes
  2034 ;; Hardware stack levels used: 1
  2035 ;; Hardware stack levels required when called: 5
  2036 ;; This function calls:
  2037 ;;		___aodiv
  2038 ;;		___aomod
  2039 ;;		_abs
  2040 ;;		_pad
  2041 ;; This function is called by:
  2042 ;;		_vfpfcnvrt
  2043 ;; This function uses a non-reentrant model
  2044 ;;
  2045                           
  2046                           
  2047                           ;psect for function _dtoa
  2048  0043                     _dtoa:
  2049                           
  2050                           ;incstack = 0
  2051                           ; Regs used in _dtoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2052                           ;dtoa@fp stored from wreg
  2053  0043  00BF               	movwf	dtoa@fp
  2054                           
  2055                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  2056  0044  0830               	movf	dtoa@d,w
  2057  0045  00C4               	movwf	dtoa@n
  2058  0046  0831               	movf	dtoa@d+1,w
  2059  0047  00C5               	movwf	dtoa@n+1
  2060  0048  0832               	movf	dtoa@d+2,w
  2061  0049  00C6               	movwf	dtoa@n+2
  2062  004A  0833               	movf	dtoa@d+3,w
  2063  004B  00C7               	movwf	dtoa@n+3
  2064  004C  0834               	movf	dtoa@d+4,w
  2065  004D  00C8               	movwf	dtoa@n+4
  2066  004E  0835               	movf	dtoa@d+5,w
  2067  004F  00C9               	movwf	dtoa@n+5
  2068  0050  0836               	movf	dtoa@d+6,w
  2069  0051  00CA               	movwf	dtoa@n+6
  2070  0052  0837               	movf	dtoa@d+7,w
  2071  0053  00CB               	movwf	dtoa@n+7
  2072                           
  2073                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  2074  0054  3044               	movlw	low dtoa@n
  2075  0055  0086               	movwf	6
  2076  0056  3000               	movlw	high dtoa@n
  2077  0057  0087               	movwf	7
  2078  0058  3F47               	moviw [7]fsr1
  2079  0059  00B8               	movwf	??_dtoa
  2080  005A  1FB8               	btfss	??_dtoa,7
  2081  005B  285E               	goto	u1070
  2082  005C  3001               	movlw	1
  2083  005D  285F               	goto	u1080
  2084  005E                     u1070:
  2085  005E  3000               	movlw	0
  2086  005F                     u1080:
  2087  005F  0020               	movlb	0	; select bank0
  2088  0060  00B9               	movwf	??_dtoa+1
  2089  0061  01BA               	clrf	??_dtoa+2
  2090  0062  0839               	movf	??_dtoa+1,w
  2091  0063  00C2               	movwf	dtoa@s
  2092  0064  083A               	movf	??_dtoa+2,w
  2093  0065  00C3               	movwf	dtoa@s+1
  2094                           
  2095                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  2096  0066  0842               	movf	dtoa@s,w
  2097  0067  0443               	iorwf	dtoa@s+1,w
  2098  0068  1903               	btfsc	3,2
  2099  0069  2888               	goto	l674
  2100                           
  2101                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  2102  006A  09C4               	comf	dtoa@n,f
  2103  006B  09C5               	comf	dtoa@n+1,f
  2104  006C  09C6               	comf	dtoa@n+2,f
  2105  006D  09C7               	comf	dtoa@n+3,f
  2106  006E  09C8               	comf	dtoa@n+4,f
  2107  006F  09C9               	comf	dtoa@n+5,f
  2108  0070  09CA               	comf	dtoa@n+6,f
  2109  0071  09CB               	comf	dtoa@n+7,f
  2110  0072  0AC4               	incf	dtoa@n,f
  2111  0073  1D03               	skipz
  2112  0074  2888               	goto	l674
  2113  0075  0AC5               	incf	dtoa@n+1,f
  2114  0076  1D03               	skipz
  2115  0077  2888               	goto	l674
  2116  0078  0AC6               	incf	dtoa@n+2,f
  2117  0079  1D03               	skipz
  2118  007A  2888               	goto	l674
  2119  007B  0AC7               	incf	dtoa@n+3,f
  2120  007C  1D03               	skipz
  2121  007D  2888               	goto	l674
  2122  007E  0AC8               	incf	dtoa@n+4,f
  2123  007F  1D03               	skipz
  2124  0080  2888               	goto	l674
  2125  0081  0AC9               	incf	dtoa@n+5,f
  2126  0082  1D03               	skipz
  2127  0083  2888               	goto	l674
  2128  0084  0ACA               	incf	dtoa@n+6,f
  2129  0085  1D03               	skipz
  2130  0086  2888               	goto	l674
  2131  0087  0ACB               	incf	dtoa@n+7,f
  2132  0088                     l674:	
  2133                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 297:     }
  2134                           
  2135                           
  2136                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  2137  0088  0021               	movlb	1	; select bank1
  2138  0089  1BA9               	btfsc	(_prec+1)^(0+128),7
  2139  008A  2890               	goto	l675
  2140                           
  2141                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  2142  008B  30FD               	movlw	253
  2143  008C  0020               	movlb	0	; select bank0
  2144  008D  05ED               	andwf	_flags,f
  2145  008E  30FF               	movlw	255
  2146  008F  05EE               	andwf	_flags+1,f
  2147  0090                     l675:	
  2148                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 302:     }
  2149                           
  2150                           
  2151                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  2152  0090  0021               	movlb	1	; select bank1
  2153  0091  0829               	movf	(_prec+1)^(0+128),w
  2154  0092  3A80               	xorlw	128
  2155  0093  0020               	movlb	0	; select bank0
  2156  0094  00B8               	movwf	??_dtoa
  2157  0095  3080               	movlw	128
  2158  0096  0238               	subwf	??_dtoa,w
  2159  0097  1D03               	skipz
  2160  0098  289C               	goto	u1125
  2161  0099  3001               	movlw	1
  2162  009A  0021               	movlb	1	; select bank1
  2163  009B  0228               	subwf	_prec^(0+128),w
  2164  009C                     u1125:
  2165  009C  1803               	skipnc
  2166  009D  28A4               	goto	l1290
  2167  009E  3001               	movlw	1
  2168  009F  0020               	movlb	0	; select bank0
  2169  00A0  00BD               	movwf	dtoa@p
  2170  00A1  3000               	movlw	0
  2171  00A2  00BE               	movwf	dtoa@p+1
  2172  00A3  28AC               	goto	l679
  2173  00A4                     l1290:
  2174  00A4  0021               	movlb	1	; select bank1
  2175  00A5  0829               	movf	(_prec+1)^(0+128),w
  2176  00A6  0020               	movlb	0	; select bank0
  2177  00A7  00BE               	movwf	dtoa@p+1
  2178  00A8  0021               	movlb	1	; select bank1
  2179  00A9  0828               	movf	_prec^(0+128),w
  2180  00AA  0020               	movlb	0	; select bank0
  2181  00AB  00BD               	movwf	dtoa@p
  2182  00AC                     l679:
  2183                           
  2184                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  2185  00AC  0021               	movlb	1	; select bank1
  2186  00AD  0827               	movf	(_width+1)^(0+128),w
  2187  00AE  0020               	movlb	0	; select bank0
  2188  00AF  00C1               	movwf	dtoa@w+1
  2189  00B0  0021               	movlb	1	; select bank1
  2190  00B1  0826               	movf	_width^(0+128),w
  2191  00B2  0020               	movlb	0	; select bank0
  2192  00B3  00C0               	movwf	dtoa@w
  2193                           
  2194                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  2195  00B4  0842               	movf	dtoa@s,w
  2196  00B5  0443               	iorwf	dtoa@s+1,w
  2197  00B6  1D03               	btfss	3,2
  2198  00B7  28BA               	goto	l1296
  2199  00B8  1D6D               	btfss	_flags,2
  2200  00B9  28BE               	goto	l680
  2201  00BA                     l1296:
  2202                           
  2203                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  2204  00BA  30FF               	movlw	255
  2205  00BB  07C0               	addwf	dtoa@w,f
  2206  00BC  30FF               	movlw	255
  2207  00BD  3DC1               	addwfc	dtoa@w+1,f
  2208  00BE                     l680:	
  2209                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 307:     }
  2210                           
  2211                           
  2212                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  2213  00BE  301F               	movlw	31
  2214  00BF  00CC               	movwf	dtoa@i
  2215  00C0  3000               	movlw	0
  2216  00C1  00CD               	movwf	dtoa@i+1
  2217                           
  2218                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  2219  00C2  0021               	movlb	1	; select bank1
  2220  00C3  01C9               	clrf	(_dbuf^(0+128)+31)
  2221                           
  2222                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2223  00C4  2950               	goto	l683
  2224  00C5                     l1310:
  2225  00C5  0020               	movlb	0	; select bank0
  2226  00C6  0844               	movf	dtoa@n,w
  2227  00C7  0445               	iorwf	dtoa@n+1,w
  2228  00C8  0446               	iorwf	dtoa@n+2,w
  2229  00C9  0447               	iorwf	dtoa@n+3,w
  2230  00CA  0448               	iorwf	dtoa@n+4,w
  2231  00CB  0449               	iorwf	dtoa@n+5,w
  2232  00CC  044A               	iorwf	dtoa@n+6,w
  2233  00CD  044B               	iorwf	dtoa@n+7,w
  2234  00CE  1D03               	skipz
  2235  00CF  28EA               	goto	l1300
  2236  00D0  083E               	movf	dtoa@p+1,w
  2237  00D1  3A80               	xorlw	128
  2238  00D2  00B8               	movwf	??_dtoa
  2239  00D3  3080               	movlw	128
  2240  00D4  0238               	subwf	??_dtoa,w
  2241  00D5  1D03               	skipz
  2242  00D6  28D9               	goto	u1175
  2243  00D7  3001               	movlw	1
  2244  00D8  023D               	subwf	dtoa@p,w
  2245  00D9                     u1175:
  2246  00D9  1803               	skipnc
  2247  00DA  28EA               	goto	l1300
  2248  00DB  0020               	movlb	0	; select bank0
  2249  00DC  0841               	movf	dtoa@w+1,w
  2250  00DD  3A80               	xorlw	128
  2251  00DE  00B8               	movwf	??_dtoa
  2252  00DF  3080               	movlw	128
  2253  00E0  0238               	subwf	??_dtoa,w
  2254  00E1  1D03               	skipz
  2255  00E2  28E5               	goto	u1185
  2256  00E3  3001               	movlw	1
  2257  00E4  0240               	subwf	dtoa@w,w
  2258  00E5                     u1185:
  2259  00E5  1C03               	skipc
  2260  00E6  295C               	goto	l1318
  2261  00E7  0020               	movlb	0	; select bank0
  2262  00E8  1CED               	btfss	_flags,1
  2263  00E9  295C               	goto	l1318
  2264  00EA                     l1300:
  2265                           
  2266                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  2267  00EA  30FF               	movlw	255
  2268  00EB  0020               	movlb	0	; select bank0
  2269  00EC  07CC               	addwf	dtoa@i,f
  2270  00ED  30FF               	movlw	255
  2271  00EE  3DCD               	addwfc	dtoa@i+1,f
  2272                           
  2273                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  2274  00EF  300A               	movlw	10
  2275  00F0  00A0               	movwf	___aomod@divisor
  2276  00F1  01A1               	clrf	___aomod@divisor+1
  2277  00F2  01A2               	clrf	___aomod@divisor+2
  2278  00F3  01A3               	clrf	___aomod@divisor+3
  2279  00F4  01A4               	clrf	___aomod@divisor+4
  2280  00F5  01A5               	clrf	___aomod@divisor+5
  2281  00F6  01A6               	clrf	___aomod@divisor+6
  2282  00F7  01A7               	clrf	___aomod@divisor+7
  2283  00F8  0844               	movf	dtoa@n,w
  2284  00F9  00A8               	movwf	___aomod@dividend
  2285  00FA  0845               	movf	dtoa@n+1,w
  2286  00FB  00A9               	movwf	___aomod@dividend+1
  2287  00FC  0846               	movf	dtoa@n+2,w
  2288  00FD  00AA               	movwf	___aomod@dividend+2
  2289  00FE  0847               	movf	dtoa@n+3,w
  2290  00FF  00AB               	movwf	___aomod@dividend+3
  2291  0100  0848               	movf	dtoa@n+4,w
  2292  0101  00AC               	movwf	___aomod@dividend+4
  2293  0102  0849               	movf	dtoa@n+5,w
  2294  0103  00AD               	movwf	___aomod@dividend+5
  2295  0104  084A               	movf	dtoa@n+6,w
  2296  0105  00AE               	movwf	___aomod@dividend+6
  2297  0106  084B               	movf	dtoa@n+7,w
  2298  0107  00AF               	movwf	___aomod@dividend+7
  2299  0108  3183  23B8  3180   	fcall	___aomod
  2300  010B  0821               	movf	?___aomod+1,w
  2301  010C  00F5               	movwf	abs@a+1
  2302  010D  0820               	movf	?___aomod,w
  2303  010E  00F4               	movwf	abs@a
  2304  010F  3186  268D  3180   	fcall	_abs
  2305  0112  0874               	movf	?_abs,w
  2306  0113  3E30               	addlw	48
  2307  0114  0020               	movlb	0	; select bank0
  2308  0115  00B8               	movwf	??_dtoa
  2309  0116  084C               	movf	dtoa@i,w
  2310  0117  3EAA               	addlw	(low (_dbuf| 0))& (0+255)
  2311  0118  0086               	movwf	6
  2312  0119  0187               	clrf	7
  2313  011A  0838               	movf	??_dtoa,w
  2314  011B  0081               	movwf	1
  2315                           
  2316                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  2317  011C  30FF               	movlw	255
  2318  011D  07BD               	addwf	dtoa@p,f
  2319  011E  30FF               	movlw	255
  2320  011F  3DBE               	addwfc	dtoa@p+1,f
  2321                           
  2322                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  2323  0120  30FF               	movlw	255
  2324  0121  07C0               	addwf	dtoa@w,f
  2325  0122  30FF               	movlw	255
  2326  0123  3DC1               	addwfc	dtoa@w+1,f
  2327                           
  2328                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  2329  0124  300A               	movlw	10
  2330  0125  00A0               	movwf	___aodiv@divisor
  2331  0126  01A1               	clrf	___aodiv@divisor+1
  2332  0127  01A2               	clrf	___aodiv@divisor+2
  2333  0128  01A3               	clrf	___aodiv@divisor+3
  2334  0129  01A4               	clrf	___aodiv@divisor+4
  2335  012A  01A5               	clrf	___aodiv@divisor+5
  2336  012B  01A6               	clrf	___aodiv@divisor+6
  2337  012C  01A7               	clrf	___aodiv@divisor+7
  2338  012D  0844               	movf	dtoa@n,w
  2339  012E  00A8               	movwf	___aodiv@dividend
  2340  012F  0845               	movf	dtoa@n+1,w
  2341  0130  00A9               	movwf	___aodiv@dividend+1
  2342  0131  0846               	movf	dtoa@n+2,w
  2343  0132  00AA               	movwf	___aodiv@dividend+2
  2344  0133  0847               	movf	dtoa@n+3,w
  2345  0134  00AB               	movwf	___aodiv@dividend+3
  2346  0135  0848               	movf	dtoa@n+4,w
  2347  0136  00AC               	movwf	___aodiv@dividend+4
  2348  0137  0849               	movf	dtoa@n+5,w
  2349  0138  00AD               	movwf	___aodiv@dividend+5
  2350  0139  084A               	movf	dtoa@n+6,w
  2351  013A  00AE               	movwf	___aodiv@dividend+6
  2352  013B  084B               	movf	dtoa@n+7,w
  2353  013C  00AF               	movwf	___aodiv@dividend+7
  2354  013D  3182  22C5  3180   	fcall	___aodiv
  2355  0140  0820               	movf	?___aodiv,w
  2356  0141  00C4               	movwf	dtoa@n
  2357  0142  0821               	movf	?___aodiv+1,w
  2358  0143  00C5               	movwf	dtoa@n+1
  2359  0144  0822               	movf	?___aodiv+2,w
  2360  0145  00C6               	movwf	dtoa@n+2
  2361  0146  0823               	movf	?___aodiv+3,w
  2362  0147  00C7               	movwf	dtoa@n+3
  2363  0148  0824               	movf	?___aodiv+4,w
  2364  0149  00C8               	movwf	dtoa@n+4
  2365  014A  0825               	movf	?___aodiv+5,w
  2366  014B  00C9               	movwf	dtoa@n+5
  2367  014C  0826               	movf	?___aodiv+6,w
  2368  014D  00CA               	movwf	dtoa@n+6
  2369  014E  0827               	movf	?___aodiv+7,w
  2370  014F  00CB               	movwf	dtoa@n+7
  2371  0150                     l683:	
  2372                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 318:     }
  2373                           
  2374                           
  2375                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2376  0150  0020               	movlb	0	; select bank0
  2377  0151  084D               	movf	dtoa@i+1,w
  2378  0152  3A80               	xorlw	128
  2379  0153  00B8               	movwf	??_dtoa
  2380  0154  3080               	movlw	128
  2381  0155  0238               	subwf	??_dtoa,w
  2382  0156  1D03               	skipz
  2383  0157  295A               	goto	u1155
  2384  0158  3001               	movlw	1
  2385  0159  024C               	subwf	dtoa@i,w
  2386  015A                     u1155:
  2387  015A  1803               	btfsc	3,0
  2388  015B  28C5               	goto	l1310
  2389  015C                     l1318:
  2390                           
  2391                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  2392  015C  0020               	movlb	0	; select bank0
  2393  015D  0842               	movf	dtoa@s,w
  2394  015E  0443               	iorwf	dtoa@s+1,w
  2395  015F  1D03               	btfss	3,2
  2396  0160  2963               	goto	l1322
  2397  0161  1D6D               	btfss	_flags,2
  2398  0162  2979               	goto	l1332
  2399  0163                     l1322:
  2400                           
  2401                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  2402  0163  30FF               	movlw	255
  2403  0164  07CC               	addwf	dtoa@i,f
  2404  0165  30FF               	movlw	255
  2405  0166  3DCD               	addwfc	dtoa@i+1,f
  2406                           
  2407                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  2408  0167  0842               	movf	dtoa@s,w
  2409  0168  0443               	iorwf	dtoa@s+1,w
  2410  0169  1D03               	btfss	3,2
  2411  016A  296D               	goto	l1328
  2412  016B  302B               	movlw	43
  2413  016C  296E               	goto	L1
  2414  016D                     l1328:
  2415  016D  302D               	movlw	45
  2416  016E                     L1:
  2417  016E  00BB               	movwf	_dtoa$1028
  2418  016F  3000               	movlw	0
  2419  0170  00BC               	movwf	_dtoa$1028+1
  2420  0171  083B               	movf	_dtoa$1028,w
  2421  0172  00B8               	movwf	??_dtoa
  2422  0173  084C               	movf	dtoa@i,w
  2423  0174  3EAA               	addlw	(low (_dbuf| 0))& (0+255)
  2424  0175  0086               	movwf	6
  2425  0176  0187               	clrf	7
  2426  0177  0838               	movf	??_dtoa,w
  2427  0178  0081               	movwf	1
  2428  0179                     l1332:
  2429                           
  2430                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  2431  0179  084C               	movf	dtoa@i,w
  2432  017A  3EAA               	addlw	(low (_dbuf| 0))& (0+255)
  2433  017B  00B8               	movwf	??_dtoa
  2434  017C  0838               	movf	??_dtoa,w
  2435  017D  00A7               	movwf	pad@buf
  2436  017E  0841               	movf	dtoa@w+1,w
  2437  017F  00A9               	movwf	pad@p+1
  2438  0180  0840               	movf	dtoa@w,w
  2439  0181  00A8               	movwf	pad@p
  2440  0182  083F               	movf	dtoa@fp,w
  2441  0183  3185  2549         	fcall	_pad
  2442  0185  0828               	movf	?_pad+1,w
  2443  0186  00B1               	movwf	?_dtoa+1
  2444  0187  0827               	movf	?_pad,w
  2445  0188  00B0               	movwf	?_dtoa
  2446  0189  0008               	return
  2447  018A                     __end_of_dtoa:
  2448                           
  2449                           	psect	text8
  2450  0549                     __ptext8:	
  2451 ;; *************** function _pad *****************
  2452 ;; Defined at:
  2453 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2454 ;; Parameters:    Size  Location     Type
  2455 ;;  fp              1    wreg     PTR struct _IO_FILE
  2456 ;;		 -> NULL(0), 
  2457 ;;  buf             1    7[BANK0 ] PTR unsigned char 
  2458 ;;		 -> dbuf(32), 
  2459 ;;  p               2    8[BANK0 ] int 
  2460 ;; Auto vars:     Size  Location     Type
  2461 ;;  fp              1   14[BANK0 ] PTR struct _IO_FILE
  2462 ;;		 -> NULL(0), 
  2463 ;;  w               2   12[BANK0 ] int 
  2464 ;;  i               2   10[BANK0 ] int 
  2465 ;; Return value:  Size  Location     Type
  2466 ;;                  2    7[BANK0 ] int 
  2467 ;; Registers used:
  2468 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2469 ;; Tracked objects:
  2470 ;;		On entry : 1F/0
  2471 ;;		On exit  : 1F/0
  2472 ;;		Unchanged: 0/0
  2473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2474 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2475 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2476 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2477 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2478 ;;Total ram usage:        9 bytes
  2479 ;; Hardware stack levels used: 1
  2480 ;; Hardware stack levels required when called: 4
  2481 ;; This function calls:
  2482 ;;		_fputc
  2483 ;;		_fputs
  2484 ;;		_strlen
  2485 ;; This function is called by:
  2486 ;;		_dtoa
  2487 ;; This function uses a non-reentrant model
  2488 ;;
  2489                           
  2490                           
  2491                           ;psect for function _pad
  2492  0549                     _pad:
  2493                           
  2494                           ;incstack = 0
  2495                           ; Regs used in _pad: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2496                           ;pad@fp stored from wreg
  2497  0549  00AE               	movwf	pad@fp
  2498                           
  2499                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  2500  054A  1C6D               	btfss	_flags,0
  2501  054B  2D54               	goto	l1258
  2502                           
  2503                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  2504  054C  082E               	movf	pad@fp,w
  2505  054D  00FB               	movwf	??_pad
  2506  054E  087B               	movf	??_pad,w
  2507  054F  00FA               	movwf	fputs@fp
  2508  0550  0827               	movf	pad@buf,w
  2509  0551  3186  2638  3185   	fcall	_fputs
  2510  0554                     l1258:
  2511                           
  2512                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  2513  0554  1BA9               	btfsc	pad@p+1,7
  2514  0555  2D5B               	goto	l1262
  2515  0556  0829               	movf	pad@p+1,w
  2516  0557  00AD               	movwf	pad@w+1
  2517  0558  0828               	movf	pad@p,w
  2518  0559  00AC               	movwf	pad@w
  2519  055A  2D5D               	goto	l666
  2520  055B                     l1262:
  2521  055B  01AC               	clrf	pad@w
  2522  055C  01AD               	clrf	pad@w+1
  2523  055D                     l666:
  2524                           
  2525                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  2526  055D  01AA               	clrf	pad@i
  2527  055E  01AB               	clrf	pad@i+1
  2528  055F                     l1268:	
  2529                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2530                           
  2531                           
  2532                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2533  055F  082B               	movf	pad@i+1,w
  2534  0560  3A80               	xorlw	128
  2535  0561  00FB               	movwf	??_pad
  2536  0562  082D               	movf	pad@w+1,w
  2537  0563  3A80               	xorlw	128
  2538  0564  027B               	subwf	??_pad,w
  2539  0565  1D03               	skipz
  2540  0566  2D69               	goto	u1045
  2541  0567  082C               	movf	pad@w,w
  2542  0568  022A               	subwf	pad@i,w
  2543  0569                     u1045:
  2544  0569  1803               	btfsc	3,0
  2545  056A  2D7D               	goto	l669
  2546                           
  2547                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  2548  056B  3020               	movlw	32
  2549  056C  00F2               	movwf	fputc@c
  2550  056D  3000               	movlw	0
  2551  056E  00F3               	movwf	fputc@c+1
  2552  056F  0020               	movlb	0	; select bank0
  2553  0570  082E               	movf	pad@fp,w
  2554  0571  00FB               	movwf	??_pad
  2555  0572  087B               	movf	??_pad,w
  2556  0573  00F4               	movwf	fputc@fp
  2557  0574  3185  25D6  3185   	fcall	_fputc
  2558                           
  2559                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  2560  0577  3001               	movlw	1
  2561  0578  0020               	movlb	0	; select bank0
  2562  0579  07AA               	addwf	pad@i,f
  2563  057A  3000               	movlw	0
  2564  057B  3DAB               	addwfc	pad@i+1,f
  2565  057C  2D5F               	goto	l1268
  2566  057D                     l669:
  2567                           
  2568                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  2569  057D  0020               	movlb	0	; select bank0
  2570  057E  186D               	btfsc	_flags,0
  2571  057F  2D88               	goto	l670
  2572                           
  2573                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  2574  0580  082E               	movf	pad@fp,w
  2575  0581  00FB               	movwf	??_pad
  2576  0582  087B               	movf	??_pad,w
  2577  0583  00FA               	movwf	fputs@fp
  2578  0584  0827               	movf	pad@buf,w
  2579  0585  3186  2638  3185   	fcall	_fputs
  2580  0588                     l670:	
  2581                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 92:     }
  2582                           
  2583                           
  2584                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  2585  0588  0827               	movf	pad@buf,w
  2586  0589  3186  2676         	fcall	_strlen
  2587  058B  082C               	movf	pad@w,w
  2588  058C  0771               	addwf	?_strlen,w
  2589  058D  00A7               	movwf	?_pad
  2590  058E  082D               	movf	pad@w+1,w
  2591  058F  3D72               	addwfc	?_strlen+1,w
  2592  0590  00A8               	movwf	?_pad+1
  2593  0591  0008               	return
  2594  0592                     __end_of_pad:
  2595                           
  2596                           	psect	text9
  2597  0676                     __ptext9:	
  2598 ;; *************** function _strlen *****************
  2599 ;; Defined at:
  2600 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  2601 ;; Parameters:    Size  Location     Type
  2602 ;;  s               1    wreg     PTR const unsigned char 
  2603 ;;		 -> dbuf(32), 
  2604 ;; Auto vars:     Size  Location     Type
  2605 ;;  s               1    5[COMMON] PTR const unsigned char 
  2606 ;;		 -> dbuf(32), 
  2607 ;;  a               1    4[COMMON] PTR const unsigned char 
  2608 ;;		 -> dbuf(32), 
  2609 ;; Return value:  Size  Location     Type
  2610 ;;                  2    1[COMMON] unsigned int 
  2611 ;; Registers used:
  2612 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2613 ;; Tracked objects:
  2614 ;;		On entry : 1F/0
  2615 ;;		On exit  : 1F/0
  2616 ;;		Unchanged: 1F/0
  2617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2618 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2619 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2620 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2621 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2622 ;;Total ram usage:        5 bytes
  2623 ;; Hardware stack levels used: 1
  2624 ;; Hardware stack levels required when called: 1
  2625 ;; This function calls:
  2626 ;;		Nothing
  2627 ;; This function is called by:
  2628 ;;		_pad
  2629 ;; This function uses a non-reentrant model
  2630 ;;
  2631                           
  2632                           
  2633                           ;psect for function _strlen
  2634  0676                     _strlen:
  2635                           
  2636                           ;incstack = 0
  2637                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  2638                           ;strlen@s stored from wreg
  2639  0676  00F5               	movwf	strlen@s
  2640  0677  0875               	movf	strlen@s,w
  2641  0678  00F3               	movwf	??_strlen
  2642  0679  0873               	movf	??_strlen,w
  2643  067A  00F4               	movwf	strlen@a
  2644  067B                     l1180:
  2645  067B  0875               	movf	strlen@s,w
  2646  067C  0086               	movwf	6
  2647  067D  0187               	clrf	7
  2648  067E  0801               	movf	1,w
  2649  067F  1903               	btfsc	3,2
  2650  0680  2E86               	goto	l1182
  2651  0681  3001               	movlw	1
  2652  0682  00F3               	movwf	??_strlen
  2653  0683  0873               	movf	??_strlen,w
  2654  0684  07F5               	addwf	strlen@s,f
  2655  0685  2E7B               	goto	l1180
  2656  0686                     l1182:
  2657  0686  0874               	movf	strlen@a,w
  2658  0687  0275               	subwf	strlen@s,w
  2659  0688  00F1               	movwf	?_strlen
  2660  0689  01F2               	clrf	?_strlen+1
  2661  068A  1BF1               	btfsc	?_strlen,7
  2662  068B  03F2               	decf	?_strlen+1,f
  2663  068C  0008               	return
  2664  068D                     __end_of_strlen:
  2665                           
  2666                           	psect	text10
  2667  0638                     __ptext10:	
  2668 ;; *************** function _fputs *****************
  2669 ;; Defined at:
  2670 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  2671 ;; Parameters:    Size  Location     Type
  2672 ;;  s               1    wreg     PTR const unsigned char 
  2673 ;;		 -> dbuf(32), 
  2674 ;;  fp              1   10[COMMON] PTR struct _IO_FILE
  2675 ;;		 -> NULL(0), 
  2676 ;; Auto vars:     Size  Location     Type
  2677 ;;  s               1    6[BANK0 ] PTR const unsigned char 
  2678 ;;		 -> dbuf(32), 
  2679 ;;  i               2    4[BANK0 ] int 
  2680 ;;  c               1    3[BANK0 ] unsigned char 
  2681 ;; Return value:  Size  Location     Type
  2682 ;;                  2   10[COMMON] int 
  2683 ;; Registers used:
  2684 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2685 ;; Tracked objects:
  2686 ;;		On entry : 1F/0
  2687 ;;		On exit  : 1F/0
  2688 ;;		Unchanged: 0/0
  2689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2690 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2691 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2692 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2693 ;;      Totals:         1       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2694 ;;Total ram usage:        8 bytes
  2695 ;; Hardware stack levels used: 1
  2696 ;; Hardware stack levels required when called: 3
  2697 ;; This function calls:
  2698 ;;		_fputc
  2699 ;; This function is called by:
  2700 ;;		_pad
  2701 ;; This function uses a non-reentrant model
  2702 ;;
  2703                           
  2704                           
  2705                           ;psect for function _fputs
  2706  0638                     _fputs:
  2707                           
  2708                           ;incstack = 0
  2709                           ; Regs used in _fputs: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2710                           ;fputs@s stored from wreg
  2711  0638  00A6               	movwf	fputs@s
  2712  0639  01A4               	clrf	fputs@i
  2713  063A  01A5               	clrf	fputs@i+1
  2714  063B                     l1174:
  2715  063B  0824               	movf	fputs@i,w
  2716  063C  0726               	addwf	fputs@s,w
  2717  063D  00A0               	movwf	??_fputs
  2718  063E  0820               	movf	??_fputs,w
  2719  063F  0086               	movwf	6
  2720  0640  0187               	clrf	7
  2721  0641  0801               	movf	1,w
  2722  0642  00A1               	movwf	??_fputs+1
  2723  0643  0821               	movf	??_fputs+1,w
  2724  0644  00A3               	movwf	fputs@c
  2725  0645  0823               	movf	fputs@c,w
  2726  0646  1903               	btfsc	3,2
  2727  0647  0008               	return
  2728  0648  0823               	movf	fputs@c,w
  2729  0649  00A0               	movwf	??_fputs
  2730  064A  01A1               	clrf	??_fputs+1
  2731  064B  0820               	movf	??_fputs,w
  2732  064C  00F2               	movwf	fputc@c
  2733  064D  0821               	movf	??_fputs+1,w
  2734  064E  00F3               	movwf	fputc@c+1
  2735  064F  087A               	movf	fputs@fp,w
  2736  0650  00A2               	movwf	??_fputs+2
  2737  0651  0822               	movf	??_fputs+2,w
  2738  0652  00F4               	movwf	fputc@fp
  2739  0653  3185  25D6  3186   	fcall	_fputc
  2740  0656  3001               	movlw	1
  2741  0657  0020               	movlb	0	; select bank0
  2742  0658  07A4               	addwf	fputs@i,f
  2743  0659  3000               	movlw	0
  2744  065A  3DA5               	addwfc	fputs@i+1,f
  2745  065B  2E3B               	goto	l1174
  2746  065C                     __end_of_fputs:
  2747                           
  2748                           	psect	text11
  2749  05D6                     __ptext11:	
  2750 ;; *************** function _fputc *****************
  2751 ;; Defined at:
  2752 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  2753 ;; Parameters:    Size  Location     Type
  2754 ;;  c               2    2[COMMON] int 
  2755 ;;  fp              1    4[COMMON] PTR struct _IO_FILE
  2756 ;;		 -> NULL(0), 
  2757 ;; Auto vars:     Size  Location     Type
  2758 ;;		None
  2759 ;; Return value:  Size  Location     Type
  2760 ;;                  2    2[COMMON] int 
  2761 ;; Registers used:
  2762 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2763 ;; Tracked objects:
  2764 ;;		On entry : 1F/0
  2765 ;;		On exit  : 0/0
  2766 ;;		Unchanged: 0/0
  2767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2768 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2769 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2770 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2771 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2772 ;;Total ram usage:        8 bytes
  2773 ;; Hardware stack levels used: 1
  2774 ;; Hardware stack levels required when called: 2
  2775 ;; This function calls:
  2776 ;;		_putch
  2777 ;; This function is called by:
  2778 ;;		_pad
  2779 ;;		_vfpfcnvrt
  2780 ;;		_fputs
  2781 ;; This function uses a non-reentrant model
  2782 ;;
  2783                           
  2784                           
  2785                           ;psect for function _fputc
  2786  05D6                     _fputc:
  2787                           
  2788                           ;incstack = 0
  2789                           ; Regs used in _fputc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2790  05D6  0874               	movf	fputc@fp,w
  2791  05D7  1D03               	btfss	3,2
  2792  05D8  0874               	movf	fputc@fp,w
  2793  05D9  1D03               	btfss	3,2
  2794  05DA  2DDF               	goto	l1160
  2795  05DB  0872               	movf	fputc@c,w
  2796  05DC  3186  26C0         	fcall	_putch
  2797  05DE  0008               	return
  2798  05DF                     l1160:
  2799  05DF  0874               	movf	fputc@fp,w
  2800  05E0  3E03               	addlw	3
  2801  05E1  0086               	movwf	6
  2802  05E2  0187               	clrf	7
  2803  05E3  0016               	moviw fsr1++
  2804  05E4  0401               	iorwf	1,w
  2805  05E5  1903               	btfsc	3,2
  2806  05E6  2E02               	goto	l1164
  2807  05E7  0874               	movf	fputc@fp,w
  2808  05E8  3E03               	addlw	3
  2809  05E9  0086               	movwf	6
  2810  05EA  0187               	clrf	7
  2811  05EB  3F40               	moviw [0]fsr1
  2812  05EC  00F5               	movwf	??_fputc
  2813  05ED  3F41               	moviw [1]fsr1
  2814  05EE  00F6               	movwf	??_fputc+1
  2815  05EF  0A74               	incf	fputc@fp,w
  2816  05F0  0086               	movwf	6
  2817  05F1  0187               	clrf	7
  2818  05F2  3F40               	moviw [0]fsr1
  2819  05F3  00F7               	movwf	??_fputc+2
  2820  05F4  3F41               	moviw [1]fsr1
  2821  05F5  00F8               	movwf	??_fputc+3
  2822  05F6  0878               	movf	??_fputc+3,w
  2823  05F7  3A80               	xorlw	128
  2824  05F8  00F9               	movwf	??_fputc+4
  2825  05F9  0876               	movf	??_fputc+1,w
  2826  05FA  3A80               	xorlw	128
  2827  05FB  0279               	subwf	??_fputc+4,w
  2828  05FC  1D03               	skipz
  2829  05FD  2E00               	goto	u785
  2830  05FE  0875               	movf	??_fputc,w
  2831  05FF  0277               	subwf	??_fputc+2,w
  2832  0600                     u785:
  2833  0600  1803               	skipnc
  2834  0601  0008               	return
  2835  0602                     l1164:
  2836  0602  0A74               	incf	fputc@fp,w
  2837  0603  0086               	movwf	6
  2838  0604  0187               	clrf	7
  2839  0605  3001               	movlw	1
  2840  0606  0781               	addwf	1,f
  2841  0607  3141               	addfsr 1,1
  2842  0608  1803               	skipnc
  2843  0609  0A81               	incf	1,f
  2844  060A  0008               	return
  2845  060B                     __end_of_fputc:
  2846                           
  2847                           	psect	text12
  2848  06C0                     __ptext12:	
  2849 ;; *************** function _putch *****************
  2850 ;; Defined at:
  2851 ;;		line 128 in file "smt_main.c"
  2852 ;; Parameters:    Size  Location     Type
  2853 ;;  c               1    wreg     unsigned char 
  2854 ;; Auto vars:     Size  Location     Type
  2855 ;;  c               1    1[COMMON] unsigned char 
  2856 ;; Return value:  Size  Location     Type
  2857 ;;                  1    wreg      void 
  2858 ;; Registers used:
  2859 ;;		wreg
  2860 ;; Tracked objects:
  2861 ;;		On entry : 1F/0
  2862 ;;		On exit  : 1F/3
  2863 ;;		Unchanged: 0/0
  2864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2866 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2868 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2869 ;;Total ram usage:        1 bytes
  2870 ;; Hardware stack levels used: 1
  2871 ;; Hardware stack levels required when called: 1
  2872 ;; This function calls:
  2873 ;;		Nothing
  2874 ;; This function is called by:
  2875 ;;		_fputc
  2876 ;; This function uses a non-reentrant model
  2877 ;;
  2878                           
  2879                           
  2880                           ;psect for function _putch
  2881  06C0                     _putch:
  2882                           
  2883                           ;incstack = 0
  2884                           ; Regs used in _putch: [wreg]
  2885                           ;putch@c stored from wreg
  2886  06C0  00F1               	movwf	putch@c
  2887                           
  2888                           ;smt_main.c: 128: void putch(char c);smt_main.c: 129: {;smt_main.c: 130:        TX1REG =
      +                           c;
  2889  06C1  0871               	movf	putch@c,w
  2890  06C2  0023               	movlb	3	; select bank3
  2891  06C3  009A               	movwf	26	;volatile
  2892  06C4                     l103:	
  2893                           ;smt_main.c: 131:        while(TX1STAbits.TRMT != 1);
  2894                           
  2895  06C4  189E               	btfsc	30,1	;volatile
  2896  06C5  0008               	return
  2897  06C6  2EC4               	goto	l103
  2898  06C7                     __end_of_putch:
  2899                           
  2900                           	psect	text13
  2901  068D                     __ptext13:	
  2902 ;; *************** function _abs *****************
  2903 ;; Defined at:
  2904 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
  2905 ;; Parameters:    Size  Location     Type
  2906 ;;  a               2    4[COMMON] int 
  2907 ;; Auto vars:     Size  Location     Type
  2908 ;;		None
  2909 ;; Return value:  Size  Location     Type
  2910 ;;                  2    4[COMMON] int 
  2911 ;; Registers used:
  2912 ;;		wreg, status,2, status,0
  2913 ;; Tracked objects:
  2914 ;;		On entry : 1F/0
  2915 ;;		On exit  : 0/0
  2916 ;;		Unchanged: 0/0
  2917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2918 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2920 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2921 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2922 ;;Total ram usage:        4 bytes
  2923 ;; Hardware stack levels used: 1
  2924 ;; Hardware stack levels required when called: 1
  2925 ;; This function calls:
  2926 ;;		Nothing
  2927 ;; This function is called by:
  2928 ;;		_dtoa
  2929 ;; This function uses a non-reentrant model
  2930 ;;
  2931                           
  2932                           
  2933                           ;psect for function _abs
  2934  068D                     _abs:
  2935                           
  2936                           ;incstack = 0
  2937                           ; Regs used in _abs: [wreg+status,2+status,0]
  2938  068D  0875               	movf	abs@a+1,w
  2939  068E  3A80               	xorlw	128
  2940  068F  00F6               	movwf	??_abs
  2941  0690  3080               	movlw	128
  2942  0691  0276               	subwf	??_abs,w
  2943  0692  1D03               	skipz
  2944  0693  2E96               	goto	u1065
  2945  0694  3001               	movlw	1
  2946  0695  0274               	subwf	abs@a,w
  2947  0696                     u1065:
  2948  0696  1803               	skipnc
  2949  0697  0008               	return
  2950  0698  0974               	comf	abs@a,w
  2951  0699  00F6               	movwf	??_abs
  2952  069A  0975               	comf	abs@a+1,w
  2953  069B  00F7               	movwf	??_abs+1
  2954  069C  0AF6               	incf	??_abs,f
  2955  069D  1903               	skipnz
  2956  069E  0AF7               	incf	??_abs+1,f
  2957  069F  0876               	movf	??_abs,w
  2958  06A0  00F4               	movwf	?_abs
  2959  06A1  0877               	movf	??_abs+1,w
  2960  06A2  00F5               	movwf	?_abs+1
  2961  06A3  0008               	return
  2962  06A4                     __end_of_abs:
  2963                           
  2964                           	psect	text14
  2965  03B8                     __ptext14:	
  2966 ;; *************** function ___aomod *****************
  2967 ;; Defined at:
  2968 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
  2969 ;; Parameters:    Size  Location     Type
  2970 ;;  divisor         8    0[BANK0 ] long long 
  2971 ;;  dividend        8    8[BANK0 ] long long 
  2972 ;; Auto vars:     Size  Location     Type
  2973 ;;  sign            1    3[COMMON] unsigned char 
  2974 ;;  counter         1    2[COMMON] unsigned char 
  2975 ;; Return value:  Size  Location     Type
  2976 ;;                  8    0[BANK0 ] long long 
  2977 ;; Registers used:
  2978 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2979 ;; Tracked objects:
  2980 ;;		On entry : 1F/0
  2981 ;;		On exit  : 1F/0
  2982 ;;		Unchanged: 0/0
  2983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2984 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2985 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2986 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2987 ;;      Totals:         3      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2988 ;;Total ram usage:       19 bytes
  2989 ;; Hardware stack levels used: 1
  2990 ;; Hardware stack levels required when called: 1
  2991 ;; This function calls:
  2992 ;;		Nothing
  2993 ;; This function is called by:
  2994 ;;		_dtoa
  2995 ;; This function uses a non-reentrant model
  2996 ;;
  2997                           
  2998                           
  2999                           ;psect for function ___aomod
  3000  03B8                     ___aomod:
  3001                           
  3002                           ;incstack = 0
  3003                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  3004  03B8  01F3               	clrf	___aomod@sign
  3005  03B9  3028               	movlw	low ___aomod@dividend
  3006  03BA  0086               	movwf	6
  3007  03BB  3000               	movlw	high ___aomod@dividend
  3008  03BC  0087               	movwf	7
  3009  03BD  3F47               	moviw [7]fsr1
  3010  03BE  00F1               	movwf	??___aomod
  3011  03BF  1FF1               	btfss	??___aomod,7
  3012  03C0  2BE2               	goto	l1230
  3013  03C1  0020               	movlb	0	; select bank0
  3014  03C2  09A8               	comf	___aomod@dividend,f
  3015  03C3  09A9               	comf	___aomod@dividend+1,f
  3016  03C4  09AA               	comf	___aomod@dividend+2,f
  3017  03C5  09AB               	comf	___aomod@dividend+3,f
  3018  03C6  09AC               	comf	___aomod@dividend+4,f
  3019  03C7  09AD               	comf	___aomod@dividend+5,f
  3020  03C8  09AE               	comf	___aomod@dividend+6,f
  3021  03C9  09AF               	comf	___aomod@dividend+7,f
  3022  03CA  0AA8               	incf	___aomod@dividend,f
  3023  03CB  1D03               	skipz
  3024  03CC  2BE0               	goto	u93lld
  3025  03CD  0AA9               	incf	___aomod@dividend+1,f
  3026  03CE  1D03               	skipz
  3027  03CF  2BE0               	goto	u93lld
  3028  03D0  0AAA               	incf	___aomod@dividend+2,f
  3029  03D1  1D03               	skipz
  3030  03D2  2BE0               	goto	u93lld
  3031  03D3  0AAB               	incf	___aomod@dividend+3,f
  3032  03D4  1D03               	skipz
  3033  03D5  2BE0               	goto	u93lld
  3034  03D6  0AAC               	incf	___aomod@dividend+4,f
  3035  03D7  1D03               	skipz
  3036  03D8  2BE0               	goto	u93lld
  3037  03D9  0AAD               	incf	___aomod@dividend+5,f
  3038  03DA  1D03               	skipz
  3039  03DB  2BE0               	goto	u93lld
  3040  03DC  0AAE               	incf	___aomod@dividend+6,f
  3041  03DD  1D03               	skipz
  3042  03DE  2BE0               	goto	u93lld
  3043  03DF  0AAF               	incf	___aomod@dividend+7,f
  3044  03E0                     u93lld:
  3045  03E0  01F3               	clrf	___aomod@sign
  3046  03E1  0AF3               	incf	___aomod@sign,f
  3047  03E2                     l1230:
  3048  03E2  3020               	movlw	low ___aomod@divisor
  3049  03E3  0086               	movwf	6
  3050  03E4  3000               	movlw	high ___aomod@divisor
  3051  03E5  0087               	movwf	7
  3052  03E6  3F47               	moviw [7]fsr1
  3053  03E7  00F1               	movwf	??___aomod
  3054  03E8  1FF1               	btfss	??___aomod,7
  3055  03E9  2C09               	goto	l1234
  3056  03EA  0020               	movlb	0	; select bank0
  3057  03EB  09A0               	comf	___aomod@divisor,f
  3058  03EC  09A1               	comf	___aomod@divisor+1,f
  3059  03ED  09A2               	comf	___aomod@divisor+2,f
  3060  03EE  09A3               	comf	___aomod@divisor+3,f
  3061  03EF  09A4               	comf	___aomod@divisor+4,f
  3062  03F0  09A5               	comf	___aomod@divisor+5,f
  3063  03F1  09A6               	comf	___aomod@divisor+6,f
  3064  03F2  09A7               	comf	___aomod@divisor+7,f
  3065  03F3  0AA0               	incf	___aomod@divisor,f
  3066  03F4  1D03               	skipz
  3067  03F5  2C09               	goto	l1234
  3068  03F6  0AA1               	incf	___aomod@divisor+1,f
  3069  03F7  1D03               	skipz
  3070  03F8  2C09               	goto	l1234
  3071  03F9  0AA2               	incf	___aomod@divisor+2,f
  3072  03FA  1D03               	skipz
  3073  03FB  2C09               	goto	l1234
  3074  03FC  0AA3               	incf	___aomod@divisor+3,f
  3075  03FD  1D03               	skipz
  3076  03FE  2C09               	goto	l1234
  3077  03FF  0AA4               	incf	___aomod@divisor+4,f
  3078  0400  1D03               	skipz
  3079  0401  2C09               	goto	l1234
  3080  0402  0AA5               	incf	___aomod@divisor+5,f
  3081  0403  1D03               	skipz
  3082  0404  2C09               	goto	l1234
  3083  0405  0AA6               	incf	___aomod@divisor+6,f
  3084  0406  1D03               	skipz
  3085  0407  2C09               	goto	l1234
  3086  0408  0AA7               	incf	___aomod@divisor+7,f
  3087  0409                     l1234:
  3088  0409  0020               	movlb	0	; select bank0
  3089  040A  0820               	movf	___aomod@divisor,w
  3090  040B  0421               	iorwf	___aomod@divisor+1,w
  3091  040C  0422               	iorwf	___aomod@divisor+2,w
  3092  040D  0423               	iorwf	___aomod@divisor+3,w
  3093  040E  0424               	iorwf	___aomod@divisor+4,w
  3094  040F  0425               	iorwf	___aomod@divisor+5,w
  3095  0410  0426               	iorwf	___aomod@divisor+6,w
  3096  0411  0427               	iorwf	___aomod@divisor+7,w
  3097  0412  1903               	skipnz
  3098  0413  2C61               	goto	l1250
  3099  0414  01F2               	clrf	___aomod@counter
  3100  0415  0AF2               	incf	___aomod@counter,f
  3101  0416                     l1242:
  3102  0416  1BA7               	btfsc	___aomod@divisor+7,7
  3103  0417  2C25               	goto	l1244
  3104  0418  35A0               	lslf	___aomod@divisor,f
  3105  0419  0DA1               	rlf	___aomod@divisor+1,f
  3106  041A  0DA2               	rlf	___aomod@divisor+2,f
  3107  041B  0DA3               	rlf	___aomod@divisor+3,f
  3108  041C  0DA4               	rlf	___aomod@divisor+4,f
  3109  041D  0DA5               	rlf	___aomod@divisor+5,f
  3110  041E  0DA6               	rlf	___aomod@divisor+6,f
  3111  041F  0DA7               	rlf	___aomod@divisor+7,f
  3112  0420  3001               	movlw	1
  3113  0421  00F1               	movwf	??___aomod
  3114  0422  0871               	movf	??___aomod,w
  3115  0423  07F2               	addwf	___aomod@counter,f
  3116  0424  2C16               	goto	l1242
  3117  0425                     l1244:
  3118  0425  0827               	movf	___aomod@divisor+7,w
  3119  0426  022F               	subwf	___aomod@dividend+7,w
  3120  0427  1D03               	skipz
  3121  0428  2C43               	goto	u985
  3122  0429  0826               	movf	___aomod@divisor+6,w
  3123  042A  022E               	subwf	___aomod@dividend+6,w
  3124  042B  1D03               	skipz
  3125  042C  2C43               	goto	u985
  3126  042D  0825               	movf	___aomod@divisor+5,w
  3127  042E  022D               	subwf	___aomod@dividend+5,w
  3128  042F  1D03               	skipz
  3129  0430  2C43               	goto	u985
  3130  0431  0824               	movf	___aomod@divisor+4,w
  3131  0432  022C               	subwf	___aomod@dividend+4,w
  3132  0433  1D03               	skipz
  3133  0434  2C43               	goto	u985
  3134  0435  0823               	movf	___aomod@divisor+3,w
  3135  0436  022B               	subwf	___aomod@dividend+3,w
  3136  0437  1D03               	skipz
  3137  0438  2C43               	goto	u985
  3138  0439  0822               	movf	___aomod@divisor+2,w
  3139  043A  022A               	subwf	___aomod@dividend+2,w
  3140  043B  1D03               	skipz
  3141  043C  2C43               	goto	u985
  3142  043D  0821               	movf	___aomod@divisor+1,w
  3143  043E  0229               	subwf	___aomod@dividend+1,w
  3144  043F  1D03               	skipz
  3145  0440  2C43               	goto	u985
  3146  0441  0820               	movf	___aomod@divisor,w
  3147  0442  0228               	subwf	___aomod@dividend,w
  3148  0443                     u985:
  3149  0443  1C03               	skipc
  3150  0444  2C55               	goto	l1248
  3151  0445  0820               	movf	___aomod@divisor,w
  3152  0446  02A8               	subwf	___aomod@dividend,f
  3153  0447  0821               	movf	___aomod@divisor+1,w
  3154  0448  3BA9               	subwfb	___aomod@dividend+1,f
  3155  0449  0822               	movf	___aomod@divisor+2,w
  3156  044A  3BAA               	subwfb	___aomod@dividend+2,f
  3157  044B  0823               	movf	___aomod@divisor+3,w
  3158  044C  3BAB               	subwfb	___aomod@dividend+3,f
  3159  044D  0824               	movf	___aomod@divisor+4,w
  3160  044E  3BAC               	subwfb	___aomod@dividend+4,f
  3161  044F  0825               	movf	___aomod@divisor+5,w
  3162  0450  3BAD               	subwfb	___aomod@dividend+5,f
  3163  0451  0826               	movf	___aomod@divisor+6,w
  3164  0452  3BAE               	subwfb	___aomod@dividend+6,f
  3165  0453  0827               	movf	___aomod@divisor+7,w
  3166  0454  3BAF               	subwfb	___aomod@dividend+7,f
  3167  0455                     l1248:
  3168  0455  36A7               	lsrf	___aomod@divisor+7,f
  3169  0456  0CA6               	rrf	___aomod@divisor+6,f
  3170  0457  0CA5               	rrf	___aomod@divisor+5,f
  3171  0458  0CA4               	rrf	___aomod@divisor+4,f
  3172  0459  0CA3               	rrf	___aomod@divisor+3,f
  3173  045A  0CA2               	rrf	___aomod@divisor+2,f
  3174  045B  0CA1               	rrf	___aomod@divisor+1,f
  3175  045C  0CA0               	rrf	___aomod@divisor,f
  3176  045D  3001               	movlw	1
  3177  045E  02F2               	subwf	___aomod@counter,f
  3178  045F  1D03               	btfss	3,2
  3179  0460  2C25               	goto	l1244
  3180  0461                     l1250:
  3181  0461  0873               	movf	___aomod@sign,w
  3182  0462  1903               	btfsc	3,2
  3183  0463  2C82               	goto	l287
  3184  0464  09A8               	comf	___aomod@dividend,f
  3185  0465  09A9               	comf	___aomod@dividend+1,f
  3186  0466  09AA               	comf	___aomod@dividend+2,f
  3187  0467  09AB               	comf	___aomod@dividend+3,f
  3188  0468  09AC               	comf	___aomod@dividend+4,f
  3189  0469  09AD               	comf	___aomod@dividend+5,f
  3190  046A  09AE               	comf	___aomod@dividend+6,f
  3191  046B  09AF               	comf	___aomod@dividend+7,f
  3192  046C  0AA8               	incf	___aomod@dividend,f
  3193  046D  1D03               	skipz
  3194  046E  2C82               	goto	l287
  3195  046F  0AA9               	incf	___aomod@dividend+1,f
  3196  0470  1D03               	skipz
  3197  0471  2C82               	goto	l287
  3198  0472  0AAA               	incf	___aomod@dividend+2,f
  3199  0473  1D03               	skipz
  3200  0474  2C82               	goto	l287
  3201  0475  0AAB               	incf	___aomod@dividend+3,f
  3202  0476  1D03               	skipz
  3203  0477  2C82               	goto	l287
  3204  0478  0AAC               	incf	___aomod@dividend+4,f
  3205  0479  1D03               	skipz
  3206  047A  2C82               	goto	l287
  3207  047B  0AAD               	incf	___aomod@dividend+5,f
  3208  047C  1D03               	skipz
  3209  047D  2C82               	goto	l287
  3210  047E  0AAE               	incf	___aomod@dividend+6,f
  3211  047F  1D03               	skipz
  3212  0480  2C82               	goto	l287
  3213  0481  0AAF               	incf	___aomod@dividend+7,f
  3214  0482                     l287:
  3215  0482  0020               	movlb	0	; select bank0
  3216  0483  0828               	movf	___aomod@dividend,w
  3217  0484  00A0               	movwf	?___aomod
  3218  0485  0829               	movf	___aomod@dividend+1,w
  3219  0486  00A1               	movwf	?___aomod+1
  3220  0487  082A               	movf	___aomod@dividend+2,w
  3221  0488  00A2               	movwf	?___aomod+2
  3222  0489  082B               	movf	___aomod@dividend+3,w
  3223  048A  00A3               	movwf	?___aomod+3
  3224  048B  082C               	movf	___aomod@dividend+4,w
  3225  048C  00A4               	movwf	?___aomod+4
  3226  048D  082D               	movf	___aomod@dividend+5,w
  3227  048E  00A5               	movwf	?___aomod+5
  3228  048F  082E               	movf	___aomod@dividend+6,w
  3229  0490  00A6               	movwf	?___aomod+6
  3230  0491  082F               	movf	___aomod@dividend+7,w
  3231  0492  00A7               	movwf	?___aomod+7
  3232  0493  0008               	return
  3233  0494                     __end_of___aomod:
  3234                           
  3235                           	psect	text15
  3236  02C5                     __ptext15:	
  3237 ;; *************** function ___aodiv *****************
  3238 ;; Defined at:
  3239 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
  3240 ;; Parameters:    Size  Location     Type
  3241 ;;  divisor         8    0[BANK0 ] long long 
  3242 ;;  dividend        8    8[BANK0 ] long long 
  3243 ;; Auto vars:     Size  Location     Type
  3244 ;;  quotient        8    4[COMMON] long long 
  3245 ;;  sign            1    3[COMMON] unsigned char 
  3246 ;;  counter         1    2[COMMON] unsigned char 
  3247 ;; Return value:  Size  Location     Type
  3248 ;;                  8    0[BANK0 ] long long 
  3249 ;; Registers used:
  3250 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3251 ;; Tracked objects:
  3252 ;;		On entry : 1F/0
  3253 ;;		On exit  : 1F/0
  3254 ;;		Unchanged: 0/0
  3255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3256 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3257 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3258 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3259 ;;      Totals:        11      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3260 ;;Total ram usage:       27 bytes
  3261 ;; Hardware stack levels used: 1
  3262 ;; Hardware stack levels required when called: 1
  3263 ;; This function calls:
  3264 ;;		Nothing
  3265 ;; This function is called by:
  3266 ;;		_dtoa
  3267 ;; This function uses a non-reentrant model
  3268 ;;
  3269                           
  3270                           
  3271                           ;psect for function ___aodiv
  3272  02C5                     ___aodiv:
  3273                           
  3274                           ;incstack = 0
  3275                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  3276  02C5  01F3               	clrf	___aodiv@sign
  3277  02C6  3020               	movlw	low ___aodiv@divisor
  3278  02C7  0086               	movwf	6
  3279  02C8  3000               	movlw	high ___aodiv@divisor
  3280  02C9  0087               	movwf	7
  3281  02CA  3F47               	moviw [7]fsr1
  3282  02CB  00F1               	movwf	??___aodiv
  3283  02CC  1FF1               	btfss	??___aodiv,7
  3284  02CD  2AEF               	goto	l1192
  3285  02CE  0020               	movlb	0	; select bank0
  3286  02CF  09A0               	comf	___aodiv@divisor,f
  3287  02D0  09A1               	comf	___aodiv@divisor+1,f
  3288  02D1  09A2               	comf	___aodiv@divisor+2,f
  3289  02D2  09A3               	comf	___aodiv@divisor+3,f
  3290  02D3  09A4               	comf	___aodiv@divisor+4,f
  3291  02D4  09A5               	comf	___aodiv@divisor+5,f
  3292  02D5  09A6               	comf	___aodiv@divisor+6,f
  3293  02D6  09A7               	comf	___aodiv@divisor+7,f
  3294  02D7  0AA0               	incf	___aodiv@divisor,f
  3295  02D8  1D03               	skipz
  3296  02D9  2AED               	goto	u82lld
  3297  02DA  0AA1               	incf	___aodiv@divisor+1,f
  3298  02DB  1D03               	skipz
  3299  02DC  2AED               	goto	u82lld
  3300  02DD  0AA2               	incf	___aodiv@divisor+2,f
  3301  02DE  1D03               	skipz
  3302  02DF  2AED               	goto	u82lld
  3303  02E0  0AA3               	incf	___aodiv@divisor+3,f
  3304  02E1  1D03               	skipz
  3305  02E2  2AED               	goto	u82lld
  3306  02E3  0AA4               	incf	___aodiv@divisor+4,f
  3307  02E4  1D03               	skipz
  3308  02E5  2AED               	goto	u82lld
  3309  02E6  0AA5               	incf	___aodiv@divisor+5,f
  3310  02E7  1D03               	skipz
  3311  02E8  2AED               	goto	u82lld
  3312  02E9  0AA6               	incf	___aodiv@divisor+6,f
  3313  02EA  1D03               	skipz
  3314  02EB  2AED               	goto	u82lld
  3315  02EC  0AA7               	incf	___aodiv@divisor+7,f
  3316  02ED                     u82lld:
  3317  02ED  01F3               	clrf	___aodiv@sign
  3318  02EE  0AF3               	incf	___aodiv@sign,f
  3319  02EF                     l1192:
  3320  02EF  3028               	movlw	low ___aodiv@dividend
  3321  02F0  0086               	movwf	6
  3322  02F1  3000               	movlw	high ___aodiv@dividend
  3323  02F2  0087               	movwf	7
  3324  02F3  3F47               	moviw [7]fsr1
  3325  02F4  00F1               	movwf	??___aodiv
  3326  02F5  1FF1               	btfss	??___aodiv,7
  3327  02F6  2B1A               	goto	l1198
  3328  02F7  0020               	movlb	0	; select bank0
  3329  02F8  09A8               	comf	___aodiv@dividend,f
  3330  02F9  09A9               	comf	___aodiv@dividend+1,f
  3331  02FA  09AA               	comf	___aodiv@dividend+2,f
  3332  02FB  09AB               	comf	___aodiv@dividend+3,f
  3333  02FC  09AC               	comf	___aodiv@dividend+4,f
  3334  02FD  09AD               	comf	___aodiv@dividend+5,f
  3335  02FE  09AE               	comf	___aodiv@dividend+6,f
  3336  02FF  09AF               	comf	___aodiv@dividend+7,f
  3337  0300  0AA8               	incf	___aodiv@dividend,f
  3338  0301  1D03               	skipz
  3339  0302  2B16               	goto	l1196
  3340  0303  0AA9               	incf	___aodiv@dividend+1,f
  3341  0304  1D03               	skipz
  3342  0305  2B16               	goto	l1196
  3343  0306  0AAA               	incf	___aodiv@dividend+2,f
  3344  0307  1D03               	skipz
  3345  0308  2B16               	goto	l1196
  3346  0309  0AAB               	incf	___aodiv@dividend+3,f
  3347  030A  1D03               	skipz
  3348  030B  2B16               	goto	l1196
  3349  030C  0AAC               	incf	___aodiv@dividend+4,f
  3350  030D  1D03               	skipz
  3351  030E  2B16               	goto	l1196
  3352  030F  0AAD               	incf	___aodiv@dividend+5,f
  3353  0310  1D03               	skipz
  3354  0311  2B16               	goto	l1196
  3355  0312  0AAE               	incf	___aodiv@dividend+6,f
  3356  0313  1D03               	skipz
  3357  0314  2B16               	goto	l1196
  3358  0315  0AAF               	incf	___aodiv@dividend+7,f
  3359  0316                     l1196:
  3360  0316  3001               	movlw	1
  3361  0317  00F1               	movwf	??___aodiv
  3362  0318  0871               	movf	??___aodiv,w
  3363  0319  06F3               	xorwf	___aodiv@sign,f
  3364  031A                     l1198:
  3365  031A  3074               	movlw	low ___aodiv@quotient
  3366  031B  0086               	movwf	6
  3367  031C  3000               	movlw	high ___aodiv@quotient
  3368  031D  0087               	movwf	7
  3369  031E  3008               	movlw	8
  3370  031F  00F1               	movwf	??___aodiv
  3371  0320  3000               	movlw	0
  3372  0321                     u850:
  3373  0321  001E               	movwi fsr1++
  3374  0322  0BF1               	decfsz	??___aodiv,f
  3375  0323  2B21               	goto	u850
  3376  0324  0020               	movlb	0	; select bank0
  3377  0325  0820               	movf	___aodiv@divisor,w
  3378  0326  0421               	iorwf	___aodiv@divisor+1,w
  3379  0327  0422               	iorwf	___aodiv@divisor+2,w
  3380  0328  0423               	iorwf	___aodiv@divisor+3,w
  3381  0329  0424               	iorwf	___aodiv@divisor+4,w
  3382  032A  0425               	iorwf	___aodiv@divisor+5,w
  3383  032B  0426               	iorwf	___aodiv@divisor+6,w
  3384  032C  0427               	iorwf	___aodiv@divisor+7,w
  3385  032D  1903               	skipnz
  3386  032E  2B85               	goto	l1220
  3387  032F  01F2               	clrf	___aodiv@counter
  3388  0330  0AF2               	incf	___aodiv@counter,f
  3389  0331                     l1208:
  3390  0331  1BA7               	btfsc	___aodiv@divisor+7,7
  3391  0332  2B40               	goto	l1210
  3392  0333  35A0               	lslf	___aodiv@divisor,f
  3393  0334  0DA1               	rlf	___aodiv@divisor+1,f
  3394  0335  0DA2               	rlf	___aodiv@divisor+2,f
  3395  0336  0DA3               	rlf	___aodiv@divisor+3,f
  3396  0337  0DA4               	rlf	___aodiv@divisor+4,f
  3397  0338  0DA5               	rlf	___aodiv@divisor+5,f
  3398  0339  0DA6               	rlf	___aodiv@divisor+6,f
  3399  033A  0DA7               	rlf	___aodiv@divisor+7,f
  3400  033B  3001               	movlw	1
  3401  033C  00F1               	movwf	??___aodiv
  3402  033D  0871               	movf	??___aodiv,w
  3403  033E  07F2               	addwf	___aodiv@counter,f
  3404  033F  2B31               	goto	l1208
  3405  0340                     l1210:
  3406  0340  35F4               	lslf	___aodiv@quotient,f
  3407  0341  0DF5               	rlf	___aodiv@quotient+1,f
  3408  0342  0DF6               	rlf	___aodiv@quotient+2,f
  3409  0343  0DF7               	rlf	___aodiv@quotient+3,f
  3410  0344  0DF8               	rlf	___aodiv@quotient+4,f
  3411  0345  0DF9               	rlf	___aodiv@quotient+5,f
  3412  0346  0DFA               	rlf	___aodiv@quotient+6,f
  3413  0347  0DFB               	rlf	___aodiv@quotient+7,f
  3414  0348  0827               	movf	___aodiv@divisor+7,w
  3415  0349  022F               	subwf	___aodiv@dividend+7,w
  3416  034A  1D03               	skipz
  3417  034B  2B66               	goto	u885
  3418  034C  0826               	movf	___aodiv@divisor+6,w
  3419  034D  022E               	subwf	___aodiv@dividend+6,w
  3420  034E  1D03               	skipz
  3421  034F  2B66               	goto	u885
  3422  0350  0825               	movf	___aodiv@divisor+5,w
  3423  0351  022D               	subwf	___aodiv@dividend+5,w
  3424  0352  1D03               	skipz
  3425  0353  2B66               	goto	u885
  3426  0354  0824               	movf	___aodiv@divisor+4,w
  3427  0355  022C               	subwf	___aodiv@dividend+4,w
  3428  0356  1D03               	skipz
  3429  0357  2B66               	goto	u885
  3430  0358  0823               	movf	___aodiv@divisor+3,w
  3431  0359  022B               	subwf	___aodiv@dividend+3,w
  3432  035A  1D03               	skipz
  3433  035B  2B66               	goto	u885
  3434  035C  0822               	movf	___aodiv@divisor+2,w
  3435  035D  022A               	subwf	___aodiv@dividend+2,w
  3436  035E  1D03               	skipz
  3437  035F  2B66               	goto	u885
  3438  0360  0821               	movf	___aodiv@divisor+1,w
  3439  0361  0229               	subwf	___aodiv@dividend+1,w
  3440  0362  1D03               	skipz
  3441  0363  2B66               	goto	u885
  3442  0364  0820               	movf	___aodiv@divisor,w
  3443  0365  0228               	subwf	___aodiv@dividend,w
  3444  0366                     u885:
  3445  0366  1C03               	skipc
  3446  0367  2B79               	goto	l1218
  3447  0368  0820               	movf	___aodiv@divisor,w
  3448  0369  02A8               	subwf	___aodiv@dividend,f
  3449  036A  0821               	movf	___aodiv@divisor+1,w
  3450  036B  3BA9               	subwfb	___aodiv@dividend+1,f
  3451  036C  0822               	movf	___aodiv@divisor+2,w
  3452  036D  3BAA               	subwfb	___aodiv@dividend+2,f
  3453  036E  0823               	movf	___aodiv@divisor+3,w
  3454  036F  3BAB               	subwfb	___aodiv@dividend+3,f
  3455  0370  0824               	movf	___aodiv@divisor+4,w
  3456  0371  3BAC               	subwfb	___aodiv@dividend+4,f
  3457  0372  0825               	movf	___aodiv@divisor+5,w
  3458  0373  3BAD               	subwfb	___aodiv@dividend+5,f
  3459  0374  0826               	movf	___aodiv@divisor+6,w
  3460  0375  3BAE               	subwfb	___aodiv@dividend+6,f
  3461  0376  0827               	movf	___aodiv@divisor+7,w
  3462  0377  3BAF               	subwfb	___aodiv@dividend+7,f
  3463  0378  1474               	bsf	___aodiv@quotient,0
  3464  0379                     l1218:
  3465  0379  36A7               	lsrf	___aodiv@divisor+7,f
  3466  037A  0CA6               	rrf	___aodiv@divisor+6,f
  3467  037B  0CA5               	rrf	___aodiv@divisor+5,f
  3468  037C  0CA4               	rrf	___aodiv@divisor+4,f
  3469  037D  0CA3               	rrf	___aodiv@divisor+3,f
  3470  037E  0CA2               	rrf	___aodiv@divisor+2,f
  3471  037F  0CA1               	rrf	___aodiv@divisor+1,f
  3472  0380  0CA0               	rrf	___aodiv@divisor,f
  3473  0381  3001               	movlw	1
  3474  0382  02F2               	subwf	___aodiv@counter,f
  3475  0383  1D03               	btfss	3,2
  3476  0384  2B40               	goto	l1210
  3477  0385                     l1220:
  3478  0385  0873               	movf	___aodiv@sign,w
  3479  0386  1903               	btfsc	3,2
  3480  0387  2BA6               	goto	l274
  3481  0388  09F4               	comf	___aodiv@quotient,f
  3482  0389  09F5               	comf	___aodiv@quotient+1,f
  3483  038A  09F6               	comf	___aodiv@quotient+2,f
  3484  038B  09F7               	comf	___aodiv@quotient+3,f
  3485  038C  09F8               	comf	___aodiv@quotient+4,f
  3486  038D  09F9               	comf	___aodiv@quotient+5,f
  3487  038E  09FA               	comf	___aodiv@quotient+6,f
  3488  038F  09FB               	comf	___aodiv@quotient+7,f
  3489  0390  0AF4               	incf	___aodiv@quotient,f
  3490  0391  1D03               	skipz
  3491  0392  2BA6               	goto	l274
  3492  0393  0AF5               	incf	___aodiv@quotient+1,f
  3493  0394  1D03               	skipz
  3494  0395  2BA6               	goto	l274
  3495  0396  0AF6               	incf	___aodiv@quotient+2,f
  3496  0397  1D03               	skipz
  3497  0398  2BA6               	goto	l274
  3498  0399  0AF7               	incf	___aodiv@quotient+3,f
  3499  039A  1D03               	skipz
  3500  039B  2BA6               	goto	l274
  3501  039C  0AF8               	incf	___aodiv@quotient+4,f
  3502  039D  1D03               	skipz
  3503  039E  2BA6               	goto	l274
  3504  039F  0AF9               	incf	___aodiv@quotient+5,f
  3505  03A0  1D03               	skipz
  3506  03A1  2BA6               	goto	l274
  3507  03A2  0AFA               	incf	___aodiv@quotient+6,f
  3508  03A3  1D03               	skipz
  3509  03A4  2BA6               	goto	l274
  3510  03A5  0AFB               	incf	___aodiv@quotient+7,f
  3511  03A6                     l274:
  3512  03A6  0874               	movf	___aodiv@quotient,w
  3513  03A7  0020               	movlb	0	; select bank0
  3514  03A8  00A0               	movwf	?___aodiv
  3515  03A9  0875               	movf	___aodiv@quotient+1,w
  3516  03AA  00A1               	movwf	?___aodiv+1
  3517  03AB  0876               	movf	___aodiv@quotient+2,w
  3518  03AC  00A2               	movwf	?___aodiv+2
  3519  03AD  0877               	movf	___aodiv@quotient+3,w
  3520  03AE  00A3               	movwf	?___aodiv+3
  3521  03AF  0878               	movf	___aodiv@quotient+4,w
  3522  03B0  00A4               	movwf	?___aodiv+4
  3523  03B1  0879               	movf	___aodiv@quotient+5,w
  3524  03B2  00A5               	movwf	?___aodiv+5
  3525  03B3  087A               	movf	___aodiv@quotient+6,w
  3526  03B4  00A6               	movwf	?___aodiv+6
  3527  03B5  087B               	movf	___aodiv@quotient+7,w
  3528  03B6  00A7               	movwf	?___aodiv+7
  3529  03B7  0008               	return
  3530  03B8                     __end_of___aodiv:
  3531                           
  3532                           	psect	text16
  3533  0592                     __ptext16:	
  3534 ;; *************** function ___ltdiv *****************
  3535 ;; Defined at:
  3536 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\ltdiv.c"
  3537 ;; Parameters:    Size  Location     Type
  3538 ;;  divisor         3    1[COMMON] unsigned um
  3539 ;;  dividend        3    4[COMMON] unsigned um
  3540 ;; Auto vars:     Size  Location     Type
  3541 ;;  quotient        3    8[COMMON] unsigned um
  3542 ;;  counter         1   11[COMMON] unsigned char 
  3543 ;; Return value:  Size  Location     Type
  3544 ;;                  3    1[COMMON] unsigned um
  3545 ;; Registers used:
  3546 ;;		wreg, status,2, status,0
  3547 ;; Tracked objects:
  3548 ;;		On entry : 1F/1B
  3549 ;;		On exit  : 1F/1B
  3550 ;;		Unchanged: 1E/0
  3551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3552 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3553 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3554 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3555 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3556 ;;Total ram usage:       11 bytes
  3557 ;; Hardware stack levels used: 1
  3558 ;; Hardware stack levels required when called: 1
  3559 ;; This function calls:
  3560 ;;		Nothing
  3561 ;; This function is called by:
  3562 ;;		_main
  3563 ;; This function uses a non-reentrant model
  3564 ;;
  3565                           
  3566                           
  3567                           ;psect for function ___ltdiv
  3568  0592                     ___ltdiv:
  3569                           
  3570                           ;incstack = 0
  3571                           ; Regs used in ___ltdiv: [wreg+status,2+status,0]
  3572  0592  3000               	movlw	0
  3573  0593  00F8               	movwf	___ltdiv@quotient
  3574  0594  3000               	movlw	0
  3575  0595  00F9               	movwf	___ltdiv@quotient+1
  3576  0596  3000               	movlw	0
  3577  0597  00FA               	movwf	___ltdiv@quotient+2
  3578  0598  0873               	movf	___ltdiv@divisor+2,w
  3579  0599  0472               	iorwf	___ltdiv@divisor+1,w
  3580  059A  0471               	iorwf	___ltdiv@divisor,w
  3581  059B  1903               	skipnz
  3582  059C  2DCF               	goto	l1480
  3583  059D  01FB               	clrf	___ltdiv@counter
  3584  059E  0AFB               	incf	___ltdiv@counter,f
  3585  059F                     l1466:
  3586  059F  1BF3               	btfsc	___ltdiv@divisor+2,7
  3587  05A0  2DAC               	goto	l1468
  3588  05A1  3001               	movlw	1
  3589  05A2                     u1365:
  3590  05A2  35F1               	lslf	___ltdiv@divisor,f
  3591  05A3  0DF2               	rlf	___ltdiv@divisor+1,f
  3592  05A4  0DF3               	rlf	___ltdiv@divisor+2,f
  3593  05A5  0B89               	decfsz	9,f
  3594  05A6  2DA2               	goto	u1365
  3595  05A7  3001               	movlw	1
  3596  05A8  00F7               	movwf	??___ltdiv
  3597  05A9  0877               	movf	??___ltdiv,w
  3598  05AA  07FB               	addwf	___ltdiv@counter,f
  3599  05AB  2D9F               	goto	l1466
  3600  05AC                     l1468:
  3601  05AC  3001               	movlw	1
  3602  05AD                     u1385:
  3603  05AD  35F8               	lslf	___ltdiv@quotient,f
  3604  05AE  0DF9               	rlf	___ltdiv@quotient+1,f
  3605  05AF  0DFA               	rlf	___ltdiv@quotient+2,f
  3606  05B0  0B89               	decfsz	9,f
  3607  05B1  2DAD               	goto	u1385
  3608  05B2  0873               	movf	___ltdiv@divisor+2,w
  3609  05B3  0276               	subwf	___ltdiv@dividend+2,w
  3610  05B4  1D03               	skipz
  3611  05B5  2DBC               	goto	u1395
  3612  05B6  0872               	movf	___ltdiv@divisor+1,w
  3613  05B7  0275               	subwf	___ltdiv@dividend+1,w
  3614  05B8  1D03               	skipz
  3615  05B9  2DBC               	goto	u1395
  3616  05BA  0871               	movf	___ltdiv@divisor,w
  3617  05BB  0274               	subwf	___ltdiv@dividend,w
  3618  05BC                     u1395:
  3619  05BC  1C03               	skipc
  3620  05BD  2DC5               	goto	l1476
  3621  05BE  0871               	movf	___ltdiv@divisor,w
  3622  05BF  02F4               	subwf	___ltdiv@dividend,f
  3623  05C0  0872               	movf	___ltdiv@divisor+1,w
  3624  05C1  3BF5               	subwfb	___ltdiv@dividend+1,f
  3625  05C2  0873               	movf	___ltdiv@divisor+2,w
  3626  05C3  3BF6               	subwfb	___ltdiv@dividend+2,f
  3627  05C4  1478               	bsf	___ltdiv@quotient,0
  3628  05C5                     l1476:
  3629  05C5  3001               	movlw	1
  3630  05C6                     u1405:
  3631  05C6  36F3               	lsrf	___ltdiv@divisor+2,f
  3632  05C7  0CF2               	rrf	___ltdiv@divisor+1,f
  3633  05C8  0CF1               	rrf	___ltdiv@divisor,f
  3634  05C9  0B89               	decfsz	9,f
  3635  05CA  2DC6               	goto	u1405
  3636  05CB  3001               	movlw	1
  3637  05CC  02FB               	subwf	___ltdiv@counter,f
  3638  05CD  1D03               	btfss	3,2
  3639  05CE  2DAC               	goto	l1468
  3640  05CF                     l1480:
  3641  05CF  0878               	movf	___ltdiv@quotient,w
  3642  05D0  00F1               	movwf	?___ltdiv
  3643  05D1  0879               	movf	___ltdiv@quotient+1,w
  3644  05D2  00F2               	movwf	?___ltdiv+1
  3645  05D3  087A               	movf	___ltdiv@quotient+2,w
  3646  05D4  00F3               	movwf	?___ltdiv+2
  3647  05D5  0008               	return
  3648  05D6                     __end_of___ltdiv:
  3649                           
  3650                           	psect	intentry
  3651  0004                     __pintentry:	
  3652 ;; *************** function _myIsr *****************
  3653 ;; Defined at:
  3654 ;;		line 114 in file "smt_main.c"
  3655 ;; Parameters:    Size  Location     Type
  3656 ;;		None
  3657 ;; Auto vars:     Size  Location     Type
  3658 ;;		None
  3659 ;; Return value:  Size  Location     Type
  3660 ;;                  1    wreg      void 
  3661 ;; Registers used:
  3662 ;;		wreg, status,2, status,0
  3663 ;; Tracked objects:
  3664 ;;		On entry : 0/0
  3665 ;;		On exit  : 4/0
  3666 ;;		Unchanged: 0/0
  3667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3670 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3671 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3672 ;;Total ram usage:        1 bytes
  3673 ;; Hardware stack levels used: 1
  3674 ;; This function calls:
  3675 ;;		Nothing
  3676 ;; This function is called by:
  3677 ;;		Interrupt level 1
  3678 ;; This function uses a non-reentrant model
  3679 ;;
  3680                           
  3681  0004                     _myIsr:
  3682                           
  3683                           ;incstack = 0
  3684  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  3685                           
  3686                           ; Regs used in _myIsr: [wreg+status,2+status,0]
  3687  0005  3180               	pagesel	$
  3688                           
  3689                           ;smt_main.c: 116:     if(PIR4bits.SMT1PRAIF)
  3690  0006  0020               	movlb	0	; select bank0
  3691  0007  1C93               	btfss	19,1	;volatile
  3692  0008  281A               	goto	i1l1540
  3693                           
  3694                           ;smt_main.c: 117:     {;smt_main.c: 118:         dataAvailable = 1;
  3695  0009  3001               	movlw	1
  3696  000A  00F0               	movwf	??_myIsr
  3697  000B  0870               	movf	??_myIsr,w
  3698  000C  00EF               	movwf	_dataAvailable	;volatile
  3699                           
  3700                           ;smt_main.c: 119:         LATBbits.LATB7 = ~LATBbits.LATB7;
  3701  000D  1003               	clrc
  3702  000E  0022               	movlb	2	; select bank2
  3703  000F  1F8D               	btfss	13,7	;volatile
  3704  0010  1403               	setc
  3705  0011  1C03               	btfss	3,0
  3706  0012  2816               	goto	u144_20
  3707  0013  0022               	movlb	2	; select bank2
  3708  0014  178D               	bsf	13,7	;volatile
  3709  0015  2818               	goto	i1l1538
  3710  0016                     u144_20:
  3711  0016  0022               	movlb	2	; select bank2
  3712  0017  138D               	bcf	13,7	;volatile
  3713  0018                     i1l1538:
  3714                           
  3715                           ;smt_main.c: 120:         PIR4bits.SMT1PRAIF = 0;
  3716  0018  0020               	movlb	0	; select bank0
  3717  0019  1093               	bcf	19,1	;volatile
  3718  001A                     i1l1540:
  3719                           
  3720                           ;smt_main.c: 122:     if(PIR4bits.SMT2IF)
  3721  001A  1D93               	btfss	19,3	;volatile
  3722  001B  2830               	goto	i1l100
  3723                           
  3724                           ;smt_main.c: 123:     {;smt_main.c: 124:         PIR4bits.SMT2IF = 0;
  3725  001C  1193               	bcf	19,3	;volatile
  3726                           
  3727                           ;smt_main.c: 125:         SMT2TMR = 16777216-smt2Value;
  3728  001D  0021               	movlb	1	; select bank1
  3729  001E  0820               	movf	_smt2Value^(0+128),w	;volatile
  3730  001F  3C00               	sublw	0
  3731  0020  003B               	movlb	27	; select bank27
  3732  0021  009E               	movwf	30	;volatile
  3733  0022  0021               	movlb	1	; select bank1
  3734  0023  0821               	movf	(_smt2Value+1)^(0+128),w	;volatile
  3735  0024  1C03               	skipc
  3736  0025  0F21               	incfsz	(_smt2Value+1)^(0+128),w	;volatile
  3737  0026  3C00               	sublw	0
  3738  0027  003B               	movlb	27	; select bank27
  3739  0028  009F               	movwf	31	;volatile
  3740  0029  0021               	movlb	1	; select bank1
  3741  002A  0822               	movf	(_smt2Value+2)^(0+128),w	;volatile
  3742  002B  1C03               	skipc
  3743  002C  0F22               	incfsz	(_smt2Value+2)^(0+128),w	;volatile
  3744  002D  3C00               	sublw	0
  3745  002E  003B               	movlb	27	; select bank27
  3746  002F  00A0               	movwf	32	;volatile
  3747  0030                     i1l100:
  3748  0030  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  3749  0031  0009               	retfie
  3750  0032                     __end_of_myIsr:
  3751  007E                     btemp	set	126	;btemp
  3752  007E                     int$flags	set	126
  3753  007E                     wtemp0	set	126
  3754                           
  3755                           	psect	idloc
  3756                           
  3757                           ;Config register IDLOC0 @ 0x8000
  3758                           ;	unspecified, using default values
  3759  8000                     	org	32768
  3760  8000  3FFF               	dw	16383
  3761                           
  3762                           ;Config register IDLOC1 @ 0x8001
  3763                           ;	unspecified, using default values
  3764  8001                     	org	32769
  3765  8001  3FFF               	dw	16383
  3766                           
  3767                           ;Config register IDLOC2 @ 0x8002
  3768                           ;	unspecified, using default values
  3769  8002                     	org	32770
  3770  8002  3FFF               	dw	16383
  3771                           
  3772                           ;Config register IDLOC3 @ 0x8003
  3773                           ;	unspecified, using default values
  3774  8003                     	org	32771
  3775  8003  3FFF               	dw	16383
  3776                           
  3777                           	psect	config
  3778                           
  3779                           ;Config register CONFIG1 @ 0x8007
  3780                           ;	Oscillator Selection Bits
  3781                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  3782                           ;	Power-up Timer Enable
  3783                           ;	PWRTE = OFF, PWRT disabled
  3784                           ;	MCLR Pin Function Select
  3785                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  3786                           ;	Flash Program Memory Code Protection
  3787                           ;	CP = OFF, Program memory code protection is disabled
  3788                           ;	Brown-out Reset Enable
  3789                           ;	BOREN = ON, Brown-out Reset enabled
  3790                           ;	Clock Out Enable
  3791                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  3792                           ;	Internal/External Switch Over
  3793                           ;	IESO = OFF, Internal External Switch Over mode is disabled
  3794                           ;	Fail-Safe Clock Monitor Enable
  3795                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  3796  8007                     	org	32775
  3797  8007  2FFC               	dw	12284
  3798                           
  3799                           ;Config register CONFIG2 @ 0x8008
  3800                           ;	Flash Memory Self-Write Protection
  3801                           ;	WRT = OFF, Write protection off
  3802                           ;	Peripheral Pin Select one-way control
  3803                           ;	PPS1WAY = OFF, The PPSLOCK bit can be set and cleared repeatedly by software
  3804                           ;	Zero Cross Detect Disable Bit
  3805                           ;	ZCD = OFF, ZCD disable.  ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  3806                           ;	PLL Enable Bit
  3807                           ;	PLLEN = ON, 4x PLL is always enabled
  3808                           ;	Stack Overflow/Underflow Reset Enable
  3809                           ;	STVREN = OFF, Stack Overflow or Underflow will not cause a Reset
  3810                           ;	Brown-out Reset Voltage Selection
  3811                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  3812                           ;	Low-Power Brown Out Reset
  3813                           ;	LPBOR = OFF, Low-Power BOR is disabled
  3814                           ;	Low-Voltage Programming Enable
  3815                           ;	LVP = ON, Low-voltage programming enabled
  3816  8008                     	org	32776
  3817  8008  3DFB               	dw	15867
  3818                           
  3819                           ;Config register CONFIG3 @ 0x8009
  3820                           ;	WDT Period Select
  3821                           ;	WDTCPS = WDTCPS1F, Software Control (WDTPS)
  3822                           ;	Watchdog Timer Enable
  3823                           ;	WDTE = OFF, WDT disabled
  3824                           ;	WDT Window Select
  3825                           ;	WDTCWS = WDTCWSSW, Software WDT window size control (WDTWS bits)
  3826                           ;	WDT Input Clock Selector
  3827                           ;	WDTCCS = SWC, Software control, controlled by WDTCS bits
  3828  8009                     	org	32777
  3829  8009  3F9F               	dw	16287

Data Sizes:
    Strings     11
    Constant    0
    Data        0
    BSS         45
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80     77      80
    BANK1            80      0      42
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_8(CODE[3]), STR_4(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_8(CODE[3]), STR_4(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S957_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 


Critical Paths under _main in COMMON

    _main->_printf
    _vfpfcnvrt->_strncmp
    _dtoa->___aodiv
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _abs->___aomod

Critical Paths under _myIsr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->___aodiv
    _dtoa->___aomod
    _pad->_fputs
    _abs->___aomod

Critical Paths under _myIsr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _myIsr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myIsr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myIsr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _myIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _myIsr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _myIsr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _myIsr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _myIsr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _myIsr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _myIsr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _myIsr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _myIsr in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    7130
                            ___ltdiv
                             _printf
                           _smt_init
                          _uart_init
 ---------------------------------------------------------------------------------
 (1) _uart_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _smt_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _printf                                              10     4      6    6816
                                             12 COMMON     1     1      0
                                             70 BANK0      7     1      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3    6684
                                             62 BANK0      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           40    38      2    6352
                                             46 BANK0     16    14      2
                               _dtoa
                              _fputc
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     681
                                              1 COMMON    11     5      6
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                30    22      8    4215
                                             16 BANK0     30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    2466
                                             11 COMMON     1     1      0
                                              7 BANK0      8     5      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               5     3      2     123
                                              1 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                8     7      1    1105
                                             10 COMMON     1     0      1
                                              0 BANK0      7     7      0
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     790
                                              2 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      22
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              4 COMMON     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             19     3     16     448
                                              1 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             27    11     16     452
                                              1 COMMON    11    11      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (1) ___ltdiv                                             11     5      6     314
                                              1 COMMON    11     5      6
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _myIsr                                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___ltdiv
   _printf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
             _strlen
         _fputc
         _strncmp
   _smt_init
   _uart_init

 _myIsr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4D      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      2A       7       52.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      87      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      87      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Mar 05 14:34:37 2023

                    l103 06C4                      l274 03A6                      l287 0482  
                    l670 0588                      l680 00BE                      l666 055D  
                    l674 0088                      l683 0150                      l675 0090  
                    l669 057D                      l679 00AC                      u850 0321  
                    u785 0600                      u885 0366                      u985 0443  
                    _abs 068D                      _pad 0549                      wreg 0009  
           _BAUD1CONbits 019F                     l1210 0340                     ?_abs 0074  
                   l1220 0385                     l1300 00EA                     l1230 03E2  
                   l1310 00C5                     l1208 0331                     l1160 05DF  
                   l1400 0297                     l1218 0379                     l1242 0416  
                   l1250 0461                     l1234 0409                     l1322 0163  
                   l1244 0425                     l1164 0602                     l1180 067B  
                   l1332 0179                     l1420 0613                     l1174 063B  
                   l1182 0686                     l1262 055B                     l1318 015C  
                   l1406 02A2                     l1422 062F                     l1192 02EF  
                   l1248 0455                     l1328 016D                     l1258 0554  
                   l1290 00A4                     l1354 0538                     l1346 0531  
                   l1370 01CC                     l1196 0316                     l1268 055F  
                   l1348 050C                     l1524 04C4                     l1198 031A  
                   l1390 0270                     l1382 0231                     l1480 05CF  
                   l1296 00BA                     l1466 059F                     l1378 0205  
                   l1476 05C5                     l1468 05AC                     l1396 0291  
                   ?_pad 0027                     STR_1 06CD                     STR_2 06D2  
                   STR_4 06D2                     STR_6 06D5                     STR_8 06D5  
                   u1045 0569                     u1125 009C                     u1070 005E  
                   u1080 005F                     u1065 0696                     u1155 015A  
                   u1405 05C6                     u1175 00D9                     u1185 00E5  
                   u1365 05A2                     u1385 05AD                     u1395 05BC  
                   abs@a 0074                     _dbuf 00AA                     _main 0494  
                   _dtoa 0043                     _prec 00A8                     _nout 00A4  
                   pad@i 002A                     pad@p 0028                     fsr0h 0005  
                   fsr1h 0007                     indf0 0000                     fsr0l 0004  
                   indf1 0001                     fsr1l 0006                     pad@w 002C  
                   btemp 007E                     start 0032                    ??_abs 0076  
                  ??_pad 007B          __end_of___aodiv 03B8                    ?_main 0070  
                  ?_dtoa 0030          __end_of___aomod 0494          __end_of___ltdiv 05D6  
                  i1l100 0030             vfpfcnvrt@fmt 004E                    u82lld 02ED  
                  u93lld 03E0                    _flags 006D                    _fputc 05D6  
                  _fputs 0638                    _myIsr 0004                    pad@fp 002E  
                  _width 00A6                    _putch 06C0                    dtoa@d 0030  
                  dtoa@i 004C                    dtoa@n 0044                    dtoa@p 003D  
                  dtoa@s 0042                    dtoa@w 0040                    status 0003  
                  wtemp0 007E          __end_of_strncmp 0549          __initialization 0034  
           __end_of_main 04F7             __end_of_dtoa 018A                   ??_main 007D  
                 ??_dtoa 0038                   ?_fputc 0072                   ?_fputs 007A  
                 ?_myIsr 0070                   ?_putch 0070                   _RB6PPS 0E9E  
                 i1l1540 001A                   i1l1538 0018                   _RC7PPS 0EA7  
                 u144_20 0016                   _SMT1PR 0D95                   _SPBRGH 019C  
                 _SPBRGL 019B                   _TX1REG 019A             vfprintf@cfmt 0064  
              ??___aodiv 0071                ??___aomod 0071                ??___ltdiv 0077  
                 _printf 06A4                   pad@buf 0027                   dtoa@fp 003F  
                 _strlen 0676                   fputc@c 0072                   fputs@c 0023  
                 fputs@i 0024                   fputs@s 0026         __end_of_smt_init 0676  
                 putch@c 0071         __end_of_vfprintf 0638                ??_strncmp 0077  
__end_of__initialization 003F           __pcstackCOMMON 0070            __end_of_fputc 060B  
          __end_of_fputs 065C            __end_of_myIsr 0032            __end_of_putch 06C7  
                ??_fputc 0075                  ??_fputs 0020                  ??_myIsr 0070  
                ??_putch 0071               __pbssBANK0 006D               __pbssBANK1 00A0  
             __pmaintext 0494               __pintentry 0004                  _CLC1CON 0F10  
                _CLC1POL 0F11                  ?_printf 0066                  ?_strlen 0071  
     __size_of_uart_init 000C       __size_of_vfpfcnvrt 013B                  _SMT1CPR 0D8F  
                _SMT2TMR 0D9E                  ___aodiv 02C5                  ___aomod 03B8  
              ?_smt_init 0070                  ___ltdiv 0592                ?_vfprintf 005E  
                __ptext1 06B4                  __ptext2 065C                  __ptext3 06A4  
                __ptext4 060B                  __ptext5 018A                  __ptext6 04F7  
                __ptext7 0043                  __ptext8 0549                  __ptext9 0676  
        __size_of_printf 0010          __size_of_strlen 0017             __size_of_abs 0017  
           __size_of_pad 0049                  clrloop0 06C8            _dataAvailable 006F  
                _strncmp 04F7     end_of_initialization 003F                  fputc@fp 0074  
                fputs@fp 007A        __end_of_uart_init 06C0         ___ltdiv@dividend 0074  
      __end_of_vfpfcnvrt 02C5               ??_smt_init 0071               ??_vfprintf 0061  
                strlen@a 0074                  strlen@s 0075                _TRISAbits 008C  
              _TRISBbits 008D                _TRISCbits 008E         ___ltdiv@quotient 0078  
            _CLC1CONbits 0F10              vfpfcnvrt@ap 004F              vfpfcnvrt@fp 005D  
            vfpfcnvrt@ll 0055           __end_of_printf 06B4           __end_of_strlen 068D  
    start_initialization 0034              __end_of_abs 06A4              __end_of_pad 0592  
            vfprintf@fmt 005E                 ??_printf 007C                 ??_strlen 0073  
              ___latbits 0002            __pcstackBANK0 0020         ___aodiv@dividend 0028  
              _dtoa$1028 003B                 ?___aodiv 0020                 ?___aomod 0020  
       ___aodiv@quotient 0074                 ?___ltdiv 0071        __size_of_smt_init 001A  
      __size_of_vfprintf 002D                 _CLC1GLS0 0F16                 _CLC1GLS1 0F17  
               _CLC1GLS2 0F18                 _CLC1GLS3 0F19                 _CLC1SEL0 0F12  
               _CLC1SEL1 0F13                 _CLC1SEL2 0F14                 _CLC1SEL3 0F15  
         __size_of_fputc 0035           __size_of_fputs 0024           __size_of_myIsr 002E  
               ?_strncmp 0071           __size_of_putch 0007                _smt2Value 00A0  
               _LATBbits 010D                clear_ram0 06C7                 _PIE4bits 0093  
        ___ltdiv@divisor 0071                 _PIR4bits 0013          ___ltdiv@counter 007B  
              _uart_init 06B4                _vfpfcnvrt 018A             _SMT1CON0bits 0D98  
           _SMT1CON1bits 0D99             _SMT2CON0bits 0DAA             _SMT2CON1bits 0DAB  
             vfprintf@ap 0060               vfprintf@fp 0063               ?_uart_init 0070  
       __size_of___aodiv 00F3         __size_of___aomod 00DC               ?_vfpfcnvrt 004E  
       __size_of___ltdiv 0044          ___aodiv@divisor 0020          ___aodiv@counter 0072  
             _ANSELAbits 018C                 __ptext10 0638                 __ptext11 05D6  
               __ptext12 06C0                 __ptext13 068D                 __ptext14 03B8  
               __ptext15 02C5                 __ptext16 0592         __size_of_strncmp 0052  
          __size_of_main 0063            __size_of_dtoa 0147               _RC1STAbits 019D  
               int$flags 007E                 _smt_init 065C                 _vfprintf 060B  
              printf@fmt 0066         ___aomod@dividend 0028              _OSCTUNEbits 0098  
             _INTCONbits 000B                 intlevel1 0000                strncmp@_l 0071  
              strncmp@_r 0073               _OSCCONbits 0099              ??_uart_init 0071  
               printf@ap 006C          ___aomod@divisor 0020              ??_vfpfcnvrt 0050  
        ___aomod@counter 0072            __pstringtext1 06CD            __pstringtext2 06D2  
          __pstringtext3 06D5            __pstringtext4 0000                 strncmp@l 0078  
               strncmp@n 0075                 strncmp@r 007A               _TX1STAbits 019E  
           ___aodiv@sign 0073             ___aomod@sign 0073  
