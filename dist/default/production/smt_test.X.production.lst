

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Mar 16 02:29:05 2023

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og9 
     1                           	processor	16F1619
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2,group=3
    19                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text6,local,class=CODE,merge=1,delta=2,group=3
    22                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text9,local,class=CODE,merge=1,delta=2,group=3
    25                           	psect	text10,local,class=CODE,merge=1,delta=2,group=3
    26                           	psect	text11,local,class=CODE,merge=1,delta=2,group=3
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2,group=3
    29                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	intentry,global,class=CODE,delta=2
    33                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    34                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    35                           	dabs	1,0x7E,2
    36  0000                     
    37                           ; Version 2.40
    38                           ; Generated 17/11/2021 GMT
    39                           ; 
    40                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution. Publication is not required when
    54                           ;        this file is used in an embedded application.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC16F1619 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72  0000                     	;# 
    73  0001                     	;# 
    74  0002                     	;# 
    75  0003                     	;# 
    76  0004                     	;# 
    77  0005                     	;# 
    78  0006                     	;# 
    79  0007                     	;# 
    80  0008                     	;# 
    81  0009                     	;# 
    82  000A                     	;# 
    83  000B                     	;# 
    84  000C                     	;# 
    85  000D                     	;# 
    86  000E                     	;# 
    87  0010                     	;# 
    88  0011                     	;# 
    89  0012                     	;# 
    90  0013                     	;# 
    91  0014                     	;# 
    92  0015                     	;# 
    93  0016                     	;# 
    94  0016                     	;# 
    95  0017                     	;# 
    96  0018                     	;# 
    97  0019                     	;# 
    98  001A                     	;# 
    99  001A                     	;# 
   100  001B                     	;# 
   101  001B                     	;# 
   102  001C                     	;# 
   103  001D                     	;# 
   104  001E                     	;# 
   105  001F                     	;# 
   106  008C                     	;# 
   107  008D                     	;# 
   108  008E                     	;# 
   109  0090                     	;# 
   110  0091                     	;# 
   111  0092                     	;# 
   112  0093                     	;# 
   113  0094                     	;# 
   114  0095                     	;# 
   115  0096                     	;# 
   116  0098                     	;# 
   117  0099                     	;# 
   118  009A                     	;# 
   119  009B                     	;# 
   120  009B                     	;# 
   121  009C                     	;# 
   122  009D                     	;# 
   123  009E                     	;# 
   124  009F                     	;# 
   125  010C                     	;# 
   126  010D                     	;# 
   127  010E                     	;# 
   128  0111                     	;# 
   129  0112                     	;# 
   130  0113                     	;# 
   131  0114                     	;# 
   132  0115                     	;# 
   133  0116                     	;# 
   134  0117                     	;# 
   135  0118                     	;# 
   136  0119                     	;# 
   137  011C                     	;# 
   138  018C                     	;# 
   139  018D                     	;# 
   140  018E                     	;# 
   141  0191                     	;# 
   142  0191                     	;# 
   143  0192                     	;# 
   144  0193                     	;# 
   145  0193                     	;# 
   146  0194                     	;# 
   147  0195                     	;# 
   148  0196                     	;# 
   149  0197                     	;# 
   150  0199                     	;# 
   151  0199                     	;# 
   152  0199                     	;# 
   153  019A                     	;# 
   154  019A                     	;# 
   155  019A                     	;# 
   156  019B                     	;# 
   157  019B                     	;# 
   158  019B                     	;# 
   159  019B                     	;# 
   160  019B                     	;# 
   161  019C                     	;# 
   162  019C                     	;# 
   163  019C                     	;# 
   164  019D                     	;# 
   165  019D                     	;# 
   166  019D                     	;# 
   167  019E                     	;# 
   168  019E                     	;# 
   169  019E                     	;# 
   170  019F                     	;# 
   171  019F                     	;# 
   172  019F                     	;# 
   173  019F                     	;# 
   174  019F                     	;# 
   175  020C                     	;# 
   176  020D                     	;# 
   177  020E                     	;# 
   178  0211                     	;# 
   179  0211                     	;# 
   180  0212                     	;# 
   181  0212                     	;# 
   182  0213                     	;# 
   183  0213                     	;# 
   184  0214                     	;# 
   185  0214                     	;# 
   186  0215                     	;# 
   187  0215                     	;# 
   188  0215                     	;# 
   189  0215                     	;# 
   190  0216                     	;# 
   191  0216                     	;# 
   192  0217                     	;# 
   193  0217                     	;# 
   194  028C                     	;# 
   195  028D                     	;# 
   196  028E                     	;# 
   197  0291                     	;# 
   198  0291                     	;# 
   199  0292                     	;# 
   200  0293                     	;# 
   201  0294                     	;# 
   202  0298                     	;# 
   203  0298                     	;# 
   204  0299                     	;# 
   205  029A                     	;# 
   206  029B                     	;# 
   207  029E                     	;# 
   208  030C                     	;# 
   209  030D                     	;# 
   210  030E                     	;# 
   211  038C                     	;# 
   212  038D                     	;# 
   213  038E                     	;# 
   214  0391                     	;# 
   215  0392                     	;# 
   216  0393                     	;# 
   217  0394                     	;# 
   218  0395                     	;# 
   219  0396                     	;# 
   220  0397                     	;# 
   221  0398                     	;# 
   222  0399                     	;# 
   223  040E                     	;# 
   224  0413                     	;# 
   225  0413                     	;# 
   226  0414                     	;# 
   227  0414                     	;# 
   228  0415                     	;# 
   229  0416                     	;# 
   230  0417                     	;# 
   231  0418                     	;# 
   232  041A                     	;# 
   233  041A                     	;# 
   234  041B                     	;# 
   235  041B                     	;# 
   236  041C                     	;# 
   237  041D                     	;# 
   238  041E                     	;# 
   239  041F                     	;# 
   240  0493                     	;# 
   241  0494                     	;# 
   242  0495                     	;# 
   243  0496                     	;# 
   244  049A                     	;# 
   245  049B                     	;# 
   246  049C                     	;# 
   247  049D                     	;# 
   248  058C                     	;# 
   249  058C                     	;# 
   250  058D                     	;# 
   251  058E                     	;# 
   252  058E                     	;# 
   253  058F                     	;# 
   254  0590                     	;# 
   255  0590                     	;# 
   256  0591                     	;# 
   257  0592                     	;# 
   258  0592                     	;# 
   259  0593                     	;# 
   260  0594                     	;# 
   261  0594                     	;# 
   262  0595                     	;# 
   263  0596                     	;# 
   264  0596                     	;# 
   265  0597                     	;# 
   266  0598                     	;# 
   267  0599                     	;# 
   268  059A                     	;# 
   269  059B                     	;# 
   270  059B                     	;# 
   271  059C                     	;# 
   272  059D                     	;# 
   273  060C                     	;# 
   274  060C                     	;# 
   275  060D                     	;# 
   276  060E                     	;# 
   277  060F                     	;# 
   278  060F                     	;# 
   279  0610                     	;# 
   280  0611                     	;# 
   281  0612                     	;# 
   282  0613                     	;# 
   283  0614                     	;# 
   284  0617                     	;# 
   285  0617                     	;# 
   286  0618                     	;# 
   287  0619                     	;# 
   288  061A                     	;# 
   289  061A                     	;# 
   290  061B                     	;# 
   291  061C                     	;# 
   292  0691                     	;# 
   293  0692                     	;# 
   294  0693                     	;# 
   295  0694                     	;# 
   296  0695                     	;# 
   297  0696                     	;# 
   298  0697                     	;# 
   299  0699                     	;# 
   300  069A                     	;# 
   301  0711                     	;# 
   302  0712                     	;# 
   303  0713                     	;# 
   304  0714                     	;# 
   305  0715                     	;# 
   306  0718                     	;# 
   307  0718                     	;# 
   308  0719                     	;# 
   309  071A                     	;# 
   310  071A                     	;# 
   311  071B                     	;# 
   312  071C                     	;# 
   313  071D                     	;# 
   314  0791                     	;# 
   315  0791                     	;# 
   316  0792                     	;# 
   317  0793                     	;# 
   318  0793                     	;# 
   319  0794                     	;# 
   320  0795                     	;# 
   321  0795                     	;# 
   322  0796                     	;# 
   323  0797                     	;# 
   324  0797                     	;# 
   325  0798                     	;# 
   326  0799                     	;# 
   327  079A                     	;# 
   328  080C                     	;# 
   329  080C                     	;# 
   330  080D                     	;# 
   331  080E                     	;# 
   332  080E                     	;# 
   333  080F                     	;# 
   334  0810                     	;# 
   335  0810                     	;# 
   336  0811                     	;# 
   337  0812                     	;# 
   338  0812                     	;# 
   339  0813                     	;# 
   340  0814                     	;# 
   341  0815                     	;# 
   342  0816                     	;# 
   343  0817                     	;# 
   344  0818                     	;# 
   345  0819                     	;# 
   346  081A                     	;# 
   347  081A                     	;# 
   348  081B                     	;# 
   349  081C                     	;# 
   350  081C                     	;# 
   351  081D                     	;# 
   352  088C                     	;# 
   353  088D                     	;# 
   354  088E                     	;# 
   355  088F                     	;# 
   356  088F                     	;# 
   357  0890                     	;# 
   358  0891                     	;# 
   359  0892                     	;# 
   360  0893                     	;# 
   361  0893                     	;# 
   362  0894                     	;# 
   363  0895                     	;# 
   364  0896                     	;# 
   365  0897                     	;# 
   366  0897                     	;# 
   367  0898                     	;# 
   368  0899                     	;# 
   369  0D8C                     	;# 
   370  0D8C                     	;# 
   371  0D8D                     	;# 
   372  0D8E                     	;# 
   373  0D8F                     	;# 
   374  0D8F                     	;# 
   375  0D90                     	;# 
   376  0D91                     	;# 
   377  0D92                     	;# 
   378  0D92                     	;# 
   379  0D93                     	;# 
   380  0D94                     	;# 
   381  0D95                     	;# 
   382  0D95                     	;# 
   383  0D96                     	;# 
   384  0D97                     	;# 
   385  0D98                     	;# 
   386  0D99                     	;# 
   387  0D9A                     	;# 
   388  0D9B                     	;# 
   389  0D9C                     	;# 
   390  0D9D                     	;# 
   391  0D9E                     	;# 
   392  0D9E                     	;# 
   393  0D9F                     	;# 
   394  0DA0                     	;# 
   395  0DA1                     	;# 
   396  0DA1                     	;# 
   397  0DA2                     	;# 
   398  0DA3                     	;# 
   399  0DA4                     	;# 
   400  0DA4                     	;# 
   401  0DA5                     	;# 
   402  0DA6                     	;# 
   403  0DA7                     	;# 
   404  0DA7                     	;# 
   405  0DA8                     	;# 
   406  0DA9                     	;# 
   407  0DAA                     	;# 
   408  0DAB                     	;# 
   409  0DAC                     	;# 
   410  0DAD                     	;# 
   411  0DAE                     	;# 
   412  0DAF                     	;# 
   413  0E0F                     	;# 
   414  0E10                     	;# 
   415  0E11                     	;# 
   416  0E12                     	;# 
   417  0E13                     	;# 
   418  0E14                     	;# 
   419  0E15                     	;# 
   420  0E16                     	;# 
   421  0E17                     	;# 
   422  0E18                     	;# 
   423  0E19                     	;# 
   424  0E1A                     	;# 
   425  0E1B                     	;# 
   426  0E1C                     	;# 
   427  0E1D                     	;# 
   428  0E1E                     	;# 
   429  0E1F                     	;# 
   430  0E20                     	;# 
   431  0E21                     	;# 
   432  0E22                     	;# 
   433  0E23                     	;# 
   434  0E24                     	;# 
   435  0E25                     	;# 
   436  0E26                     	;# 
   437  0E27                     	;# 
   438  0E28                     	;# 
   439  0E29                     	;# 
   440  0E2A                     	;# 
   441  0E2B                     	;# 
   442  0E2C                     	;# 
   443  0E2D                     	;# 
   444  0E2E                     	;# 
   445  0E90                     	;# 
   446  0E91                     	;# 
   447  0E92                     	;# 
   448  0E94                     	;# 
   449  0E95                     	;# 
   450  0E9C                     	;# 
   451  0E9D                     	;# 
   452  0E9E                     	;# 
   453  0E9F                     	;# 
   454  0EA0                     	;# 
   455  0EA1                     	;# 
   456  0EA2                     	;# 
   457  0EA3                     	;# 
   458  0EA4                     	;# 
   459  0EA5                     	;# 
   460  0EA6                     	;# 
   461  0EA7                     	;# 
   462  0F0F                     	;# 
   463  0F10                     	;# 
   464  0F11                     	;# 
   465  0F12                     	;# 
   466  0F13                     	;# 
   467  0F14                     	;# 
   468  0F15                     	;# 
   469  0F16                     	;# 
   470  0F17                     	;# 
   471  0F18                     	;# 
   472  0F19                     	;# 
   473  0F1A                     	;# 
   474  0F1B                     	;# 
   475  0F1C                     	;# 
   476  0F1D                     	;# 
   477  0F1E                     	;# 
   478  0F1F                     	;# 
   479  0F20                     	;# 
   480  0F21                     	;# 
   481  0F22                     	;# 
   482  0F23                     	;# 
   483  0F24                     	;# 
   484  0F25                     	;# 
   485  0F26                     	;# 
   486  0F27                     	;# 
   487  0F28                     	;# 
   488  0F29                     	;# 
   489  0F2A                     	;# 
   490  0F2B                     	;# 
   491  0F2C                     	;# 
   492  0F2D                     	;# 
   493  0F2E                     	;# 
   494  0F2F                     	;# 
   495  0F30                     	;# 
   496  0F31                     	;# 
   497  0F32                     	;# 
   498  0F33                     	;# 
   499  0F34                     	;# 
   500  0F35                     	;# 
   501  0F36                     	;# 
   502  0F37                     	;# 
   503  0FE4                     	;# 
   504  0FE5                     	;# 
   505  0FE6                     	;# 
   506  0FE7                     	;# 
   507  0FE8                     	;# 
   508  0FE9                     	;# 
   509  0FEA                     	;# 
   510  0FEB                     	;# 
   511  0FED                     	;# 
   512  0FEE                     	;# 
   513  0FEF                     	;# 
   514  0013                     _PIR4bits	set	19
   515  000B                     _INTCONbits	set	11
   516  0093                     _PIE4bits	set	147
   517  008E                     _TRISCbits	set	142
   518  008C                     _TRISAbits	set	140
   519  008D                     _TRISBbits	set	141
   520  010D                     _LATBbits	set	269
   521  019A                     _TX1REG	set	410
   522  018E                     _ANSELCbits	set	398
   523  018C                     _ANSELAbits	set	396
   524  019B                     _SPBRGL	set	411
   525  019C                     _SPBRGH	set	412
   526  019F                     _BAUD1CONbits	set	415
   527  019D                     _RC1STAbits	set	413
   528  019E                     _TX1STAbits	set	414
   529  0D9E                     _SMT2TMR	set	3486
   530  0D8F                     _SMT1CPR	set	3471
   531  0D95                     _SMT1PR	set	3477
   532  0DAA                     _SMT2CON0bits	set	3498
   533  0DAB                     _SMT2CON1bits	set	3499
   534  0D99                     _SMT1CON1bits	set	3481
   535  0D98                     _SMT1CON0bits	set	3480
   536  0E26                     _SMT1SIGPPS	set	3622
   537  0E9E                     _RB6PPS	set	3742
   538  0EA7                     _RC7PPS	set	3751
   539  0F10                     _CLC1CONbits	set	3856
   540  0F15                     _CLC1SEL3	set	3861
   541  0F14                     _CLC1SEL2	set	3860
   542  0F13                     _CLC1SEL1	set	3859
   543  0F12                     _CLC1SEL0	set	3858
   544  0F11                     _CLC1POL	set	3857
   545  0F19                     _CLC1GLS3	set	3865
   546  0F18                     _CLC1GLS2	set	3864
   547  0F17                     _CLC1GLS1	set	3863
   548  0F16                     _CLC1GLS0	set	3862
   549  0F10                     _CLC1CON	set	3856
   550                           
   551                           	psect	stringtext1
   552  06E1                     __pstringtext1:
   553  06E1                     STR_1:
   554  06E1  3425               	retlw	37	;'%'
   555  06E2  346C               	retlw	108	;'l'
   556  06E3  3464               	retlw	100	;'d'
   557  06E4  340A               	retlw	10
   558  06E5  3400               	retlw	0
   559                           
   560                           	psect	stringtext2
   561  06E6                     __pstringtext2:
   562  06E6                     STR_2:
   563  06E6  346C               	retlw	108	;'l'
   564  06E7  3464               	retlw	100	;'d'
   565  06E8  3400               	retlw	0
   566                           
   567                           	psect	stringtext3
   568  06E9                     __pstringtext3:
   569  06E9                     STR_6:
   570  06E9  346C               	retlw	108	;'l'
   571  06EA  3469               	retlw	105	;'i'
   572  06EB  3400               	retlw	0
   573                           
   574                           	psect	stringtext4
   575  0000                     __pstringtext4:
   576  06E6                     
   577                           	psect	cinit
   578  002D                     start_initialization:	
   579                           ; #config settings
   580                           
   581  002D                     __initialization:
   582                           
   583                           ; Clear objects allocated to BANK0
   584  002D  0020               	movlb	0	; select bank0
   585  002E  01ED               	clrf	__pbssBANK0& (0+127)
   586  002F  01EE               	clrf	(__pbssBANK0+1)& (0+127)
   587  0030  01EF               	clrf	(__pbssBANK0+2)& (0+127)
   588                           
   589                           ; Clear objects allocated to BANK1
   590  0031  30A0               	movlw	low __pbssBANK1
   591  0032  0084               	movwf	4
   592  0033  3000               	movlw	high __pbssBANK1
   593  0034  0085               	movwf	5
   594  0035  302A               	movlw	42
   595  0036  3186  26DB         	fcall	clear_ram0
   596  0038                     end_of_initialization:	
   597                           ;End of C runtime variable initialization code
   598                           
   599  0038                     __end_of__initialization:
   600  0038  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   601  0039  0020               	movlb	0
   602  003A  3184  2C8D         	ljmp	_main	;jump to C main() function
   603                           
   604                           	psect	bssBANK0
   605  006D                     __pbssBANK0:
   606  006D                     _flags:
   607  006D                     	ds	2
   608  006F                     _dataAvailable:
   609  006F                     	ds	1
   610                           
   611                           	psect	bssBANK1
   612  00A0                     __pbssBANK1:
   613  00A0                     _smt2Value:
   614  00A0                     	ds	4
   615  00A4                     _nout:
   616  00A4                     	ds	2
   617  00A6                     _width:
   618  00A6                     	ds	2
   619  00A8                     _prec:
   620  00A8                     	ds	2
   621  00AA                     _dbuf:
   622  00AA                     	ds	32
   623                           
   624                           	psect	clrtext
   625  06DB                     clear_ram0:	
   626                           ;	Called with FSR0 containing the base address, and
   627                           ;	WREG with the size to clear
   628                           
   629  06DB  0064               	clrwdt	;clear the watchdog before getting into this loop
   630  06DC                     clrloop0:
   631  06DC  0180               	clrf	0	;clear RAM location pointed to by FSR
   632  06DD  3101               	addfsr 0,1
   633  06DE  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   634  06DF  2EDC               	goto	clrloop0	;have we reached the end yet?
   635  06E0  3400               	retlw	0	;all done for this memory range, return
   636                           
   637                           	psect	cstackBANK1
   638  00CA                     __pcstackBANK1:
   639  00CA                     ??_main:
   640                           
   641                           ; 1 bytes @ 0x0
   642  00CA                     	ds	4
   643                           
   644                           	psect	cstackCOMMON
   645  0070                     __pcstackCOMMON:
   646  0070                     ?_smt_init:
   647  0070                     ?_uart_init:	
   648                           ; 1 bytes @ 0x0
   649                           
   650  0070                     ?_main:	
   651                           ; 1 bytes @ 0x0
   652                           
   653  0070                     ?_myIsr:	
   654                           ; 1 bytes @ 0x0
   655                           
   656  0070                     ??_myIsr:	
   657                           ; 1 bytes @ 0x0
   658                           
   659  0070                     ?_putch:	
   660                           ; 1 bytes @ 0x0
   661                           
   662                           
   663                           ; 1 bytes @ 0x0
   664  0070                     	ds	1
   665  0071                     ??_smt_init:
   666  0071                     ??_uart_init:	
   667                           ; 1 bytes @ 0x1
   668                           
   669  0071                     ??_putch:	
   670                           ; 1 bytes @ 0x1
   671                           
   672  0071                     ??___aodiv:	
   673                           ; 1 bytes @ 0x1
   674                           
   675  0071                     ??___aomod:	
   676                           ; 1 bytes @ 0x1
   677                           
   678  0071                     ?_strlen:	
   679                           ; 1 bytes @ 0x1
   680                           
   681  0071                     ?_strncmp:	
   682                           ; 2 bytes @ 0x1
   683                           
   684  0071                     ?___ltdiv:	
   685                           ; 2 bytes @ 0x1
   686                           
   687  0071                     putch@c:	
   688                           ; 3 bytes @ 0x1
   689                           
   690  0071                     strncmp@_l:	
   691                           ; 1 bytes @ 0x1
   692                           
   693  0071                     ___ltdiv@divisor:	
   694                           ; 2 bytes @ 0x1
   695                           
   696                           
   697                           ; 3 bytes @ 0x1
   698  0071                     	ds	1
   699  0072                     ?_fputc:
   700  0072                     ___aodiv@counter:	
   701                           ; 2 bytes @ 0x2
   702                           
   703  0072                     ___aomod@counter:	
   704                           ; 1 bytes @ 0x2
   705                           
   706  0072                     fputc@c:	
   707                           ; 1 bytes @ 0x2
   708                           
   709                           
   710                           ; 2 bytes @ 0x2
   711  0072                     	ds	1
   712  0073                     ??_strlen:
   713  0073                     ___aodiv@sign:	
   714                           ; 1 bytes @ 0x3
   715                           
   716  0073                     ___aomod@sign:	
   717                           ; 1 bytes @ 0x3
   718                           
   719  0073                     strncmp@_r:	
   720                           ; 1 bytes @ 0x3
   721                           
   722                           
   723                           ; 2 bytes @ 0x3
   724  0073                     	ds	1
   725  0074                     ?_abs:
   726  0074                     fputc@fp:	
   727                           ; 2 bytes @ 0x4
   728                           
   729  0074                     strlen@a:	
   730                           ; 1 bytes @ 0x4
   731                           
   732  0074                     abs@a:	
   733                           ; 1 bytes @ 0x4
   734                           
   735  0074                     ___ltdiv@dividend:	
   736                           ; 2 bytes @ 0x4
   737                           
   738  0074                     ___aodiv@quotient:	
   739                           ; 3 bytes @ 0x4
   740                           
   741                           
   742                           ; 8 bytes @ 0x4
   743  0074                     	ds	1
   744  0075                     ??_fputc:
   745  0075                     strlen@s:	
   746                           ; 1 bytes @ 0x5
   747                           
   748  0075                     strncmp@n:	
   749                           ; 1 bytes @ 0x5
   750                           
   751                           
   752                           ; 2 bytes @ 0x5
   753  0075                     	ds	1
   754  0076                     ??_abs:
   755                           
   756                           ; 1 bytes @ 0x6
   757  0076                     	ds	1
   758  0077                     ??_strncmp:
   759  0077                     ??___ltdiv:	
   760                           ; 1 bytes @ 0x7
   761                           
   762                           
   763                           ; 1 bytes @ 0x7
   764  0077                     	ds	1
   765  0078                     strncmp@l:
   766  0078                     ___ltdiv@quotient:	
   767                           ; 2 bytes @ 0x8
   768                           
   769                           
   770                           ; 3 bytes @ 0x8
   771  0078                     	ds	2
   772  007A                     ?_fputs:
   773  007A                     fputs@fp:	
   774                           ; 2 bytes @ 0xA
   775                           
   776  007A                     strncmp@r:	
   777                           ; 1 bytes @ 0xA
   778                           
   779                           
   780                           ; 2 bytes @ 0xA
   781  007A                     	ds	1
   782  007B                     ??_pad:
   783  007B                     ___ltdiv@counter:	
   784                           ; 1 bytes @ 0xB
   785                           
   786                           
   787                           ; 1 bytes @ 0xB
   788  007B                     	ds	1
   789  007C                     ??_printf:
   790                           
   791                           ; 1 bytes @ 0xC
   792  007C                     	ds	1
   793                           
   794                           	psect	cstackBANK0
   795  0020                     __pcstackBANK0:
   796  0020                     ??_fputs:
   797  0020                     ?___aodiv:	
   798                           ; 1 bytes @ 0x0
   799                           
   800  0020                     ?___aomod:	
   801                           ; 8 bytes @ 0x0
   802                           
   803  0020                     ___aodiv@divisor:	
   804                           ; 8 bytes @ 0x0
   805                           
   806  0020                     ___aomod@divisor:	
   807                           ; 8 bytes @ 0x0
   808                           
   809                           
   810                           ; 8 bytes @ 0x0
   811  0020                     	ds	3
   812  0023                     fputs@c:
   813                           
   814                           ; 1 bytes @ 0x3
   815  0023                     	ds	1
   816  0024                     fputs@i:
   817                           
   818                           ; 2 bytes @ 0x4
   819  0024                     	ds	2
   820  0026                     fputs@s:
   821                           
   822                           ; 1 bytes @ 0x6
   823  0026                     	ds	1
   824  0027                     ?_pad:
   825  0027                     pad@buf:	
   826                           ; 2 bytes @ 0x7
   827                           
   828                           
   829                           ; 1 bytes @ 0x7
   830  0027                     	ds	1
   831  0028                     pad@p:
   832  0028                     ___aodiv@dividend:	
   833                           ; 2 bytes @ 0x8
   834                           
   835  0028                     ___aomod@dividend:	
   836                           ; 8 bytes @ 0x8
   837                           
   838                           
   839                           ; 8 bytes @ 0x8
   840  0028                     	ds	2
   841  002A                     pad@i:
   842                           
   843                           ; 2 bytes @ 0xA
   844  002A                     	ds	2
   845  002C                     pad@w:
   846                           
   847                           ; 2 bytes @ 0xC
   848  002C                     	ds	2
   849  002E                     pad@fp:
   850                           
   851                           ; 1 bytes @ 0xE
   852  002E                     	ds	2
   853  0030                     ?_dtoa:
   854  0030                     dtoa@d:	
   855                           ; 2 bytes @ 0x10
   856                           
   857                           
   858                           ; 8 bytes @ 0x10
   859  0030                     	ds	8
   860  0038                     ??_dtoa:
   861                           
   862                           ; 1 bytes @ 0x18
   863  0038                     	ds	3
   864  003B                     _dtoa$1003:
   865                           
   866                           ; 2 bytes @ 0x1B
   867  003B                     	ds	2
   868  003D                     dtoa@p:
   869                           
   870                           ; 2 bytes @ 0x1D
   871  003D                     	ds	2
   872  003F                     dtoa@fp:
   873                           
   874                           ; 1 bytes @ 0x1F
   875  003F                     	ds	1
   876  0040                     dtoa@w:
   877                           
   878                           ; 2 bytes @ 0x20
   879  0040                     	ds	2
   880  0042                     dtoa@s:
   881                           
   882                           ; 2 bytes @ 0x22
   883  0042                     	ds	2
   884  0044                     dtoa@n:
   885                           
   886                           ; 8 bytes @ 0x24
   887  0044                     	ds	8
   888  004C                     dtoa@i:
   889                           
   890                           ; 2 bytes @ 0x2C
   891  004C                     	ds	2
   892  004E                     ?_vfpfcnvrt:
   893  004E                     vfpfcnvrt@fmt:	
   894                           ; 2 bytes @ 0x2E
   895                           
   896                           
   897                           ; 1 bytes @ 0x2E
   898  004E                     	ds	1
   899  004F                     vfpfcnvrt@ap:
   900                           
   901                           ; 1 bytes @ 0x2F
   902  004F                     	ds	1
   903  0050                     ??_vfpfcnvrt:
   904                           
   905                           ; 1 bytes @ 0x30
   906  0050                     	ds	5
   907  0055                     vfpfcnvrt@ll:
   908                           
   909                           ; 8 bytes @ 0x35
   910  0055                     	ds	8
   911  005D                     vfpfcnvrt@fp:
   912                           
   913                           ; 1 bytes @ 0x3D
   914  005D                     	ds	1
   915  005E                     ?_vfprintf:
   916  005E                     vfprintf@fmt:	
   917                           ; 2 bytes @ 0x3E
   918                           
   919                           
   920                           ; 2 bytes @ 0x3E
   921  005E                     	ds	2
   922  0060                     vfprintf@ap:
   923                           
   924                           ; 1 bytes @ 0x40
   925  0060                     	ds	1
   926  0061                     ??_vfprintf:
   927                           
   928                           ; 1 bytes @ 0x41
   929  0061                     	ds	2
   930  0063                     vfprintf@fp:
   931                           
   932                           ; 1 bytes @ 0x43
   933  0063                     	ds	1
   934  0064                     vfprintf@cfmt:
   935                           
   936                           ; 2 bytes @ 0x44
   937  0064                     	ds	2
   938  0066                     ?_printf:
   939  0066                     printf@fmt:	
   940                           ; 2 bytes @ 0x46
   941                           
   942                           
   943                           ; 2 bytes @ 0x46
   944  0066                     	ds	6
   945  006C                     printf@ap:
   946                           
   947                           ; 1 bytes @ 0x4C
   948  006C                     	ds	1
   949                           
   950                           	psect	maintext
   951  048D                     __pmaintext:	
   952 ;;
   953 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   954 ;;
   955 ;; *************** function _main *****************
   956 ;; Defined at:
   957 ;;		line 76 in file "smt_main.c"
   958 ;; Parameters:    Size  Location     Type
   959 ;;		None
   960 ;; Auto vars:     Size  Location     Type
   961 ;;		None
   962 ;; Return value:  Size  Location     Type
   963 ;;                  1    wreg      void 
   964 ;; Registers used:
   965 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   966 ;; Tracked objects:
   967 ;;		On entry : B1F/0
   968 ;;		On exit  : 1F/0
   969 ;;		Unchanged: 0/0
   970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   973 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
   974 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
   975 ;;Total ram usage:        4 bytes
   976 ;; Hardware stack levels required when called: 9
   977 ;; This function calls:
   978 ;;		___ltdiv
   979 ;;		_printf
   980 ;;		_smt_init
   981 ;;		_uart_init
   982 ;; This function is called by:
   983 ;;		Startup code after reset
   984 ;; This function uses a non-reentrant model
   985 ;;
   986                           
   987                           
   988                           ;psect for function _main
   989  048D                     _main:
   990                           
   991                           ;smt_main.c: 77:     TRISBbits.TRISB7 = 0;
   992                           
   993                           ;incstack = 0
   994                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   995  048D  0021               	movlb	1	; select bank1
   996  048E  138D               	bcf	13,7	;volatile
   997                           
   998                           ;smt_main.c: 78:     TRISAbits.TRISA4 = 1;
   999  048F  160C               	bsf	12,4	;volatile
  1000                           
  1001                           ;smt_main.c: 79:     ANSELAbits.ANSA4 =0;
  1002  0490  0023               	movlb	3	; select bank3
  1003  0491  120C               	bcf	12,4	;volatile
  1004                           
  1005                           ;smt_main.c: 80:     TRISBbits.TRISB6 = 0;
  1006  0492  0021               	movlb	1	; select bank1
  1007  0493  130D               	bcf	13,6	;volatile
  1008                           
  1009                           ;smt_main.c: 81:     TRISCbits.TRISC7 = 1;
  1010  0494  178E               	bsf	14,7	;volatile
  1011                           
  1012                           ;smt_main.c: 82:     TRISCbits.TRISC6 = 1;
  1013  0495  170E               	bsf	14,6	;volatile
  1014                           
  1015                           ;smt_main.c: 83:     ANSELCbits.ANSC6 = 0;
  1016  0496  0023               	movlb	3	; select bank3
  1017  0497  130E               	bcf	14,6	;volatile
  1018                           
  1019                           ;smt_main.c: 86:     INTCONbits.GIE = 1;
  1020  0498  178B               	bsf	11,7	;volatile
  1021                           
  1022                           ;smt_main.c: 87:     INTCONbits.PEIE = 1;
  1023  0499  170B               	bsf	11,6	;volatile
  1024                           
  1025                           ;smt_main.c: 88:     PIE4bits.SMT1PRAIE = 1;
  1026  049A  0021               	movlb	1	; select bank1
  1027  049B  1493               	bsf	19,1	;volatile
  1028                           
  1029                           ;smt_main.c: 89:     PIE4bits.SMT2IE = 1;
  1030  049C  1593               	bsf	19,3	;volatile
  1031                           
  1032                           ;smt_main.c: 92:     smt_init();
  1033  049D  3186  266C  3184   	fcall	_smt_init
  1034                           
  1035                           ;smt_main.c: 93:     uart_init();
  1036  04A0  3186  26C8  3184   	fcall	_uart_init
  1037                           
  1038                           ;smt_main.c: 94:     CLC1CON = 0x86;
  1039  04A3  3086               	movlw	134
  1040  04A4  003E               	movlb	30	; select bank30
  1041  04A5  0090               	movwf	16	;volatile
  1042                           
  1043                           ;smt_main.c: 95:     CLC1GLS0 = 0x02;
  1044  04A6  3002               	movlw	2
  1045  04A7  0096               	movwf	22	;volatile
  1046                           
  1047                           ;smt_main.c: 96:     CLC1GLS1 = 0;
  1048  04A8  0197               	clrf	23	;volatile
  1049                           
  1050                           ;smt_main.c: 97:     CLC1GLS2 = 0;
  1051  04A9  0198               	clrf	24	;volatile
  1052                           
  1053                           ;smt_main.c: 98:     CLC1GLS3 = 0;
  1054  04AA  0199               	clrf	25	;volatile
  1055                           
  1056                           ;smt_main.c: 99:     CLC1POL = 0xA;
  1057  04AB  300A               	movlw	10
  1058  04AC  0091               	movwf	17	;volatile
  1059                           
  1060                           ;smt_main.c: 100:     CLC1SEL0 = 0x14;
  1061  04AD  3014               	movlw	20
  1062  04AE  0092               	movwf	18	;volatile
  1063                           
  1064                           ;smt_main.c: 101:     CLC1SEL1 = 0;
  1065  04AF  0193               	clrf	19	;volatile
  1066                           
  1067                           ;smt_main.c: 102:     CLC1SEL2 = 0;
  1068  04B0  0194               	clrf	20	;volatile
  1069                           
  1070                           ;smt_main.c: 103:     CLC1SEL3 = 0;
  1071  04B1  0195               	clrf	21	;volatile
  1072                           
  1073                           ;smt_main.c: 104:     RB6PPS = 0b00100;
  1074  04B2  3004               	movlw	4
  1075  04B3  003D               	movlb	29	; select bank29
  1076  04B4  009E               	movwf	30	;volatile
  1077                           
  1078                           ;smt_main.c: 105:     CLC1CONbits.EN = 1;
  1079  04B5  003E               	movlb	30	; select bank30
  1080  04B6  1790               	bsf	16,7	;volatile
  1081  04B7                     l1502:
  1082                           
  1083                           ;smt_main.c: 107:     {;smt_main.c: 108:         if(dataAvailable)
  1084  04B7  0020               	movlb	0	; select bank0
  1085  04B8  086F               	movf	_dataAvailable,w	;volatile
  1086  04B9  1903               	btfsc	3,2
  1087  04BA  2CB7               	goto	l1502
  1088                           
  1089                           ;smt_main.c: 109:         {;smt_main.c: 110:             (INTCONbits.GIE = 0);
  1090  04BB  138B               	bcf	11,7	;volatile
  1091                           
  1092                           ;smt_main.c: 111:             smt2Value = ((SMT1CPR&0xffffff)/10);
  1093  04BC  300A               	movlw	10
  1094  04BD  00F1               	movwf	___ltdiv@divisor
  1095  04BE  3000               	movlw	0
  1096  04BF  00F2               	movwf	___ltdiv@divisor+1
  1097  04C0  3000               	movlw	0
  1098  04C1  00F3               	movwf	___ltdiv@divisor+2
  1099  04C2  003B               	movlb	27	; select bank27
  1100  04C3  080F               	movf	15,w	;volatile
  1101  04C4  00F4               	movwf	___ltdiv@dividend
  1102  04C5  0810               	movf	16,w	;volatile
  1103  04C6  00F5               	movwf	___ltdiv@dividend+1
  1104  04C7  0811               	movf	17,w	;volatile
  1105  04C8  00F6               	movwf	___ltdiv@dividend+2
  1106  04C9  3185  25A2  3184   	fcall	___ltdiv
  1107  04CC  0871               	movf	?___ltdiv,w
  1108  04CD  0021               	movlb	1	; select bank1
  1109  04CE  00A0               	movwf	_smt2Value^(0+128)	;volatile
  1110  04CF  0872               	movf	?___ltdiv+1,w
  1111  04D0  00A1               	movwf	(_smt2Value^(0+128)+1)	;volatile
  1112  04D1  0873               	movf	?___ltdiv+2,w
  1113  04D2  00A2               	movwf	(_smt2Value^(0+128)+2)	;volatile
  1114  04D3  01A3               	clrf	(_smt2Value^(0+128)+3)	;volatile
  1115                           
  1116                           ;smt_main.c: 113:             smt2Value = 0xffffff-smt2Value+37;
  1117  04D4  3024               	movlw	36
  1118  04D5  00CA               	movwf	??_main^(0+128)
  1119  04D6  3000               	movlw	0
  1120  04D7  00CB               	movwf	(??_main^(0+128)+1)
  1121  04D8  3000               	movlw	0
  1122  04D9  00CC               	movwf	(??_main^(0+128)+2)
  1123  04DA  3001               	movlw	1
  1124  04DB  00CD               	movwf	(??_main^(0+128)+3)
  1125  04DC  0820               	movf	_smt2Value^(0+128),w	;volatile
  1126  04DD  02CA               	subwf	??_main^(0+128),f
  1127  04DE  0821               	movf	(_smt2Value+1)^(0+128),w	;volatile
  1128  04DF  3BCB               	subwfb	(??_main^(0+128)+1),f
  1129  04E0  0822               	movf	(_smt2Value+2)^(0+128),w	;volatile
  1130  04E1  3BCC               	subwfb	(??_main^(0+128)+2),f
  1131  04E2  0823               	movf	(_smt2Value+3)^(0+128),w	;volatile
  1132  04E3  3BCD               	subwfb	(??_main^(0+128)+3),f
  1133  04E4  084D               	movf	(??_main+3)^(0+128),w
  1134  04E5  00A3               	movwf	(_smt2Value+3)^(0+128)	;volatile
  1135  04E6  084C               	movf	(??_main+2)^(0+128),w
  1136  04E7  00A2               	movwf	(_smt2Value+2)^(0+128)	;volatile
  1137  04E8  084B               	movf	(??_main+1)^(0+128),w
  1138  04E9  00A1               	movwf	(_smt2Value+1)^(0+128)	;volatile
  1139  04EA  084A               	movf	??_main^(0+128),w
  1140  04EB  00A0               	movwf	_smt2Value^(0+128)	;volatile
  1141                           
  1142                           ;smt_main.c: 114:             (INTCONbits.GIE = 1);
  1143  04EC  178B               	bsf	11,7	;volatile
  1144                           
  1145                           ;smt_main.c: 115:              printf("%ld\n",smt2Value);
  1146  04ED  30E1               	movlw	low (STR_1| (0+32768))
  1147  04EE  0020               	movlb	0	; select bank0
  1148  04EF  00E6               	movwf	printf@fmt
  1149  04F0  3086               	movlw	high (STR_1| (0+32768))
  1150  04F1  00E7               	movwf	printf@fmt+1
  1151  04F2  0021               	movlb	1	; select bank1
  1152  04F3  0823               	movf	(_smt2Value+3)^(0+128),w	;volatile
  1153  04F4  0020               	movlb	0	; select bank0
  1154  04F5  00EB               	movwf	?_printf+5
  1155  04F6  0021               	movlb	1	; select bank1
  1156  04F7  0822               	movf	(_smt2Value+2)^(0+128),w	;volatile
  1157  04F8  0020               	movlb	0	; select bank0
  1158  04F9  00EA               	movwf	?_printf+4
  1159  04FA  0021               	movlb	1	; select bank1
  1160  04FB  0821               	movf	(_smt2Value+1)^(0+128),w	;volatile
  1161  04FC  0020               	movlb	0	; select bank0
  1162  04FD  00E9               	movwf	?_printf+3
  1163  04FE  0021               	movlb	1	; select bank1
  1164  04FF  0820               	movf	_smt2Value^(0+128),w	;volatile
  1165  0500  0020               	movlb	0	; select bank0
  1166  0501  00E8               	movwf	?_printf+2
  1167  0502  3186  26B8  3184   	fcall	_printf
  1168                           
  1169                           ;smt_main.c: 116:             dataAvailable = 0;
  1170  0505  01EF               	clrf	_dataAvailable	;volatile
  1171  0506  2CB7               	goto	l1502
  1172  0507                     __end_of_main:
  1173                           
  1174                           	psect	text1
  1175  06C8                     __ptext1:	
  1176 ;; *************** function _uart_init *****************
  1177 ;; Defined at:
  1178 ;;		line 60 in file "smt_main.c"
  1179 ;; Parameters:    Size  Location     Type
  1180 ;;		None
  1181 ;; Auto vars:     Size  Location     Type
  1182 ;;		None
  1183 ;; Return value:  Size  Location     Type
  1184 ;;                  1    wreg      void 
  1185 ;; Registers used:
  1186 ;;		wreg, status,2
  1187 ;; Tracked objects:
  1188 ;;		On entry : B1F/1B
  1189 ;;		On exit  : B1F/1D
  1190 ;;		Unchanged: B00/0
  1191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1195 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1196 ;;Total ram usage:        0 bytes
  1197 ;; Hardware stack levels used: 1
  1198 ;; Hardware stack levels required when called: 1
  1199 ;; This function calls:
  1200 ;;		Nothing
  1201 ;; This function is called by:
  1202 ;;		_main
  1203 ;; This function uses a non-reentrant model
  1204 ;;
  1205                           
  1206                           
  1207                           ;psect for function _uart_init
  1208  06C8                     _uart_init:
  1209                           
  1210                           ;smt_main.c: 62:     TX1STAbits.TXEN = 1;
  1211                           
  1212                           ;incstack = 0
  1213                           ; Regs used in _uart_init: [wreg+status,2]
  1214  06C8  0023               	movlb	3	; select bank3
  1215  06C9  169E               	bsf	30,5	;volatile
  1216                           
  1217                           ;smt_main.c: 63:     TX1STAbits.BRGH = 1;
  1218  06CA  151E               	bsf	30,2	;volatile
  1219                           
  1220                           ;smt_main.c: 64:     RC1STAbits.SPEN = 1;
  1221  06CB  179D               	bsf	29,7	;volatile
  1222                           
  1223                           ;smt_main.c: 65:     BAUD1CONbits.BRG16 = 1;
  1224  06CC  159F               	bsf	31,3	;volatile
  1225                           
  1226                           ;smt_main.c: 66:     SPBRGH = 0;
  1227  06CD  019C               	clrf	28	;volatile
  1228                           
  1229                           ;smt_main.c: 67:     SPBRGL = 70;
  1230  06CE  3046               	movlw	70
  1231  06CF  009B               	movwf	27	;volatile
  1232                           
  1233                           ;smt_main.c: 68:     RC7PPS = 0b10010;
  1234  06D0  3012               	movlw	18
  1235  06D1  003D               	movlb	29	; select bank29
  1236  06D2  00A7               	movwf	39	;volatile
  1237  06D3  0008               	return
  1238  06D4                     __end_of_uart_init:
  1239                           
  1240                           	psect	text2
  1241  066C                     __ptext2:	
  1242 ;; *************** function _smt_init *****************
  1243 ;; Defined at:
  1244 ;;		line 43 in file "smt_main.c"
  1245 ;; Parameters:    Size  Location     Type
  1246 ;;		None
  1247 ;; Auto vars:     Size  Location     Type
  1248 ;;		None
  1249 ;; Return value:  Size  Location     Type
  1250 ;;                  1    wreg      void 
  1251 ;; Registers used:
  1252 ;;		wreg, status,2, status,0
  1253 ;; Tracked objects:
  1254 ;;		On entry : B1F/1
  1255 ;;		On exit  : B1F/1B
  1256 ;;		Unchanged: B00/0
  1257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1261 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1262 ;;Total ram usage:        0 bytes
  1263 ;; Hardware stack levels used: 1
  1264 ;; Hardware stack levels required when called: 1
  1265 ;; This function calls:
  1266 ;;		Nothing
  1267 ;; This function is called by:
  1268 ;;		_main
  1269 ;; This function uses a non-reentrant model
  1270 ;;
  1271                           
  1272                           
  1273                           ;psect for function _smt_init
  1274  066C                     _smt_init:
  1275                           
  1276                           ;smt_main.c: 45:     SMT1CON0bits.EN = 1;
  1277                           
  1278                           ;incstack = 0
  1279                           ; Regs used in _smt_init: [wreg+status,2+status,0]
  1280  066C  003B               	movlb	27	; select bank27
  1281  066D  1798               	bsf	24,7	;volatile
  1282                           
  1283                           ;smt_main.c: 46:     SMT1CON1bits.MODE = 0b0010;
  1284  066E  0819               	movf	25,w	;volatile
  1285  066F  39F0               	andlw	-16
  1286  0670  3802               	iorlw	2
  1287  0671  0099               	movwf	25	;volatile
  1288                           
  1289                           ;smt_main.c: 47:     SMT1CON1bits.REPEAT =1;
  1290  0672  1719               	bsf	25,6	;volatile
  1291                           
  1292                           ;smt_main.c: 48:     SMT1CON0bits.SMT1PS = 3;
  1293  0673  3003               	movlw	3
  1294  0674  0498               	iorwf	24,f	;volatile
  1295                           
  1296                           ;smt_main.c: 49:     SMT1PR = 0xffffff;
  1297  0675  30FF               	movlw	255
  1298  0676  0095               	movwf	21	;volatile
  1299  0677  30FF               	movlw	255
  1300  0678  0096               	movwf	22	;volatile
  1301  0679  30FF               	movlw	255
  1302  067A  0097               	movwf	23	;volatile
  1303                           
  1304                           ;smt_main.c: 50:     SMT1CON1bits.SMT1GO = 1;
  1305  067B  1799               	bsf	25,7	;volatile
  1306                           
  1307                           ;smt_main.c: 51:     SMT1SIGPPS = 0b00010110;
  1308  067C  3016               	movlw	22
  1309  067D  003C               	movlb	28	; select bank28
  1310  067E  00A6               	movwf	38	;volatile
  1311                           
  1312                           ;smt_main.c: 53:     SMT2CON1bits.MODE = 0;
  1313  067F  30F0               	movlw	-16
  1314  0680  003B               	movlb	27	; select bank27
  1315  0681  05AB               	andwf	43,f	;volatile
  1316                           
  1317                           ;smt_main.c: 54:     SMT2CON1bits.REPEAT =1;
  1318  0682  172B               	bsf	43,6	;volatile
  1319                           
  1320                           ;smt_main.c: 55:     SMT2CON0bits.SMT2PS = 1;
  1321  0683  082A               	movf	42,w	;volatile
  1322  0684  39FC               	andlw	-4
  1323  0685  3801               	iorlw	1
  1324  0686  00AA               	movwf	42	;volatile
  1325                           
  1326                           ;smt_main.c: 56:     SMT2CON0bits.EN = 1;
  1327  0687  17AA               	bsf	42,7	;volatile
  1328                           
  1329                           ;smt_main.c: 57:     SMT2CON1bits.SMT2GO = 1;
  1330  0688  17AB               	bsf	43,7	;volatile
  1331  0689  0008               	return
  1332  068A                     __end_of_smt_init:
  1333                           
  1334                           	psect	text3
  1335  06B8                     __ptext3:	
  1336 ;; *************** function _printf *****************
  1337 ;; Defined at:
  1338 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\printf.c"
  1339 ;; Parameters:    Size  Location     Type
  1340 ;;  fmt             2   70[BANK0 ] PTR const unsigned char 
  1341 ;;		 -> STR_1(5), 
  1342 ;; Auto vars:     Size  Location     Type
  1343 ;;  ret             2    0        int 
  1344 ;;  ap              1   76[BANK0 ] PTR void [1]
  1345 ;;		 -> ?_printf(2), 
  1346 ;; Return value:  Size  Location     Type
  1347 ;;                  2   70[BANK0 ] int 
  1348 ;; Registers used:
  1349 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1350 ;; Tracked objects:
  1351 ;;		On entry : 1F/0
  1352 ;;		On exit  : 1F/0
  1353 ;;		Unchanged: 0/0
  1354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1355 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1356 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1357 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1358 ;;      Totals:         1       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1359 ;;Total ram usage:        8 bytes
  1360 ;; Hardware stack levels used: 1
  1361 ;; Hardware stack levels required when called: 8
  1362 ;; This function calls:
  1363 ;;		_vfprintf
  1364 ;; This function is called by:
  1365 ;;		_main
  1366 ;; This function uses a non-reentrant model
  1367 ;;
  1368                           
  1369                           
  1370                           ;psect for function _printf
  1371  06B8                     _printf:
  1372                           
  1373                           ;incstack = 0
  1374                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1375  06B8  3068               	movlw	(low ((?_printf| 0+2)))& (0+255)
  1376  06B9  00FC               	movwf	??_printf
  1377  06BA  087C               	movf	??_printf,w
  1378  06BB  00EC               	movwf	printf@ap
  1379  06BC  0867               	movf	printf@fmt+1,w
  1380  06BD  00DF               	movwf	vfprintf@fmt+1
  1381  06BE  0866               	movf	printf@fmt,w
  1382  06BF  00DE               	movwf	vfprintf@fmt
  1383  06C0  306C               	movlw	(low (printf@ap| 0))& (0+255)
  1384  06C1  00FC               	movwf	??_printf
  1385  06C2  087C               	movf	??_printf,w
  1386  06C3  00E0               	movwf	vfprintf@ap
  1387  06C4  3000               	movlw	0
  1388  06C5  3186  261B         	fcall	_vfprintf
  1389  06C7  0008               	return
  1390  06C8                     __end_of_printf:
  1391                           
  1392                           	psect	text4
  1393  061B                     __ptext4:	
  1394 ;; *************** function _vfprintf *****************
  1395 ;; Defined at:
  1396 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1397 ;; Parameters:    Size  Location     Type
  1398 ;;  fp              1    wreg     PTR struct _IO_FILE
  1399 ;;		 -> NULL(0), 
  1400 ;;  fmt             2   62[BANK0 ] PTR const unsigned char 
  1401 ;;		 -> STR_1(5), 
  1402 ;;  ap              1   64[BANK0 ] PTR PTR void 
  1403 ;;		 -> printf@ap(1), 
  1404 ;; Auto vars:     Size  Location     Type
  1405 ;;  fp              1   67[BANK0 ] PTR struct _IO_FILE
  1406 ;;		 -> NULL(0), 
  1407 ;;  cfmt            2   68[BANK0 ] PTR unsigned char 
  1408 ;;		 -> STR_1(5), 
  1409 ;; Return value:  Size  Location     Type
  1410 ;;                  2   62[BANK0 ] int 
  1411 ;; Registers used:
  1412 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1413 ;; Tracked objects:
  1414 ;;		On entry : 1F/0
  1415 ;;		On exit  : 1F/0
  1416 ;;		Unchanged: 0/0
  1417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1418 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1419 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1420 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1421 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1422 ;;Total ram usage:        8 bytes
  1423 ;; Hardware stack levels used: 1
  1424 ;; Hardware stack levels required when called: 7
  1425 ;; This function calls:
  1426 ;;		_vfpfcnvrt
  1427 ;; This function is called by:
  1428 ;;		_printf
  1429 ;; This function uses a non-reentrant model
  1430 ;;
  1431                           
  1432                           
  1433                           ;psect for function _vfprintf
  1434  061B                     _vfprintf:
  1435                           
  1436                           ;incstack = 0
  1437                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1438                           ;vfprintf@fp stored from wreg
  1439  061B  00E3               	movwf	vfprintf@fp
  1440                           
  1441                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1442  061C  085F               	movf	vfprintf@fmt+1,w
  1443  061D  00E5               	movwf	vfprintf@cfmt+1
  1444  061E  085E               	movf	vfprintf@fmt,w
  1445  061F  00E4               	movwf	vfprintf@cfmt
  1446                           
  1447                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1448  0620  0021               	movlb	1	; select bank1
  1449  0621  01A4               	clrf	_nout^(0+128)
  1450  0622  01A5               	clrf	(_nout+1)^(0+128)
  1451  0623                     l1412:	
  1452                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1453                           
  1454                           
  1455                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1456  0623  0020               	movlb	0	; select bank0
  1457  0624  0864               	movf	vfprintf@cfmt,w
  1458  0625  0084               	movwf	4
  1459  0626  0865               	movf	vfprintf@cfmt+1,w
  1460  0627  0085               	movwf	5
  1461  0628  0012               	moviw fsr0++
  1462  0629  1903               	btfsc	3,2
  1463  062A  2E3F               	goto	l1414
  1464                           
  1465                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1466  062B  3064               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  1467  062C  00E1               	movwf	??_vfprintf
  1468  062D  0861               	movf	??_vfprintf,w
  1469  062E  00CE               	movwf	vfpfcnvrt@fmt
  1470  062F  0860               	movf	vfprintf@ap,w
  1471  0630  00E2               	movwf	??_vfprintf+1
  1472  0631  0862               	movf	??_vfprintf+1,w
  1473  0632  00CF               	movwf	vfpfcnvrt@ap
  1474  0633  0863               	movf	vfprintf@fp,w
  1475  0634  3181  2183  3186   	fcall	_vfpfcnvrt
  1476  0637  084E               	movf	?_vfpfcnvrt,w
  1477  0638  0021               	movlb	1	; select bank1
  1478  0639  07A4               	addwf	_nout^(0+128),f
  1479  063A  0020               	movlb	0	; select bank0
  1480  063B  084F               	movf	?_vfpfcnvrt+1,w
  1481  063C  0021               	movlb	1	; select bank1
  1482  063D  3DA5               	addwfc	(_nout+1)^(0+128),f
  1483  063E  2E23               	goto	l1412
  1484  063F                     l1414:
  1485                           
  1486                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1487  063F  0021               	movlb	1	; select bank1
  1488  0640  0825               	movf	(_nout+1)^(0+128),w
  1489  0641  0020               	movlb	0	; select bank0
  1490  0642  00DF               	movwf	?_vfprintf+1
  1491  0643  0021               	movlb	1	; select bank1
  1492  0644  0824               	movf	_nout^(0+128),w
  1493  0645  0020               	movlb	0	; select bank0
  1494  0646  00DE               	movwf	?_vfprintf
  1495  0647  0008               	return
  1496  0648                     __end_of_vfprintf:
  1497                           
  1498                           	psect	text5
  1499  0183                     __ptext5:	
  1500 ;; *************** function _vfpfcnvrt *****************
  1501 ;; Defined at:
  1502 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1503 ;; Parameters:    Size  Location     Type
  1504 ;;  fp              1    wreg     PTR struct _IO_FILE
  1505 ;;		 -> NULL(0), 
  1506 ;;  fmt             1   46[BANK0 ] PTR PTR unsigned char 
  1507 ;;		 -> vfprintf@cfmt(2), 
  1508 ;;  ap              1   47[BANK0 ] PTR PTR void 
  1509 ;;		 -> printf@ap(1), 
  1510 ;; Auto vars:     Size  Location     Type
  1511 ;;  fp              1   61[BANK0 ] PTR struct _IO_FILE
  1512 ;;		 -> NULL(0), 
  1513 ;;  ll              8   53[BANK0 ] long long 
  1514 ;;  llu             8    0        unsigned long long 
  1515 ;;  f               4    0        unsigned long long 
  1516 ;;  ct              3    0        unsigned char [3]
  1517 ;;  vp              2    0        PTR void 
  1518 ;;  i               2    0        int 
  1519 ;;  done            2    0        int 
  1520 ;;  cp              2    0        PTR unsigned char 
  1521 ;;  c               1    0        unsigned char 
  1522 ;; Return value:  Size  Location     Type
  1523 ;;                  2   46[BANK0 ] int 
  1524 ;; Registers used:
  1525 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1526 ;; Tracked objects:
  1527 ;;		On entry : 1F/0
  1528 ;;		On exit  : 1F/0
  1529 ;;		Unchanged: 0/0
  1530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1531 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1532 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1533 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1534 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1535 ;;Total ram usage:       16 bytes
  1536 ;; Hardware stack levels used: 1
  1537 ;; Hardware stack levels required when called: 6
  1538 ;; This function calls:
  1539 ;;		_dtoa
  1540 ;;		_fputc
  1541 ;;		_strncmp
  1542 ;; This function is called by:
  1543 ;;		_vfprintf
  1544 ;; This function uses a non-reentrant model
  1545 ;;
  1546                           
  1547                           
  1548                           ;psect for function _vfpfcnvrt
  1549  0183                     _vfpfcnvrt:
  1550                           
  1551                           ;incstack = 0
  1552                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1553                           ;vfpfcnvrt@fp stored from wreg
  1554  0183  00DD               	movwf	vfpfcnvrt@fp
  1555                           
  1556                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1557  0184  084E               	movf	vfpfcnvrt@fmt,w
  1558  0185  0086               	movwf	6
  1559  0186  0187               	clrf	7
  1560  0187  3F40               	moviw [0]fsr1
  1561  0188  00D0               	movwf	??_vfpfcnvrt
  1562  0189  3F41               	moviw [1]fsr1
  1563  018A  00D1               	movwf	??_vfpfcnvrt+1
  1564  018B  0850               	movf	??_vfpfcnvrt,w
  1565  018C  0084               	movwf	4
  1566  018D  0851               	movf	??_vfpfcnvrt+1,w
  1567  018E  0085               	movwf	5
  1568  018F  0012               	moviw fsr0++
  1569  0190  3A25               	xorlw	37
  1570  0191  1D03               	btfss	3,2
  1571  0192  2A9B               	goto	l1398
  1572                           
  1573                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1574  0193  084E               	movf	vfpfcnvrt@fmt,w
  1575  0194  0086               	movwf	6
  1576  0195  0187               	clrf	7
  1577  0196  3001               	movlw	1
  1578  0197  0781               	addwf	1,f
  1579  0198  3141               	addfsr 1,1
  1580  0199  1803               	skipnc
  1581  019A  0A81               	incf	1,f
  1582                           
  1583                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1584  019B  0021               	movlb	1	; select bank1
  1585  019C  01A6               	clrf	_width^(0+128)
  1586  019D  01A7               	clrf	(_width+1)^(0+128)
  1587  019E  0020               	movlb	0	; select bank0
  1588  019F  01ED               	clrf	_flags
  1589  01A0  01EE               	clrf	_flags+1
  1590                           
  1591                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1592  01A1  30FF               	movlw	255
  1593  01A2  0021               	movlb	1	; select bank1
  1594  01A3  00A8               	movwf	_prec^(0+128)
  1595  01A4  30FF               	movlw	255
  1596  01A5  00A9               	movwf	(_prec^(0+128)+1)
  1597                           
  1598                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  1599  01A6  0020               	movlb	0	; select bank0
  1600  01A7  084E               	movf	vfpfcnvrt@fmt,w
  1601  01A8  0086               	movwf	6
  1602  01A9  0187               	clrf	7
  1603  01AA  3F40               	moviw [0]fsr1
  1604  01AB  00D0               	movwf	??_vfpfcnvrt
  1605  01AC  3F41               	moviw [1]fsr1
  1606  01AD  00D1               	movwf	??_vfpfcnvrt+1
  1607  01AE  0850               	movf	??_vfpfcnvrt,w
  1608  01AF  0084               	movwf	4
  1609  01B0  0851               	movf	??_vfpfcnvrt+1,w
  1610  01B1  0085               	movwf	5
  1611  01B2  0012               	moviw fsr0++
  1612  01B3  3A64               	xorlw	100
  1613  01B4  1903               	btfsc	3,2
  1614  01B5  29C5               	goto	l1362
  1615  01B6  084E               	movf	vfpfcnvrt@fmt,w
  1616  01B7  0086               	movwf	6
  1617  01B8  0187               	clrf	7
  1618  01B9  3F40               	moviw [0]fsr1
  1619  01BA  00D0               	movwf	??_vfpfcnvrt
  1620  01BB  3F41               	moviw [1]fsr1
  1621  01BC  00D1               	movwf	??_vfpfcnvrt+1
  1622  01BD  0850               	movf	??_vfpfcnvrt,w
  1623  01BE  0084               	movwf	4
  1624  01BF  0851               	movf	??_vfpfcnvrt+1,w
  1625  01C0  0085               	movwf	5
  1626  01C1  0012               	moviw fsr0++
  1627  01C2  3A69               	xorlw	105
  1628  01C3  1D03               	btfss	3,2
  1629  01C4  29FE               	goto	l1370
  1630  01C5                     l1362:
  1631                           
  1632                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  1633  01C5  084E               	movf	vfpfcnvrt@fmt,w
  1634  01C6  0086               	movwf	6
  1635  01C7  0187               	clrf	7
  1636  01C8  3001               	movlw	1
  1637  01C9  0781               	addwf	1,f
  1638  01CA  3141               	addfsr 1,1
  1639  01CB  1803               	skipnc
  1640  01CC  0A81               	incf	1,f
  1641                           
  1642                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  1643  01CD  084F               	movf	vfpfcnvrt@ap,w
  1644  01CE  0086               	movwf	6
  1645  01CF  0187               	clrf	7
  1646  01D0  0801               	movf	1,w
  1647  01D1  0084               	movwf	4
  1648  01D2  0185               	clrf	5
  1649  01D3  3002               	movlw	2
  1650  01D4  0781               	addwf	1,f
  1651  01D5  3F00               	moviw [0]fsr0
  1652  01D6  00D0               	movwf	??_vfpfcnvrt
  1653  01D7  3F01               	moviw [1]fsr0
  1654  01D8  00D1               	movwf	??_vfpfcnvrt+1
  1655  01D9  0850               	movf	??_vfpfcnvrt,w
  1656  01DA  00D5               	movwf	vfpfcnvrt@ll
  1657  01DB  0851               	movf	??_vfpfcnvrt+1,w
  1658  01DC  00D6               	movwf	vfpfcnvrt@ll+1
  1659  01DD  0D89               	rlf	9,f
  1660  01DE  3B89               	subwfb	9,f
  1661  01DF  0989               	comf	9,f
  1662  01E0  00D7               	movwf	vfpfcnvrt@ll+2
  1663  01E1  00D8               	movwf	vfpfcnvrt@ll+3
  1664  01E2  00D9               	movwf	vfpfcnvrt@ll+4
  1665  01E3  00DA               	movwf	vfpfcnvrt@ll+5
  1666  01E4  00DB               	movwf	vfpfcnvrt@ll+6
  1667  01E5  00DC               	movwf	vfpfcnvrt@ll+7
  1668                           
  1669                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  1670  01E6  0855               	movf	vfpfcnvrt@ll,w
  1671  01E7  00B0               	movwf	dtoa@d
  1672  01E8  0856               	movf	vfpfcnvrt@ll+1,w
  1673  01E9  00B1               	movwf	dtoa@d+1
  1674  01EA  0857               	movf	vfpfcnvrt@ll+2,w
  1675  01EB  00B2               	movwf	dtoa@d+2
  1676  01EC  0858               	movf	vfpfcnvrt@ll+3,w
  1677  01ED  00B3               	movwf	dtoa@d+3
  1678  01EE  0859               	movf	vfpfcnvrt@ll+4,w
  1679  01EF  00B4               	movwf	dtoa@d+4
  1680  01F0  085A               	movf	vfpfcnvrt@ll+5,w
  1681  01F1  00B5               	movwf	dtoa@d+5
  1682  01F2  085B               	movf	vfpfcnvrt@ll+6,w
  1683  01F3  00B6               	movwf	dtoa@d+6
  1684  01F4  085C               	movf	vfpfcnvrt@ll+7,w
  1685  01F5  00B7               	movwf	dtoa@d+7
  1686  01F6  085D               	movf	vfpfcnvrt@fp,w
  1687  01F7  3180  203C         	fcall	_dtoa
  1688  01F9  0831               	movf	?_dtoa+1,w
  1689  01FA  00CF               	movwf	?_vfpfcnvrt+1
  1690  01FB  0830               	movf	?_dtoa,w
  1691  01FC  00CE               	movwf	?_vfpfcnvrt
  1692  01FD  0008               	return
  1693  01FE                     l1370:
  1694                           
  1695                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 857:         if (
      +                          !strncmp(*fmt, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeo
      +                          f("li")/sizeof("li"[0]))-1))) {
  1696  01FE  084E               	movf	vfpfcnvrt@fmt,w
  1697  01FF  0086               	movwf	6
  1698  0200  0187               	clrf	7
  1699  0201  3F40               	moviw [0]fsr1
  1700  0202  00F1               	movwf	strncmp@_l
  1701  0203  3F41               	moviw [1]fsr1
  1702  0204  00F2               	movwf	strncmp@_l+1
  1703  0205  30E6               	movlw	low (STR_2| (0+32768))
  1704  0206  00F3               	movwf	strncmp@_r
  1705  0207  3086               	movlw	high (STR_2| (0+32768))
  1706  0208  00F4               	movwf	strncmp@_r+1
  1707  0209  3002               	movlw	2
  1708  020A  00F5               	movwf	strncmp@n
  1709  020B  3000               	movlw	0
  1710  020C  00F6               	movwf	strncmp@n+1
  1711  020D  3185  2507  3181   	fcall	_strncmp
  1712  0210  0871               	movf	?_strncmp,w
  1713  0211  0472               	iorwf	?_strncmp+1,w
  1714  0212  1903               	btfsc	3,2
  1715  0213  2A2A               	goto	l1374
  1716  0214  084E               	movf	vfpfcnvrt@fmt,w
  1717  0215  0086               	movwf	6
  1718  0216  0187               	clrf	7
  1719  0217  3F40               	moviw [0]fsr1
  1720  0218  00F1               	movwf	strncmp@_l
  1721  0219  3F41               	moviw [1]fsr1
  1722  021A  00F2               	movwf	strncmp@_l+1
  1723  021B  30E9               	movlw	low (STR_6| (0+32768))
  1724  021C  00F3               	movwf	strncmp@_r
  1725  021D  3086               	movlw	high (STR_6| (0+32768))
  1726  021E  00F4               	movwf	strncmp@_r+1
  1727  021F  3002               	movlw	2
  1728  0220  00F5               	movwf	strncmp@n
  1729  0221  3000               	movlw	0
  1730  0222  00F6               	movwf	strncmp@n+1
  1731  0223  3185  2507  3181   	fcall	_strncmp
  1732  0226  0871               	movf	?_strncmp,w
  1733  0227  0472               	iorwf	?_strncmp+1,w
  1734  0228  1D03               	btfss	3,2
  1735  0229  2A69               	goto	l1382
  1736  022A                     l1374:
  1737                           
  1738                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 858: ;C:\Program 
      +                          Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 860:             *fmt += ((si
      +                          zeof("ld")/sizeof("ld"[0]))-1);
  1739  022A  084E               	movf	vfpfcnvrt@fmt,w
  1740  022B  0086               	movwf	6
  1741  022C  0187               	clrf	7
  1742  022D  3002               	movlw	2
  1743  022E  0781               	addwf	1,f
  1744  022F  3141               	addfsr 1,1
  1745  0230  1803               	skipnc
  1746  0231  0A81               	incf	1,f
  1747                           
  1748                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 861:             
      +                          ll = (long long)(*(long *)__va_arg(*(long **)ap, (long)0));
  1749  0232  084F               	movf	vfpfcnvrt@ap,w
  1750  0233  0086               	movwf	6
  1751  0234  0187               	clrf	7
  1752  0235  0801               	movf	1,w
  1753  0236  0084               	movwf	4
  1754  0237  0185               	clrf	5
  1755  0238  3004               	movlw	4
  1756  0239  0781               	addwf	1,f
  1757  023A  3F00               	moviw [0]fsr0
  1758  023B  00D0               	movwf	??_vfpfcnvrt
  1759  023C  3F01               	moviw [1]fsr0
  1760  023D  00D1               	movwf	??_vfpfcnvrt+1
  1761  023E  3F02               	moviw [2]fsr0
  1762  023F  00D2               	movwf	??_vfpfcnvrt+2
  1763  0240  3F03               	moviw [3]fsr0
  1764  0241  00D3               	movwf	??_vfpfcnvrt+3
  1765  0242  0850               	movf	??_vfpfcnvrt,w
  1766  0243  00D5               	movwf	vfpfcnvrt@ll
  1767  0244  0851               	movf	??_vfpfcnvrt+1,w
  1768  0245  00D6               	movwf	vfpfcnvrt@ll+1
  1769  0246  0852               	movf	??_vfpfcnvrt+2,w
  1770  0247  00D7               	movwf	vfpfcnvrt@ll+2
  1771  0248  0853               	movf	??_vfpfcnvrt+3,w
  1772  0249  00D8               	movwf	vfpfcnvrt@ll+3
  1773  024A  3000               	movlw	0
  1774  024B  1BD8               	btfsc	vfpfcnvrt@ll+3,7
  1775  024C  30FF               	movlw	255
  1776  024D  00D9               	movwf	vfpfcnvrt@ll+4
  1777  024E  00DA               	movwf	vfpfcnvrt@ll+5
  1778  024F  00DB               	movwf	vfpfcnvrt@ll+6
  1779  0250  00DC               	movwf	vfpfcnvrt@ll+7
  1780                           
  1781                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 863:             
      +                          return dtoa(fp, ll);
  1782  0251  0855               	movf	vfpfcnvrt@ll,w
  1783  0252  00B0               	movwf	dtoa@d
  1784  0253  0856               	movf	vfpfcnvrt@ll+1,w
  1785  0254  00B1               	movwf	dtoa@d+1
  1786  0255  0857               	movf	vfpfcnvrt@ll+2,w
  1787  0256  00B2               	movwf	dtoa@d+2
  1788  0257  0858               	movf	vfpfcnvrt@ll+3,w
  1789  0258  00B3               	movwf	dtoa@d+3
  1790  0259  0859               	movf	vfpfcnvrt@ll+4,w
  1791  025A  00B4               	movwf	dtoa@d+4
  1792  025B  085A               	movf	vfpfcnvrt@ll+5,w
  1793  025C  00B5               	movwf	dtoa@d+5
  1794  025D  085B               	movf	vfpfcnvrt@ll+6,w
  1795  025E  00B6               	movwf	dtoa@d+6
  1796  025F  085C               	movf	vfpfcnvrt@ll+7,w
  1797  0260  00B7               	movwf	dtoa@d+7
  1798  0261  085D               	movf	vfpfcnvrt@fp,w
  1799  0262  3180  203C         	fcall	_dtoa
  1800  0264  0831               	movf	?_dtoa+1,w
  1801  0265  00CF               	movwf	?_vfpfcnvrt+1
  1802  0266  0830               	movf	?_dtoa,w
  1803  0267  00CE               	movwf	?_vfpfcnvrt
  1804  0268  0008               	return
  1805  0269                     l1382:
  1806                           
  1807                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  1808  0269  084E               	movf	vfpfcnvrt@fmt,w
  1809  026A  0086               	movwf	6
  1810  026B  0187               	clrf	7
  1811  026C  3F40               	moviw [0]fsr1
  1812  026D  00D0               	movwf	??_vfpfcnvrt
  1813  026E  3F41               	moviw [1]fsr1
  1814  026F  00D1               	movwf	??_vfpfcnvrt+1
  1815  0270  0850               	movf	??_vfpfcnvrt,w
  1816  0271  0084               	movwf	4
  1817  0272  0851               	movf	??_vfpfcnvrt+1,w
  1818  0273  0085               	movwf	5
  1819  0274  0012               	moviw fsr0++
  1820  0275  3A25               	xorlw	37
  1821  0276  1D03               	btfss	3,2
  1822  0277  2A90               	goto	l1392
  1823                           
  1824                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  1825  0278  084E               	movf	vfpfcnvrt@fmt,w
  1826  0279  0086               	movwf	6
  1827  027A  0187               	clrf	7
  1828  027B  3001               	movlw	1
  1829  027C  0781               	addwf	1,f
  1830  027D  3141               	addfsr 1,1
  1831  027E  1803               	skipnc
  1832  027F  0A81               	incf	1,f
  1833                           
  1834                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  1835  0280  3025               	movlw	37
  1836  0281  00F2               	movwf	fputc@c
  1837  0282  3000               	movlw	0
  1838  0283  00F3               	movwf	fputc@c+1
  1839  0284  085D               	movf	vfpfcnvrt@fp,w
  1840  0285  00D0               	movwf	??_vfpfcnvrt
  1841  0286  0850               	movf	??_vfpfcnvrt,w
  1842  0287  00F4               	movwf	fputc@fp
  1843  0288  3185  25E6         	fcall	_fputc
  1844  028A                     l1388:
  1845                           
  1846                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  1847  028A  3001               	movlw	1
  1848  028B  0020               	movlb	0	; select bank0
  1849  028C  00CE               	movwf	?_vfpfcnvrt
  1850  028D  3000               	movlw	0
  1851  028E  00CF               	movwf	?_vfpfcnvrt+1
  1852  028F  0008               	return
  1853  0290                     l1392:
  1854                           
  1855                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  1856  0290  084E               	movf	vfpfcnvrt@fmt,w
  1857  0291  0086               	movwf	6
  1858  0292  0187               	clrf	7
  1859  0293  3001               	movlw	1
  1860  0294  0781               	addwf	1,f
  1861  0295  3141               	addfsr 1,1
  1862  0296  1803               	skipnc
  1863  0297  0A81               	incf	1,f
  1864                           
  1865                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  1866  0298  01CE               	clrf	?_vfpfcnvrt
  1867  0299  01CF               	clrf	?_vfpfcnvrt+1
  1868  029A  0008               	return
  1869  029B                     l1398:
  1870                           
  1871                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  1872  029B  084E               	movf	vfpfcnvrt@fmt,w
  1873  029C  0086               	movwf	6
  1874  029D  0187               	clrf	7
  1875  029E  3F40               	moviw [0]fsr1
  1876  029F  00D0               	movwf	??_vfpfcnvrt
  1877  02A0  3F41               	moviw [1]fsr1
  1878  02A1  00D1               	movwf	??_vfpfcnvrt+1
  1879  02A2  0850               	movf	??_vfpfcnvrt,w
  1880  02A3  0084               	movwf	4
  1881  02A4  0851               	movf	??_vfpfcnvrt+1,w
  1882  02A5  0085               	movwf	5
  1883  02A6  0800               	movf	0,w	;code access
  1884  02A7  00D2               	movwf	??_vfpfcnvrt+2
  1885  02A8  01D3               	clrf	??_vfpfcnvrt+3
  1886  02A9  0852               	movf	??_vfpfcnvrt+2,w
  1887  02AA  00F2               	movwf	fputc@c
  1888  02AB  0853               	movf	??_vfpfcnvrt+3,w
  1889  02AC  00F3               	movwf	fputc@c+1
  1890  02AD  085D               	movf	vfpfcnvrt@fp,w
  1891  02AE  00D4               	movwf	??_vfpfcnvrt+4
  1892  02AF  0854               	movf	??_vfpfcnvrt+4,w
  1893  02B0  00F4               	movwf	fputc@fp
  1894  02B1  3185  25E6  3181   	fcall	_fputc
  1895                           
  1896                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  1897  02B4  0020               	movlb	0	; select bank0
  1898  02B5  084E               	movf	vfpfcnvrt@fmt,w
  1899  02B6  0086               	movwf	6
  1900  02B7  0187               	clrf	7
  1901  02B8  3001               	movlw	1
  1902  02B9  0781               	addwf	1,f
  1903  02BA  3141               	addfsr 1,1
  1904  02BB  1803               	skipnc
  1905  02BC  0A81               	incf	1,f
  1906  02BD  2A8A               	goto	l1388
  1907  02BE                     __end_of_vfpfcnvrt:
  1908                           
  1909                           	psect	text6
  1910  0507                     __ptext6:	
  1911 ;; *************** function _strncmp *****************
  1912 ;; Defined at:
  1913 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strncmp.c"
  1914 ;; Parameters:    Size  Location     Type
  1915 ;;  _l              2    1[COMMON] PTR const unsigned char 
  1916 ;;		 -> STR_1(5), 
  1917 ;;  _r              2    3[COMMON] PTR const unsigned char 
  1918 ;;		 -> STR_8(3), STR_4(3), 
  1919 ;;  n               2    5[COMMON] unsigned int 
  1920 ;; Auto vars:     Size  Location     Type
  1921 ;;  r               2   10[COMMON] PTR const unsigned char 
  1922 ;;		 -> STR_8(3), STR_4(3), 
  1923 ;;  l               2    8[COMMON] PTR const unsigned char 
  1924 ;;		 -> STR_1(5), 
  1925 ;; Return value:  Size  Location     Type
  1926 ;;                  2    1[COMMON] int 
  1927 ;; Registers used:
  1928 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  1929 ;; Tracked objects:
  1930 ;;		On entry : 1F/0
  1931 ;;		On exit  : 1F/0
  1932 ;;		Unchanged: 1F/0
  1933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1934 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1935 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1936 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1937 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1938 ;;Total ram usage:       11 bytes
  1939 ;; Hardware stack levels used: 1
  1940 ;; Hardware stack levels required when called: 1
  1941 ;; This function calls:
  1942 ;;		Nothing
  1943 ;; This function is called by:
  1944 ;;		_vfpfcnvrt
  1945 ;; This function uses a non-reentrant model
  1946 ;;
  1947                           
  1948                           
  1949                           ;psect for function _strncmp
  1950  0507                     _strncmp:
  1951                           
  1952                           ;incstack = 0
  1953                           ; Regs used in _strncmp: [wreg-fsr0h+status,2+status,0+pclath]
  1954  0507  0872               	movf	strncmp@_l+1,w
  1955  0508  00F9               	movwf	strncmp@l+1
  1956  0509  0871               	movf	strncmp@_l,w
  1957  050A  00F8               	movwf	strncmp@l
  1958  050B  0874               	movf	strncmp@_r+1,w
  1959  050C  00FB               	movwf	strncmp@r+1
  1960  050D  0873               	movf	strncmp@_r,w
  1961  050E  00FA               	movwf	strncmp@r
  1962  050F  3001               	movlw	1
  1963  0510  02F5               	subwf	strncmp@n,f
  1964  0511  3000               	movlw	0
  1965  0512  3BF6               	subwfb	strncmp@n+1,f
  1966  0513  0A75               	incf	strncmp@n,w
  1967  0514  1D03               	skipz
  1968  0515  2D41               	goto	l1338
  1969  0516  0A76               	incf	strncmp@n+1,w
  1970  0517  1D03               	btfss	3,2
  1971  0518  2D41               	goto	l1338
  1972  0519  01F1               	clrf	?_strncmp
  1973  051A  01F2               	clrf	?_strncmp+1
  1974  051B  0008               	return
  1975  051C                     l1340:
  1976  051C  087A               	movf	strncmp@r,w
  1977  051D  0084               	movwf	4
  1978  051E  087B               	movf	strncmp@r+1,w
  1979  051F  0085               	movwf	5
  1980  0520  0012               	moviw fsr0++
  1981  0521  1903               	btfsc	3,2
  1982  0522  2D48               	goto	l1346
  1983  0523  0875               	movf	strncmp@n,w
  1984  0524  0476               	iorwf	strncmp@n+1,w
  1985  0525  1903               	btfsc	3,2
  1986  0526  2D48               	goto	l1346
  1987  0527  087A               	movf	strncmp@r,w
  1988  0528  0084               	movwf	4
  1989  0529  087B               	movf	strncmp@r+1,w
  1990  052A  0085               	movwf	5
  1991  052B  0800               	movf	0,w	;code access
  1992  052C  00F7               	movwf	??_strncmp
  1993  052D  0878               	movf	strncmp@l,w
  1994  052E  0084               	movwf	4
  1995  052F  0879               	movf	strncmp@l+1,w
  1996  0530  0085               	movwf	5
  1997  0531  0800               	movf	0,w	;code access
  1998  0532  0677               	xorwf	??_strncmp,w
  1999  0533  1D03               	btfss	3,2
  2000  0534  2D48               	goto	l1346
  2001  0535  3001               	movlw	1
  2002  0536  07F8               	addwf	strncmp@l,f
  2003  0537  3000               	movlw	0
  2004  0538  3DF9               	addwfc	strncmp@l+1,f
  2005  0539  3001               	movlw	1
  2006  053A  07FA               	addwf	strncmp@r,f
  2007  053B  3000               	movlw	0
  2008  053C  3DFB               	addwfc	strncmp@r+1,f
  2009  053D  3001               	movlw	1
  2010  053E  02F5               	subwf	strncmp@n,f
  2011  053F  3000               	movlw	0
  2012  0540  3BF6               	subwfb	strncmp@n+1,f
  2013  0541                     l1338:
  2014  0541  0878               	movf	strncmp@l,w
  2015  0542  0084               	movwf	4
  2016  0543  0879               	movf	strncmp@l+1,w
  2017  0544  0085               	movwf	5
  2018  0545  0012               	moviw fsr0++
  2019  0546  1D03               	btfss	3,2
  2020  0547  2D1C               	goto	l1340
  2021  0548                     l1346:
  2022  0548  0878               	movf	strncmp@l,w
  2023  0549  0084               	movwf	4
  2024  054A  0879               	movf	strncmp@l+1,w
  2025  054B  0085               	movwf	5
  2026  054C  0800               	movf	0,w	;code access
  2027  054D  00F7               	movwf	??_strncmp
  2028  054E  087A               	movf	strncmp@r,w
  2029  054F  0084               	movwf	4
  2030  0550  087B               	movf	strncmp@r+1,w
  2031  0551  0085               	movwf	5
  2032  0552  0800               	movf	0,w	;code access
  2033  0553  0277               	subwf	??_strncmp,w
  2034  0554  00F1               	movwf	?_strncmp
  2035  0555  01F2               	clrf	?_strncmp+1
  2036  0556  1C03               	skipc
  2037  0557  03F2               	decf	?_strncmp+1,f
  2038  0558  0008               	return
  2039  0559                     __end_of_strncmp:
  2040                           
  2041                           	psect	text7
  2042  003C                     __ptext7:	
  2043 ;; *************** function _dtoa *****************
  2044 ;; Defined at:
  2045 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2046 ;; Parameters:    Size  Location     Type
  2047 ;;  fp              1    wreg     PTR struct _IO_FILE
  2048 ;;		 -> NULL(0), 
  2049 ;;  d               8   16[BANK0 ] long long 
  2050 ;; Auto vars:     Size  Location     Type
  2051 ;;  fp              1   31[BANK0 ] PTR struct _IO_FILE
  2052 ;;		 -> NULL(0), 
  2053 ;;  n               8   36[BANK0 ] long long 
  2054 ;;  i               2   44[BANK0 ] int 
  2055 ;;  s               2   34[BANK0 ] int 
  2056 ;;  w               2   32[BANK0 ] int 
  2057 ;;  p               2   29[BANK0 ] int 
  2058 ;; Return value:  Size  Location     Type
  2059 ;;                  2   16[BANK0 ] int 
  2060 ;; Registers used:
  2061 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2062 ;; Tracked objects:
  2063 ;;		On entry : 1F/0
  2064 ;;		On exit  : 1F/0
  2065 ;;		Unchanged: 0/0
  2066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2067 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2068 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2069 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2070 ;;      Totals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2071 ;;Total ram usage:       30 bytes
  2072 ;; Hardware stack levels used: 1
  2073 ;; Hardware stack levels required when called: 5
  2074 ;; This function calls:
  2075 ;;		___aodiv
  2076 ;;		___aomod
  2077 ;;		_abs
  2078 ;;		_pad
  2079 ;; This function is called by:
  2080 ;;		_vfpfcnvrt
  2081 ;; This function uses a non-reentrant model
  2082 ;;
  2083                           
  2084                           
  2085                           ;psect for function _dtoa
  2086  003C                     _dtoa:
  2087                           
  2088                           ;incstack = 0
  2089                           ; Regs used in _dtoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2090                           ;dtoa@fp stored from wreg
  2091  003C  00BF               	movwf	dtoa@fp
  2092                           
  2093                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  2094  003D  0830               	movf	dtoa@d,w
  2095  003E  00C4               	movwf	dtoa@n
  2096  003F  0831               	movf	dtoa@d+1,w
  2097  0040  00C5               	movwf	dtoa@n+1
  2098  0041  0832               	movf	dtoa@d+2,w
  2099  0042  00C6               	movwf	dtoa@n+2
  2100  0043  0833               	movf	dtoa@d+3,w
  2101  0044  00C7               	movwf	dtoa@n+3
  2102  0045  0834               	movf	dtoa@d+4,w
  2103  0046  00C8               	movwf	dtoa@n+4
  2104  0047  0835               	movf	dtoa@d+5,w
  2105  0048  00C9               	movwf	dtoa@n+5
  2106  0049  0836               	movf	dtoa@d+6,w
  2107  004A  00CA               	movwf	dtoa@n+6
  2108  004B  0837               	movf	dtoa@d+7,w
  2109  004C  00CB               	movwf	dtoa@n+7
  2110                           
  2111                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  2112  004D  3044               	movlw	low dtoa@n
  2113  004E  0086               	movwf	6
  2114  004F  3000               	movlw	high dtoa@n
  2115  0050  0087               	movwf	7
  2116  0051  3F47               	moviw [7]fsr1
  2117  0052  00B8               	movwf	??_dtoa
  2118  0053  1FB8               	btfss	??_dtoa,7
  2119  0054  2857               	goto	u1070
  2120  0055  3001               	movlw	1
  2121  0056  2858               	goto	u1080
  2122  0057                     u1070:
  2123  0057  3000               	movlw	0
  2124  0058                     u1080:
  2125  0058  0020               	movlb	0	; select bank0
  2126  0059  00B9               	movwf	??_dtoa+1
  2127  005A  01BA               	clrf	??_dtoa+2
  2128  005B  0839               	movf	??_dtoa+1,w
  2129  005C  00C2               	movwf	dtoa@s
  2130  005D  083A               	movf	??_dtoa+2,w
  2131  005E  00C3               	movwf	dtoa@s+1
  2132                           
  2133                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  2134  005F  0842               	movf	dtoa@s,w
  2135  0060  0443               	iorwf	dtoa@s+1,w
  2136  0061  1903               	btfsc	3,2
  2137  0062  2881               	goto	l674
  2138                           
  2139                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  2140  0063  09C4               	comf	dtoa@n,f
  2141  0064  09C5               	comf	dtoa@n+1,f
  2142  0065  09C6               	comf	dtoa@n+2,f
  2143  0066  09C7               	comf	dtoa@n+3,f
  2144  0067  09C8               	comf	dtoa@n+4,f
  2145  0068  09C9               	comf	dtoa@n+5,f
  2146  0069  09CA               	comf	dtoa@n+6,f
  2147  006A  09CB               	comf	dtoa@n+7,f
  2148  006B  0AC4               	incf	dtoa@n,f
  2149  006C  1D03               	skipz
  2150  006D  2881               	goto	l674
  2151  006E  0AC5               	incf	dtoa@n+1,f
  2152  006F  1D03               	skipz
  2153  0070  2881               	goto	l674
  2154  0071  0AC6               	incf	dtoa@n+2,f
  2155  0072  1D03               	skipz
  2156  0073  2881               	goto	l674
  2157  0074  0AC7               	incf	dtoa@n+3,f
  2158  0075  1D03               	skipz
  2159  0076  2881               	goto	l674
  2160  0077  0AC8               	incf	dtoa@n+4,f
  2161  0078  1D03               	skipz
  2162  0079  2881               	goto	l674
  2163  007A  0AC9               	incf	dtoa@n+5,f
  2164  007B  1D03               	skipz
  2165  007C  2881               	goto	l674
  2166  007D  0ACA               	incf	dtoa@n+6,f
  2167  007E  1D03               	skipz
  2168  007F  2881               	goto	l674
  2169  0080  0ACB               	incf	dtoa@n+7,f
  2170  0081                     l674:	
  2171                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 297:     }
  2172                           
  2173                           
  2174                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  2175  0081  0021               	movlb	1	; select bank1
  2176  0082  1BA9               	btfsc	(_prec+1)^(0+128),7
  2177  0083  2889               	goto	l675
  2178                           
  2179                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  2180  0084  30FD               	movlw	253
  2181  0085  0020               	movlb	0	; select bank0
  2182  0086  05ED               	andwf	_flags,f
  2183  0087  30FF               	movlw	255
  2184  0088  05EE               	andwf	_flags+1,f
  2185  0089                     l675:	
  2186                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 302:     }
  2187                           
  2188                           
  2189                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  2190  0089  0021               	movlb	1	; select bank1
  2191  008A  0829               	movf	(_prec+1)^(0+128),w
  2192  008B  3A80               	xorlw	128
  2193  008C  0020               	movlb	0	; select bank0
  2194  008D  00B8               	movwf	??_dtoa
  2195  008E  3080               	movlw	128
  2196  008F  0238               	subwf	??_dtoa,w
  2197  0090  1D03               	skipz
  2198  0091  2895               	goto	u1125
  2199  0092  3001               	movlw	1
  2200  0093  0021               	movlb	1	; select bank1
  2201  0094  0228               	subwf	_prec^(0+128),w
  2202  0095                     u1125:
  2203  0095  1803               	skipnc
  2204  0096  289D               	goto	l1282
  2205  0097  3001               	movlw	1
  2206  0098  0020               	movlb	0	; select bank0
  2207  0099  00BD               	movwf	dtoa@p
  2208  009A  3000               	movlw	0
  2209  009B  00BE               	movwf	dtoa@p+1
  2210  009C  28A5               	goto	l679
  2211  009D                     l1282:
  2212  009D  0021               	movlb	1	; select bank1
  2213  009E  0829               	movf	(_prec+1)^(0+128),w
  2214  009F  0020               	movlb	0	; select bank0
  2215  00A0  00BE               	movwf	dtoa@p+1
  2216  00A1  0021               	movlb	1	; select bank1
  2217  00A2  0828               	movf	_prec^(0+128),w
  2218  00A3  0020               	movlb	0	; select bank0
  2219  00A4  00BD               	movwf	dtoa@p
  2220  00A5                     l679:
  2221                           
  2222                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  2223  00A5  0021               	movlb	1	; select bank1
  2224  00A6  0827               	movf	(_width+1)^(0+128),w
  2225  00A7  0020               	movlb	0	; select bank0
  2226  00A8  00C1               	movwf	dtoa@w+1
  2227  00A9  0021               	movlb	1	; select bank1
  2228  00AA  0826               	movf	_width^(0+128),w
  2229  00AB  0020               	movlb	0	; select bank0
  2230  00AC  00C0               	movwf	dtoa@w
  2231                           
  2232                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  2233  00AD  0842               	movf	dtoa@s,w
  2234  00AE  0443               	iorwf	dtoa@s+1,w
  2235  00AF  1D03               	btfss	3,2
  2236  00B0  28B3               	goto	l1288
  2237  00B1  1D6D               	btfss	_flags,2
  2238  00B2  28B7               	goto	l680
  2239  00B3                     l1288:
  2240                           
  2241                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  2242  00B3  30FF               	movlw	255
  2243  00B4  07C0               	addwf	dtoa@w,f
  2244  00B5  30FF               	movlw	255
  2245  00B6  3DC1               	addwfc	dtoa@w+1,f
  2246  00B7                     l680:	
  2247                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 307:     }
  2248                           
  2249                           
  2250                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  2251  00B7  301F               	movlw	31
  2252  00B8  00CC               	movwf	dtoa@i
  2253  00B9  3000               	movlw	0
  2254  00BA  00CD               	movwf	dtoa@i+1
  2255                           
  2256                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  2257  00BB  0021               	movlb	1	; select bank1
  2258  00BC  01C9               	clrf	(_dbuf^(0+128)+31)
  2259                           
  2260                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2261  00BD  2949               	goto	l683
  2262  00BE                     l1302:
  2263  00BE  0020               	movlb	0	; select bank0
  2264  00BF  0844               	movf	dtoa@n,w
  2265  00C0  0445               	iorwf	dtoa@n+1,w
  2266  00C1  0446               	iorwf	dtoa@n+2,w
  2267  00C2  0447               	iorwf	dtoa@n+3,w
  2268  00C3  0448               	iorwf	dtoa@n+4,w
  2269  00C4  0449               	iorwf	dtoa@n+5,w
  2270  00C5  044A               	iorwf	dtoa@n+6,w
  2271  00C6  044B               	iorwf	dtoa@n+7,w
  2272  00C7  1D03               	skipz
  2273  00C8  28E3               	goto	l1292
  2274  00C9  083E               	movf	dtoa@p+1,w
  2275  00CA  3A80               	xorlw	128
  2276  00CB  00B8               	movwf	??_dtoa
  2277  00CC  3080               	movlw	128
  2278  00CD  0238               	subwf	??_dtoa,w
  2279  00CE  1D03               	skipz
  2280  00CF  28D2               	goto	u1175
  2281  00D0  3001               	movlw	1
  2282  00D1  023D               	subwf	dtoa@p,w
  2283  00D2                     u1175:
  2284  00D2  1803               	skipnc
  2285  00D3  28E3               	goto	l1292
  2286  00D4  0020               	movlb	0	; select bank0
  2287  00D5  0841               	movf	dtoa@w+1,w
  2288  00D6  3A80               	xorlw	128
  2289  00D7  00B8               	movwf	??_dtoa
  2290  00D8  3080               	movlw	128
  2291  00D9  0238               	subwf	??_dtoa,w
  2292  00DA  1D03               	skipz
  2293  00DB  28DE               	goto	u1185
  2294  00DC  3001               	movlw	1
  2295  00DD  0240               	subwf	dtoa@w,w
  2296  00DE                     u1185:
  2297  00DE  1C03               	skipc
  2298  00DF  2955               	goto	l1310
  2299  00E0  0020               	movlb	0	; select bank0
  2300  00E1  1CED               	btfss	_flags,1
  2301  00E2  2955               	goto	l1310
  2302  00E3                     l1292:
  2303                           
  2304                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  2305  00E3  30FF               	movlw	255
  2306  00E4  0020               	movlb	0	; select bank0
  2307  00E5  07CC               	addwf	dtoa@i,f
  2308  00E6  30FF               	movlw	255
  2309  00E7  3DCD               	addwfc	dtoa@i+1,f
  2310                           
  2311                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  2312  00E8  300A               	movlw	10
  2313  00E9  00A0               	movwf	___aomod@divisor
  2314  00EA  01A1               	clrf	___aomod@divisor+1
  2315  00EB  01A2               	clrf	___aomod@divisor+2
  2316  00EC  01A3               	clrf	___aomod@divisor+3
  2317  00ED  01A4               	clrf	___aomod@divisor+4
  2318  00EE  01A5               	clrf	___aomod@divisor+5
  2319  00EF  01A6               	clrf	___aomod@divisor+6
  2320  00F0  01A7               	clrf	___aomod@divisor+7
  2321  00F1  0844               	movf	dtoa@n,w
  2322  00F2  00A8               	movwf	___aomod@dividend
  2323  00F3  0845               	movf	dtoa@n+1,w
  2324  00F4  00A9               	movwf	___aomod@dividend+1
  2325  00F5  0846               	movf	dtoa@n+2,w
  2326  00F6  00AA               	movwf	___aomod@dividend+2
  2327  00F7  0847               	movf	dtoa@n+3,w
  2328  00F8  00AB               	movwf	___aomod@dividend+3
  2329  00F9  0848               	movf	dtoa@n+4,w
  2330  00FA  00AC               	movwf	___aomod@dividend+4
  2331  00FB  0849               	movf	dtoa@n+5,w
  2332  00FC  00AD               	movwf	___aomod@dividend+5
  2333  00FD  084A               	movf	dtoa@n+6,w
  2334  00FE  00AE               	movwf	___aomod@dividend+6
  2335  00FF  084B               	movf	dtoa@n+7,w
  2336  0100  00AF               	movwf	___aomod@dividend+7
  2337  0101  3183  23B1  3180   	fcall	___aomod
  2338  0104  0821               	movf	?___aomod+1,w
  2339  0105  00F5               	movwf	abs@a+1
  2340  0106  0820               	movf	?___aomod,w
  2341  0107  00F4               	movwf	abs@a
  2342  0108  3186  26A1  3180   	fcall	_abs
  2343  010B  0874               	movf	?_abs,w
  2344  010C  3E30               	addlw	48
  2345  010D  0020               	movlb	0	; select bank0
  2346  010E  00B8               	movwf	??_dtoa
  2347  010F  084C               	movf	dtoa@i,w
  2348  0110  3EAA               	addlw	(low (_dbuf| 0))& (0+255)
  2349  0111  0086               	movwf	6
  2350  0112  0187               	clrf	7
  2351  0113  0838               	movf	??_dtoa,w
  2352  0114  0081               	movwf	1
  2353                           
  2354                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  2355  0115  30FF               	movlw	255
  2356  0116  07BD               	addwf	dtoa@p,f
  2357  0117  30FF               	movlw	255
  2358  0118  3DBE               	addwfc	dtoa@p+1,f
  2359                           
  2360                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  2361  0119  30FF               	movlw	255
  2362  011A  07C0               	addwf	dtoa@w,f
  2363  011B  30FF               	movlw	255
  2364  011C  3DC1               	addwfc	dtoa@w+1,f
  2365                           
  2366                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  2367  011D  300A               	movlw	10
  2368  011E  00A0               	movwf	___aodiv@divisor
  2369  011F  01A1               	clrf	___aodiv@divisor+1
  2370  0120  01A2               	clrf	___aodiv@divisor+2
  2371  0121  01A3               	clrf	___aodiv@divisor+3
  2372  0122  01A4               	clrf	___aodiv@divisor+4
  2373  0123  01A5               	clrf	___aodiv@divisor+5
  2374  0124  01A6               	clrf	___aodiv@divisor+6
  2375  0125  01A7               	clrf	___aodiv@divisor+7
  2376  0126  0844               	movf	dtoa@n,w
  2377  0127  00A8               	movwf	___aodiv@dividend
  2378  0128  0845               	movf	dtoa@n+1,w
  2379  0129  00A9               	movwf	___aodiv@dividend+1
  2380  012A  0846               	movf	dtoa@n+2,w
  2381  012B  00AA               	movwf	___aodiv@dividend+2
  2382  012C  0847               	movf	dtoa@n+3,w
  2383  012D  00AB               	movwf	___aodiv@dividend+3
  2384  012E  0848               	movf	dtoa@n+4,w
  2385  012F  00AC               	movwf	___aodiv@dividend+4
  2386  0130  0849               	movf	dtoa@n+5,w
  2387  0131  00AD               	movwf	___aodiv@dividend+5
  2388  0132  084A               	movf	dtoa@n+6,w
  2389  0133  00AE               	movwf	___aodiv@dividend+6
  2390  0134  084B               	movf	dtoa@n+7,w
  2391  0135  00AF               	movwf	___aodiv@dividend+7
  2392  0136  3182  22BE  3180   	fcall	___aodiv
  2393  0139  0820               	movf	?___aodiv,w
  2394  013A  00C4               	movwf	dtoa@n
  2395  013B  0821               	movf	?___aodiv+1,w
  2396  013C  00C5               	movwf	dtoa@n+1
  2397  013D  0822               	movf	?___aodiv+2,w
  2398  013E  00C6               	movwf	dtoa@n+2
  2399  013F  0823               	movf	?___aodiv+3,w
  2400  0140  00C7               	movwf	dtoa@n+3
  2401  0141  0824               	movf	?___aodiv+4,w
  2402  0142  00C8               	movwf	dtoa@n+4
  2403  0143  0825               	movf	?___aodiv+5,w
  2404  0144  00C9               	movwf	dtoa@n+5
  2405  0145  0826               	movf	?___aodiv+6,w
  2406  0146  00CA               	movwf	dtoa@n+6
  2407  0147  0827               	movf	?___aodiv+7,w
  2408  0148  00CB               	movwf	dtoa@n+7
  2409  0149                     l683:	
  2410                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 318:     }
  2411                           
  2412                           
  2413                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2414  0149  0020               	movlb	0	; select bank0
  2415  014A  084D               	movf	dtoa@i+1,w
  2416  014B  3A80               	xorlw	128
  2417  014C  00B8               	movwf	??_dtoa
  2418  014D  3080               	movlw	128
  2419  014E  0238               	subwf	??_dtoa,w
  2420  014F  1D03               	skipz
  2421  0150  2953               	goto	u1155
  2422  0151  3001               	movlw	1
  2423  0152  024C               	subwf	dtoa@i,w
  2424  0153                     u1155:
  2425  0153  1803               	btfsc	3,0
  2426  0154  28BE               	goto	l1302
  2427  0155                     l1310:
  2428                           
  2429                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  2430  0155  0020               	movlb	0	; select bank0
  2431  0156  0842               	movf	dtoa@s,w
  2432  0157  0443               	iorwf	dtoa@s+1,w
  2433  0158  1D03               	btfss	3,2
  2434  0159  295C               	goto	l1314
  2435  015A  1D6D               	btfss	_flags,2
  2436  015B  2972               	goto	l1324
  2437  015C                     l1314:
  2438                           
  2439                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  2440  015C  30FF               	movlw	255
  2441  015D  07CC               	addwf	dtoa@i,f
  2442  015E  30FF               	movlw	255
  2443  015F  3DCD               	addwfc	dtoa@i+1,f
  2444                           
  2445                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  2446  0160  0842               	movf	dtoa@s,w
  2447  0161  0443               	iorwf	dtoa@s+1,w
  2448  0162  1D03               	btfss	3,2
  2449  0163  2966               	goto	l1320
  2450  0164  302B               	movlw	43
  2451  0165  2967               	goto	L1
  2452  0166                     l1320:
  2453  0166  302D               	movlw	45
  2454  0167                     L1:
  2455  0167  00BB               	movwf	_dtoa$1003
  2456  0168  3000               	movlw	0
  2457  0169  00BC               	movwf	_dtoa$1003+1
  2458  016A  083B               	movf	_dtoa$1003,w
  2459  016B  00B8               	movwf	??_dtoa
  2460  016C  084C               	movf	dtoa@i,w
  2461  016D  3EAA               	addlw	(low (_dbuf| 0))& (0+255)
  2462  016E  0086               	movwf	6
  2463  016F  0187               	clrf	7
  2464  0170  0838               	movf	??_dtoa,w
  2465  0171  0081               	movwf	1
  2466  0172                     l1324:
  2467                           
  2468                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  2469  0172  084C               	movf	dtoa@i,w
  2470  0173  3EAA               	addlw	(low (_dbuf| 0))& (0+255)
  2471  0174  00B8               	movwf	??_dtoa
  2472  0175  0838               	movf	??_dtoa,w
  2473  0176  00A7               	movwf	pad@buf
  2474  0177  0841               	movf	dtoa@w+1,w
  2475  0178  00A9               	movwf	pad@p+1
  2476  0179  0840               	movf	dtoa@w,w
  2477  017A  00A8               	movwf	pad@p
  2478  017B  083F               	movf	dtoa@fp,w
  2479  017C  3185  2559         	fcall	_pad
  2480  017E  0828               	movf	?_pad+1,w
  2481  017F  00B1               	movwf	?_dtoa+1
  2482  0180  0827               	movf	?_pad,w
  2483  0181  00B0               	movwf	?_dtoa
  2484  0182  0008               	return
  2485  0183                     __end_of_dtoa:
  2486                           
  2487                           	psect	text8
  2488  0559                     __ptext8:	
  2489 ;; *************** function _pad *****************
  2490 ;; Defined at:
  2491 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2492 ;; Parameters:    Size  Location     Type
  2493 ;;  fp              1    wreg     PTR struct _IO_FILE
  2494 ;;		 -> NULL(0), 
  2495 ;;  buf             1    7[BANK0 ] PTR unsigned char 
  2496 ;;		 -> dbuf(32), 
  2497 ;;  p               2    8[BANK0 ] int 
  2498 ;; Auto vars:     Size  Location     Type
  2499 ;;  fp              1   14[BANK0 ] PTR struct _IO_FILE
  2500 ;;		 -> NULL(0), 
  2501 ;;  w               2   12[BANK0 ] int 
  2502 ;;  i               2   10[BANK0 ] int 
  2503 ;; Return value:  Size  Location     Type
  2504 ;;                  2    7[BANK0 ] int 
  2505 ;; Registers used:
  2506 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2507 ;; Tracked objects:
  2508 ;;		On entry : 1F/0
  2509 ;;		On exit  : 1F/0
  2510 ;;		Unchanged: 0/0
  2511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2512 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2513 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2514 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2515 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2516 ;;Total ram usage:        9 bytes
  2517 ;; Hardware stack levels used: 1
  2518 ;; Hardware stack levels required when called: 4
  2519 ;; This function calls:
  2520 ;;		_fputc
  2521 ;;		_fputs
  2522 ;;		_strlen
  2523 ;; This function is called by:
  2524 ;;		_dtoa
  2525 ;; This function uses a non-reentrant model
  2526 ;;
  2527                           
  2528                           
  2529                           ;psect for function _pad
  2530  0559                     _pad:
  2531                           
  2532                           ;incstack = 0
  2533                           ; Regs used in _pad: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2534                           ;pad@fp stored from wreg
  2535  0559  00AE               	movwf	pad@fp
  2536                           
  2537                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  2538  055A  1C6D               	btfss	_flags,0
  2539  055B  2D64               	goto	l1250
  2540                           
  2541                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  2542  055C  082E               	movf	pad@fp,w
  2543  055D  00FB               	movwf	??_pad
  2544  055E  087B               	movf	??_pad,w
  2545  055F  00FA               	movwf	fputs@fp
  2546  0560  0827               	movf	pad@buf,w
  2547  0561  3186  2648  3185   	fcall	_fputs
  2548  0564                     l1250:
  2549                           
  2550                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  2551  0564  1BA9               	btfsc	pad@p+1,7
  2552  0565  2D6B               	goto	l1254
  2553  0566  0829               	movf	pad@p+1,w
  2554  0567  00AD               	movwf	pad@w+1
  2555  0568  0828               	movf	pad@p,w
  2556  0569  00AC               	movwf	pad@w
  2557  056A  2D6D               	goto	l666
  2558  056B                     l1254:
  2559  056B  01AC               	clrf	pad@w
  2560  056C  01AD               	clrf	pad@w+1
  2561  056D                     l666:
  2562                           
  2563                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  2564  056D  01AA               	clrf	pad@i
  2565  056E  01AB               	clrf	pad@i+1
  2566  056F                     l1260:	
  2567                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2568                           
  2569                           
  2570                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2571  056F  082B               	movf	pad@i+1,w
  2572  0570  3A80               	xorlw	128
  2573  0571  00FB               	movwf	??_pad
  2574  0572  082D               	movf	pad@w+1,w
  2575  0573  3A80               	xorlw	128
  2576  0574  027B               	subwf	??_pad,w
  2577  0575  1D03               	skipz
  2578  0576  2D79               	goto	u1045
  2579  0577  082C               	movf	pad@w,w
  2580  0578  022A               	subwf	pad@i,w
  2581  0579                     u1045:
  2582  0579  1803               	btfsc	3,0
  2583  057A  2D8D               	goto	l669
  2584                           
  2585                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  2586  057B  3020               	movlw	32
  2587  057C  00F2               	movwf	fputc@c
  2588  057D  3000               	movlw	0
  2589  057E  00F3               	movwf	fputc@c+1
  2590  057F  0020               	movlb	0	; select bank0
  2591  0580  082E               	movf	pad@fp,w
  2592  0581  00FB               	movwf	??_pad
  2593  0582  087B               	movf	??_pad,w
  2594  0583  00F4               	movwf	fputc@fp
  2595  0584  3185  25E6  3185   	fcall	_fputc
  2596                           
  2597                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  2598  0587  3001               	movlw	1
  2599  0588  0020               	movlb	0	; select bank0
  2600  0589  07AA               	addwf	pad@i,f
  2601  058A  3000               	movlw	0
  2602  058B  3DAB               	addwfc	pad@i+1,f
  2603  058C  2D6F               	goto	l1260
  2604  058D                     l669:
  2605                           
  2606                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  2607  058D  0020               	movlb	0	; select bank0
  2608  058E  186D               	btfsc	_flags,0
  2609  058F  2D98               	goto	l670
  2610                           
  2611                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  2612  0590  082E               	movf	pad@fp,w
  2613  0591  00FB               	movwf	??_pad
  2614  0592  087B               	movf	??_pad,w
  2615  0593  00FA               	movwf	fputs@fp
  2616  0594  0827               	movf	pad@buf,w
  2617  0595  3186  2648  3185   	fcall	_fputs
  2618  0598                     l670:	
  2619                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 92:     }
  2620                           
  2621                           
  2622                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  2623  0598  0827               	movf	pad@buf,w
  2624  0599  3186  268A         	fcall	_strlen
  2625  059B  082C               	movf	pad@w,w
  2626  059C  0771               	addwf	?_strlen,w
  2627  059D  00A7               	movwf	?_pad
  2628  059E  082D               	movf	pad@w+1,w
  2629  059F  3D72               	addwfc	?_strlen+1,w
  2630  05A0  00A8               	movwf	?_pad+1
  2631  05A1  0008               	return
  2632  05A2                     __end_of_pad:
  2633                           
  2634                           	psect	text9
  2635  068A                     __ptext9:	
  2636 ;; *************** function _strlen *****************
  2637 ;; Defined at:
  2638 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  2639 ;; Parameters:    Size  Location     Type
  2640 ;;  s               1    wreg     PTR const unsigned char 
  2641 ;;		 -> dbuf(32), 
  2642 ;; Auto vars:     Size  Location     Type
  2643 ;;  s               1    5[COMMON] PTR const unsigned char 
  2644 ;;		 -> dbuf(32), 
  2645 ;;  a               1    4[COMMON] PTR const unsigned char 
  2646 ;;		 -> dbuf(32), 
  2647 ;; Return value:  Size  Location     Type
  2648 ;;                  2    1[COMMON] unsigned int 
  2649 ;; Registers used:
  2650 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2651 ;; Tracked objects:
  2652 ;;		On entry : 1F/0
  2653 ;;		On exit  : 1F/0
  2654 ;;		Unchanged: 1F/0
  2655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2656 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2657 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2658 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2659 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2660 ;;Total ram usage:        5 bytes
  2661 ;; Hardware stack levels used: 1
  2662 ;; Hardware stack levels required when called: 1
  2663 ;; This function calls:
  2664 ;;		Nothing
  2665 ;; This function is called by:
  2666 ;;		_pad
  2667 ;; This function uses a non-reentrant model
  2668 ;;
  2669                           
  2670                           
  2671                           ;psect for function _strlen
  2672  068A                     _strlen:
  2673                           
  2674                           ;incstack = 0
  2675                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  2676                           ;strlen@s stored from wreg
  2677  068A  00F5               	movwf	strlen@s
  2678  068B  0875               	movf	strlen@s,w
  2679  068C  00F3               	movwf	??_strlen
  2680  068D  0873               	movf	??_strlen,w
  2681  068E  00F4               	movwf	strlen@a
  2682  068F                     l1172:
  2683  068F  0875               	movf	strlen@s,w
  2684  0690  0086               	movwf	6
  2685  0691  0187               	clrf	7
  2686  0692  0801               	movf	1,w
  2687  0693  1903               	btfsc	3,2
  2688  0694  2E9A               	goto	l1174
  2689  0695  3001               	movlw	1
  2690  0696  00F3               	movwf	??_strlen
  2691  0697  0873               	movf	??_strlen,w
  2692  0698  07F5               	addwf	strlen@s,f
  2693  0699  2E8F               	goto	l1172
  2694  069A                     l1174:
  2695  069A  0874               	movf	strlen@a,w
  2696  069B  0275               	subwf	strlen@s,w
  2697  069C  00F1               	movwf	?_strlen
  2698  069D  01F2               	clrf	?_strlen+1
  2699  069E  1BF1               	btfsc	?_strlen,7
  2700  069F  03F2               	decf	?_strlen+1,f
  2701  06A0  0008               	return
  2702  06A1                     __end_of_strlen:
  2703                           
  2704                           	psect	text10
  2705  0648                     __ptext10:	
  2706 ;; *************** function _fputs *****************
  2707 ;; Defined at:
  2708 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  2709 ;; Parameters:    Size  Location     Type
  2710 ;;  s               1    wreg     PTR const unsigned char 
  2711 ;;		 -> dbuf(32), 
  2712 ;;  fp              1   10[COMMON] PTR struct _IO_FILE
  2713 ;;		 -> NULL(0), 
  2714 ;; Auto vars:     Size  Location     Type
  2715 ;;  s               1    6[BANK0 ] PTR const unsigned char 
  2716 ;;		 -> dbuf(32), 
  2717 ;;  i               2    4[BANK0 ] int 
  2718 ;;  c               1    3[BANK0 ] unsigned char 
  2719 ;; Return value:  Size  Location     Type
  2720 ;;                  2   10[COMMON] int 
  2721 ;; Registers used:
  2722 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2723 ;; Tracked objects:
  2724 ;;		On entry : 1F/0
  2725 ;;		On exit  : 1F/0
  2726 ;;		Unchanged: 0/0
  2727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2728 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2729 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2730 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2731 ;;      Totals:         1       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2732 ;;Total ram usage:        8 bytes
  2733 ;; Hardware stack levels used: 1
  2734 ;; Hardware stack levels required when called: 3
  2735 ;; This function calls:
  2736 ;;		_fputc
  2737 ;; This function is called by:
  2738 ;;		_pad
  2739 ;; This function uses a non-reentrant model
  2740 ;;
  2741                           
  2742                           
  2743                           ;psect for function _fputs
  2744  0648                     _fputs:
  2745                           
  2746                           ;incstack = 0
  2747                           ; Regs used in _fputs: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2748                           ;fputs@s stored from wreg
  2749  0648  00A6               	movwf	fputs@s
  2750  0649  01A4               	clrf	fputs@i
  2751  064A  01A5               	clrf	fputs@i+1
  2752  064B                     l1166:
  2753  064B  0824               	movf	fputs@i,w
  2754  064C  0726               	addwf	fputs@s,w
  2755  064D  00A0               	movwf	??_fputs
  2756  064E  0820               	movf	??_fputs,w
  2757  064F  0086               	movwf	6
  2758  0650  0187               	clrf	7
  2759  0651  0801               	movf	1,w
  2760  0652  00A1               	movwf	??_fputs+1
  2761  0653  0821               	movf	??_fputs+1,w
  2762  0654  00A3               	movwf	fputs@c
  2763  0655  0823               	movf	fputs@c,w
  2764  0656  1903               	btfsc	3,2
  2765  0657  0008               	return
  2766  0658  0823               	movf	fputs@c,w
  2767  0659  00A0               	movwf	??_fputs
  2768  065A  01A1               	clrf	??_fputs+1
  2769  065B  0820               	movf	??_fputs,w
  2770  065C  00F2               	movwf	fputc@c
  2771  065D  0821               	movf	??_fputs+1,w
  2772  065E  00F3               	movwf	fputc@c+1
  2773  065F  087A               	movf	fputs@fp,w
  2774  0660  00A2               	movwf	??_fputs+2
  2775  0661  0822               	movf	??_fputs+2,w
  2776  0662  00F4               	movwf	fputc@fp
  2777  0663  3185  25E6  3186   	fcall	_fputc
  2778  0666  3001               	movlw	1
  2779  0667  0020               	movlb	0	; select bank0
  2780  0668  07A4               	addwf	fputs@i,f
  2781  0669  3000               	movlw	0
  2782  066A  3DA5               	addwfc	fputs@i+1,f
  2783  066B  2E4B               	goto	l1166
  2784  066C                     __end_of_fputs:
  2785                           
  2786                           	psect	text11
  2787  05E6                     __ptext11:	
  2788 ;; *************** function _fputc *****************
  2789 ;; Defined at:
  2790 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  2791 ;; Parameters:    Size  Location     Type
  2792 ;;  c               2    2[COMMON] int 
  2793 ;;  fp              1    4[COMMON] PTR struct _IO_FILE
  2794 ;;		 -> NULL(0), 
  2795 ;; Auto vars:     Size  Location     Type
  2796 ;;		None
  2797 ;; Return value:  Size  Location     Type
  2798 ;;                  2    2[COMMON] int 
  2799 ;; Registers used:
  2800 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2801 ;; Tracked objects:
  2802 ;;		On entry : 1F/0
  2803 ;;		On exit  : 0/0
  2804 ;;		Unchanged: 0/0
  2805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2806 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2808 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2809 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2810 ;;Total ram usage:        8 bytes
  2811 ;; Hardware stack levels used: 1
  2812 ;; Hardware stack levels required when called: 2
  2813 ;; This function calls:
  2814 ;;		_putch
  2815 ;; This function is called by:
  2816 ;;		_pad
  2817 ;;		_vfpfcnvrt
  2818 ;;		_fputs
  2819 ;; This function uses a non-reentrant model
  2820 ;;
  2821                           
  2822                           
  2823                           ;psect for function _fputc
  2824  05E6                     _fputc:
  2825                           
  2826                           ;incstack = 0
  2827                           ; Regs used in _fputc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2828  05E6  0874               	movf	fputc@fp,w
  2829  05E7  1D03               	btfss	3,2
  2830  05E8  0874               	movf	fputc@fp,w
  2831  05E9  1D03               	btfss	3,2
  2832  05EA  2DEF               	goto	l1152
  2833  05EB  0872               	movf	fputc@c,w
  2834  05EC  3186  26D4         	fcall	_putch
  2835  05EE  0008               	return
  2836  05EF                     l1152:
  2837  05EF  0874               	movf	fputc@fp,w
  2838  05F0  3E03               	addlw	3
  2839  05F1  0086               	movwf	6
  2840  05F2  0187               	clrf	7
  2841  05F3  0016               	moviw fsr1++
  2842  05F4  0401               	iorwf	1,w
  2843  05F5  1903               	btfsc	3,2
  2844  05F6  2E12               	goto	l1156
  2845  05F7  0874               	movf	fputc@fp,w
  2846  05F8  3E03               	addlw	3
  2847  05F9  0086               	movwf	6
  2848  05FA  0187               	clrf	7
  2849  05FB  3F40               	moviw [0]fsr1
  2850  05FC  00F5               	movwf	??_fputc
  2851  05FD  3F41               	moviw [1]fsr1
  2852  05FE  00F6               	movwf	??_fputc+1
  2853  05FF  0A74               	incf	fputc@fp,w
  2854  0600  0086               	movwf	6
  2855  0601  0187               	clrf	7
  2856  0602  3F40               	moviw [0]fsr1
  2857  0603  00F7               	movwf	??_fputc+2
  2858  0604  3F41               	moviw [1]fsr1
  2859  0605  00F8               	movwf	??_fputc+3
  2860  0606  0878               	movf	??_fputc+3,w
  2861  0607  3A80               	xorlw	128
  2862  0608  00F9               	movwf	??_fputc+4
  2863  0609  0876               	movf	??_fputc+1,w
  2864  060A  3A80               	xorlw	128
  2865  060B  0279               	subwf	??_fputc+4,w
  2866  060C  1D03               	skipz
  2867  060D  2E10               	goto	u785
  2868  060E  0875               	movf	??_fputc,w
  2869  060F  0277               	subwf	??_fputc+2,w
  2870  0610                     u785:
  2871  0610  1803               	skipnc
  2872  0611  0008               	return
  2873  0612                     l1156:
  2874  0612  0A74               	incf	fputc@fp,w
  2875  0613  0086               	movwf	6
  2876  0614  0187               	clrf	7
  2877  0615  3001               	movlw	1
  2878  0616  0781               	addwf	1,f
  2879  0617  3141               	addfsr 1,1
  2880  0618  1803               	skipnc
  2881  0619  0A81               	incf	1,f
  2882  061A  0008               	return
  2883  061B                     __end_of_fputc:
  2884                           
  2885                           	psect	text12
  2886  06D4                     __ptext12:	
  2887 ;; *************** function _putch *****************
  2888 ;; Defined at:
  2889 ;;		line 137 in file "smt_main.c"
  2890 ;; Parameters:    Size  Location     Type
  2891 ;;  c               1    wreg     unsigned char 
  2892 ;; Auto vars:     Size  Location     Type
  2893 ;;  c               1    1[COMMON] unsigned char 
  2894 ;; Return value:  Size  Location     Type
  2895 ;;                  1    wreg      void 
  2896 ;; Registers used:
  2897 ;;		wreg
  2898 ;; Tracked objects:
  2899 ;;		On entry : 1F/0
  2900 ;;		On exit  : 1F/3
  2901 ;;		Unchanged: 0/0
  2902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2903 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2904 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2906 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2907 ;;Total ram usage:        1 bytes
  2908 ;; Hardware stack levels used: 1
  2909 ;; Hardware stack levels required when called: 1
  2910 ;; This function calls:
  2911 ;;		Nothing
  2912 ;; This function is called by:
  2913 ;;		_fputc
  2914 ;; This function uses a non-reentrant model
  2915 ;;
  2916                           
  2917                           
  2918                           ;psect for function _putch
  2919  06D4                     _putch:
  2920                           
  2921                           ;incstack = 0
  2922                           ; Regs used in _putch: [wreg]
  2923                           ;putch@c stored from wreg
  2924  06D4  00F1               	movwf	putch@c
  2925                           
  2926                           ;smt_main.c: 137: void putch(char c);smt_main.c: 138: {;smt_main.c: 139:        TX1REG =
      +                           c;
  2927  06D5  0871               	movf	putch@c,w
  2928  06D6  0023               	movlb	3	; select bank3
  2929  06D7  009A               	movwf	26	;volatile
  2930  06D8                     l103:	
  2931                           ;smt_main.c: 140:        while(TX1STAbits.TRMT != 1);
  2932                           
  2933  06D8  189E               	btfsc	30,1	;volatile
  2934  06D9  0008               	return
  2935  06DA  2ED8               	goto	l103
  2936  06DB                     __end_of_putch:
  2937                           
  2938                           	psect	text13
  2939  06A1                     __ptext13:	
  2940 ;; *************** function _abs *****************
  2941 ;; Defined at:
  2942 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
  2943 ;; Parameters:    Size  Location     Type
  2944 ;;  a               2    4[COMMON] int 
  2945 ;; Auto vars:     Size  Location     Type
  2946 ;;		None
  2947 ;; Return value:  Size  Location     Type
  2948 ;;                  2    4[COMMON] int 
  2949 ;; Registers used:
  2950 ;;		wreg, status,2, status,0
  2951 ;; Tracked objects:
  2952 ;;		On entry : 1F/0
  2953 ;;		On exit  : 0/0
  2954 ;;		Unchanged: 0/0
  2955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2956 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2958 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2959 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2960 ;;Total ram usage:        4 bytes
  2961 ;; Hardware stack levels used: 1
  2962 ;; Hardware stack levels required when called: 1
  2963 ;; This function calls:
  2964 ;;		Nothing
  2965 ;; This function is called by:
  2966 ;;		_dtoa
  2967 ;; This function uses a non-reentrant model
  2968 ;;
  2969                           
  2970                           
  2971                           ;psect for function _abs
  2972  06A1                     _abs:
  2973                           
  2974                           ;incstack = 0
  2975                           ; Regs used in _abs: [wreg+status,2+status,0]
  2976  06A1  0875               	movf	abs@a+1,w
  2977  06A2  3A80               	xorlw	128
  2978  06A3  00F6               	movwf	??_abs
  2979  06A4  3080               	movlw	128
  2980  06A5  0276               	subwf	??_abs,w
  2981  06A6  1D03               	skipz
  2982  06A7  2EAA               	goto	u1065
  2983  06A8  3001               	movlw	1
  2984  06A9  0274               	subwf	abs@a,w
  2985  06AA                     u1065:
  2986  06AA  1803               	skipnc
  2987  06AB  0008               	return
  2988  06AC  0974               	comf	abs@a,w
  2989  06AD  00F6               	movwf	??_abs
  2990  06AE  0975               	comf	abs@a+1,w
  2991  06AF  00F7               	movwf	??_abs+1
  2992  06B0  0AF6               	incf	??_abs,f
  2993  06B1  1903               	skipnz
  2994  06B2  0AF7               	incf	??_abs+1,f
  2995  06B3  0876               	movf	??_abs,w
  2996  06B4  00F4               	movwf	?_abs
  2997  06B5  0877               	movf	??_abs+1,w
  2998  06B6  00F5               	movwf	?_abs+1
  2999  06B7  0008               	return
  3000  06B8                     __end_of_abs:
  3001                           
  3002                           	psect	text14
  3003  03B1                     __ptext14:	
  3004 ;; *************** function ___aomod *****************
  3005 ;; Defined at:
  3006 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
  3007 ;; Parameters:    Size  Location     Type
  3008 ;;  divisor         8    0[BANK0 ] long long 
  3009 ;;  dividend        8    8[BANK0 ] long long 
  3010 ;; Auto vars:     Size  Location     Type
  3011 ;;  sign            1    3[COMMON] unsigned char 
  3012 ;;  counter         1    2[COMMON] unsigned char 
  3013 ;; Return value:  Size  Location     Type
  3014 ;;                  8    0[BANK0 ] long long 
  3015 ;; Registers used:
  3016 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3017 ;; Tracked objects:
  3018 ;;		On entry : 1F/0
  3019 ;;		On exit  : 1F/0
  3020 ;;		Unchanged: 0/0
  3021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3022 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3023 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3024 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3025 ;;      Totals:         3      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3026 ;;Total ram usage:       19 bytes
  3027 ;; Hardware stack levels used: 1
  3028 ;; Hardware stack levels required when called: 1
  3029 ;; This function calls:
  3030 ;;		Nothing
  3031 ;; This function is called by:
  3032 ;;		_dtoa
  3033 ;; This function uses a non-reentrant model
  3034 ;;
  3035                           
  3036                           
  3037                           ;psect for function ___aomod
  3038  03B1                     ___aomod:
  3039                           
  3040                           ;incstack = 0
  3041                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  3042  03B1  01F3               	clrf	___aomod@sign
  3043  03B2  3028               	movlw	low ___aomod@dividend
  3044  03B3  0086               	movwf	6
  3045  03B4  3000               	movlw	high ___aomod@dividend
  3046  03B5  0087               	movwf	7
  3047  03B6  3F47               	moviw [7]fsr1
  3048  03B7  00F1               	movwf	??___aomod
  3049  03B8  1FF1               	btfss	??___aomod,7
  3050  03B9  2BDB               	goto	l1222
  3051  03BA  0020               	movlb	0	; select bank0
  3052  03BB  09A8               	comf	___aomod@dividend,f
  3053  03BC  09A9               	comf	___aomod@dividend+1,f
  3054  03BD  09AA               	comf	___aomod@dividend+2,f
  3055  03BE  09AB               	comf	___aomod@dividend+3,f
  3056  03BF  09AC               	comf	___aomod@dividend+4,f
  3057  03C0  09AD               	comf	___aomod@dividend+5,f
  3058  03C1  09AE               	comf	___aomod@dividend+6,f
  3059  03C2  09AF               	comf	___aomod@dividend+7,f
  3060  03C3  0AA8               	incf	___aomod@dividend,f
  3061  03C4  1D03               	skipz
  3062  03C5  2BD9               	goto	u93lld
  3063  03C6  0AA9               	incf	___aomod@dividend+1,f
  3064  03C7  1D03               	skipz
  3065  03C8  2BD9               	goto	u93lld
  3066  03C9  0AAA               	incf	___aomod@dividend+2,f
  3067  03CA  1D03               	skipz
  3068  03CB  2BD9               	goto	u93lld
  3069  03CC  0AAB               	incf	___aomod@dividend+3,f
  3070  03CD  1D03               	skipz
  3071  03CE  2BD9               	goto	u93lld
  3072  03CF  0AAC               	incf	___aomod@dividend+4,f
  3073  03D0  1D03               	skipz
  3074  03D1  2BD9               	goto	u93lld
  3075  03D2  0AAD               	incf	___aomod@dividend+5,f
  3076  03D3  1D03               	skipz
  3077  03D4  2BD9               	goto	u93lld
  3078  03D5  0AAE               	incf	___aomod@dividend+6,f
  3079  03D6  1D03               	skipz
  3080  03D7  2BD9               	goto	u93lld
  3081  03D8  0AAF               	incf	___aomod@dividend+7,f
  3082  03D9                     u93lld:
  3083  03D9  01F3               	clrf	___aomod@sign
  3084  03DA  0AF3               	incf	___aomod@sign,f
  3085  03DB                     l1222:
  3086  03DB  3020               	movlw	low ___aomod@divisor
  3087  03DC  0086               	movwf	6
  3088  03DD  3000               	movlw	high ___aomod@divisor
  3089  03DE  0087               	movwf	7
  3090  03DF  3F47               	moviw [7]fsr1
  3091  03E0  00F1               	movwf	??___aomod
  3092  03E1  1FF1               	btfss	??___aomod,7
  3093  03E2  2C02               	goto	l1226
  3094  03E3  0020               	movlb	0	; select bank0
  3095  03E4  09A0               	comf	___aomod@divisor,f
  3096  03E5  09A1               	comf	___aomod@divisor+1,f
  3097  03E6  09A2               	comf	___aomod@divisor+2,f
  3098  03E7  09A3               	comf	___aomod@divisor+3,f
  3099  03E8  09A4               	comf	___aomod@divisor+4,f
  3100  03E9  09A5               	comf	___aomod@divisor+5,f
  3101  03EA  09A6               	comf	___aomod@divisor+6,f
  3102  03EB  09A7               	comf	___aomod@divisor+7,f
  3103  03EC  0AA0               	incf	___aomod@divisor,f
  3104  03ED  1D03               	skipz
  3105  03EE  2C02               	goto	l1226
  3106  03EF  0AA1               	incf	___aomod@divisor+1,f
  3107  03F0  1D03               	skipz
  3108  03F1  2C02               	goto	l1226
  3109  03F2  0AA2               	incf	___aomod@divisor+2,f
  3110  03F3  1D03               	skipz
  3111  03F4  2C02               	goto	l1226
  3112  03F5  0AA3               	incf	___aomod@divisor+3,f
  3113  03F6  1D03               	skipz
  3114  03F7  2C02               	goto	l1226
  3115  03F8  0AA4               	incf	___aomod@divisor+4,f
  3116  03F9  1D03               	skipz
  3117  03FA  2C02               	goto	l1226
  3118  03FB  0AA5               	incf	___aomod@divisor+5,f
  3119  03FC  1D03               	skipz
  3120  03FD  2C02               	goto	l1226
  3121  03FE  0AA6               	incf	___aomod@divisor+6,f
  3122  03FF  1D03               	skipz
  3123  0400  2C02               	goto	l1226
  3124  0401  0AA7               	incf	___aomod@divisor+7,f
  3125  0402                     l1226:
  3126  0402  0020               	movlb	0	; select bank0
  3127  0403  0820               	movf	___aomod@divisor,w
  3128  0404  0421               	iorwf	___aomod@divisor+1,w
  3129  0405  0422               	iorwf	___aomod@divisor+2,w
  3130  0406  0423               	iorwf	___aomod@divisor+3,w
  3131  0407  0424               	iorwf	___aomod@divisor+4,w
  3132  0408  0425               	iorwf	___aomod@divisor+5,w
  3133  0409  0426               	iorwf	___aomod@divisor+6,w
  3134  040A  0427               	iorwf	___aomod@divisor+7,w
  3135  040B  1903               	skipnz
  3136  040C  2C5A               	goto	l1242
  3137  040D  01F2               	clrf	___aomod@counter
  3138  040E  0AF2               	incf	___aomod@counter,f
  3139  040F                     l1234:
  3140  040F  1BA7               	btfsc	___aomod@divisor+7,7
  3141  0410  2C1E               	goto	l1236
  3142  0411  35A0               	lslf	___aomod@divisor,f
  3143  0412  0DA1               	rlf	___aomod@divisor+1,f
  3144  0413  0DA2               	rlf	___aomod@divisor+2,f
  3145  0414  0DA3               	rlf	___aomod@divisor+3,f
  3146  0415  0DA4               	rlf	___aomod@divisor+4,f
  3147  0416  0DA5               	rlf	___aomod@divisor+5,f
  3148  0417  0DA6               	rlf	___aomod@divisor+6,f
  3149  0418  0DA7               	rlf	___aomod@divisor+7,f
  3150  0419  3001               	movlw	1
  3151  041A  00F1               	movwf	??___aomod
  3152  041B  0871               	movf	??___aomod,w
  3153  041C  07F2               	addwf	___aomod@counter,f
  3154  041D  2C0F               	goto	l1234
  3155  041E                     l1236:
  3156  041E  0827               	movf	___aomod@divisor+7,w
  3157  041F  022F               	subwf	___aomod@dividend+7,w
  3158  0420  1D03               	skipz
  3159  0421  2C3C               	goto	u985
  3160  0422  0826               	movf	___aomod@divisor+6,w
  3161  0423  022E               	subwf	___aomod@dividend+6,w
  3162  0424  1D03               	skipz
  3163  0425  2C3C               	goto	u985
  3164  0426  0825               	movf	___aomod@divisor+5,w
  3165  0427  022D               	subwf	___aomod@dividend+5,w
  3166  0428  1D03               	skipz
  3167  0429  2C3C               	goto	u985
  3168  042A  0824               	movf	___aomod@divisor+4,w
  3169  042B  022C               	subwf	___aomod@dividend+4,w
  3170  042C  1D03               	skipz
  3171  042D  2C3C               	goto	u985
  3172  042E  0823               	movf	___aomod@divisor+3,w
  3173  042F  022B               	subwf	___aomod@dividend+3,w
  3174  0430  1D03               	skipz
  3175  0431  2C3C               	goto	u985
  3176  0432  0822               	movf	___aomod@divisor+2,w
  3177  0433  022A               	subwf	___aomod@dividend+2,w
  3178  0434  1D03               	skipz
  3179  0435  2C3C               	goto	u985
  3180  0436  0821               	movf	___aomod@divisor+1,w
  3181  0437  0229               	subwf	___aomod@dividend+1,w
  3182  0438  1D03               	skipz
  3183  0439  2C3C               	goto	u985
  3184  043A  0820               	movf	___aomod@divisor,w
  3185  043B  0228               	subwf	___aomod@dividend,w
  3186  043C                     u985:
  3187  043C  1C03               	skipc
  3188  043D  2C4E               	goto	l1240
  3189  043E  0820               	movf	___aomod@divisor,w
  3190  043F  02A8               	subwf	___aomod@dividend,f
  3191  0440  0821               	movf	___aomod@divisor+1,w
  3192  0441  3BA9               	subwfb	___aomod@dividend+1,f
  3193  0442  0822               	movf	___aomod@divisor+2,w
  3194  0443  3BAA               	subwfb	___aomod@dividend+2,f
  3195  0444  0823               	movf	___aomod@divisor+3,w
  3196  0445  3BAB               	subwfb	___aomod@dividend+3,f
  3197  0446  0824               	movf	___aomod@divisor+4,w
  3198  0447  3BAC               	subwfb	___aomod@dividend+4,f
  3199  0448  0825               	movf	___aomod@divisor+5,w
  3200  0449  3BAD               	subwfb	___aomod@dividend+5,f
  3201  044A  0826               	movf	___aomod@divisor+6,w
  3202  044B  3BAE               	subwfb	___aomod@dividend+6,f
  3203  044C  0827               	movf	___aomod@divisor+7,w
  3204  044D  3BAF               	subwfb	___aomod@dividend+7,f
  3205  044E                     l1240:
  3206  044E  36A7               	lsrf	___aomod@divisor+7,f
  3207  044F  0CA6               	rrf	___aomod@divisor+6,f
  3208  0450  0CA5               	rrf	___aomod@divisor+5,f
  3209  0451  0CA4               	rrf	___aomod@divisor+4,f
  3210  0452  0CA3               	rrf	___aomod@divisor+3,f
  3211  0453  0CA2               	rrf	___aomod@divisor+2,f
  3212  0454  0CA1               	rrf	___aomod@divisor+1,f
  3213  0455  0CA0               	rrf	___aomod@divisor,f
  3214  0456  3001               	movlw	1
  3215  0457  02F2               	subwf	___aomod@counter,f
  3216  0458  1D03               	btfss	3,2
  3217  0459  2C1E               	goto	l1236
  3218  045A                     l1242:
  3219  045A  0873               	movf	___aomod@sign,w
  3220  045B  1903               	btfsc	3,2
  3221  045C  2C7B               	goto	l287
  3222  045D  09A8               	comf	___aomod@dividend,f
  3223  045E  09A9               	comf	___aomod@dividend+1,f
  3224  045F  09AA               	comf	___aomod@dividend+2,f
  3225  0460  09AB               	comf	___aomod@dividend+3,f
  3226  0461  09AC               	comf	___aomod@dividend+4,f
  3227  0462  09AD               	comf	___aomod@dividend+5,f
  3228  0463  09AE               	comf	___aomod@dividend+6,f
  3229  0464  09AF               	comf	___aomod@dividend+7,f
  3230  0465  0AA8               	incf	___aomod@dividend,f
  3231  0466  1D03               	skipz
  3232  0467  2C7B               	goto	l287
  3233  0468  0AA9               	incf	___aomod@dividend+1,f
  3234  0469  1D03               	skipz
  3235  046A  2C7B               	goto	l287
  3236  046B  0AAA               	incf	___aomod@dividend+2,f
  3237  046C  1D03               	skipz
  3238  046D  2C7B               	goto	l287
  3239  046E  0AAB               	incf	___aomod@dividend+3,f
  3240  046F  1D03               	skipz
  3241  0470  2C7B               	goto	l287
  3242  0471  0AAC               	incf	___aomod@dividend+4,f
  3243  0472  1D03               	skipz
  3244  0473  2C7B               	goto	l287
  3245  0474  0AAD               	incf	___aomod@dividend+5,f
  3246  0475  1D03               	skipz
  3247  0476  2C7B               	goto	l287
  3248  0477  0AAE               	incf	___aomod@dividend+6,f
  3249  0478  1D03               	skipz
  3250  0479  2C7B               	goto	l287
  3251  047A  0AAF               	incf	___aomod@dividend+7,f
  3252  047B                     l287:
  3253  047B  0020               	movlb	0	; select bank0
  3254  047C  0828               	movf	___aomod@dividend,w
  3255  047D  00A0               	movwf	?___aomod
  3256  047E  0829               	movf	___aomod@dividend+1,w
  3257  047F  00A1               	movwf	?___aomod+1
  3258  0480  082A               	movf	___aomod@dividend+2,w
  3259  0481  00A2               	movwf	?___aomod+2
  3260  0482  082B               	movf	___aomod@dividend+3,w
  3261  0483  00A3               	movwf	?___aomod+3
  3262  0484  082C               	movf	___aomod@dividend+4,w
  3263  0485  00A4               	movwf	?___aomod+4
  3264  0486  082D               	movf	___aomod@dividend+5,w
  3265  0487  00A5               	movwf	?___aomod+5
  3266  0488  082E               	movf	___aomod@dividend+6,w
  3267  0489  00A6               	movwf	?___aomod+6
  3268  048A  082F               	movf	___aomod@dividend+7,w
  3269  048B  00A7               	movwf	?___aomod+7
  3270  048C  0008               	return
  3271  048D                     __end_of___aomod:
  3272                           
  3273                           	psect	text15
  3274  02BE                     __ptext15:	
  3275 ;; *************** function ___aodiv *****************
  3276 ;; Defined at:
  3277 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
  3278 ;; Parameters:    Size  Location     Type
  3279 ;;  divisor         8    0[BANK0 ] long long 
  3280 ;;  dividend        8    8[BANK0 ] long long 
  3281 ;; Auto vars:     Size  Location     Type
  3282 ;;  quotient        8    4[COMMON] long long 
  3283 ;;  sign            1    3[COMMON] unsigned char 
  3284 ;;  counter         1    2[COMMON] unsigned char 
  3285 ;; Return value:  Size  Location     Type
  3286 ;;                  8    0[BANK0 ] long long 
  3287 ;; Registers used:
  3288 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3289 ;; Tracked objects:
  3290 ;;		On entry : 1F/0
  3291 ;;		On exit  : 1F/0
  3292 ;;		Unchanged: 0/0
  3293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3294 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3295 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3296 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3297 ;;      Totals:        11      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3298 ;;Total ram usage:       27 bytes
  3299 ;; Hardware stack levels used: 1
  3300 ;; Hardware stack levels required when called: 1
  3301 ;; This function calls:
  3302 ;;		Nothing
  3303 ;; This function is called by:
  3304 ;;		_dtoa
  3305 ;; This function uses a non-reentrant model
  3306 ;;
  3307                           
  3308                           
  3309                           ;psect for function ___aodiv
  3310  02BE                     ___aodiv:
  3311                           
  3312                           ;incstack = 0
  3313                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  3314  02BE  01F3               	clrf	___aodiv@sign
  3315  02BF  3020               	movlw	low ___aodiv@divisor
  3316  02C0  0086               	movwf	6
  3317  02C1  3000               	movlw	high ___aodiv@divisor
  3318  02C2  0087               	movwf	7
  3319  02C3  3F47               	moviw [7]fsr1
  3320  02C4  00F1               	movwf	??___aodiv
  3321  02C5  1FF1               	btfss	??___aodiv,7
  3322  02C6  2AE8               	goto	l1184
  3323  02C7  0020               	movlb	0	; select bank0
  3324  02C8  09A0               	comf	___aodiv@divisor,f
  3325  02C9  09A1               	comf	___aodiv@divisor+1,f
  3326  02CA  09A2               	comf	___aodiv@divisor+2,f
  3327  02CB  09A3               	comf	___aodiv@divisor+3,f
  3328  02CC  09A4               	comf	___aodiv@divisor+4,f
  3329  02CD  09A5               	comf	___aodiv@divisor+5,f
  3330  02CE  09A6               	comf	___aodiv@divisor+6,f
  3331  02CF  09A7               	comf	___aodiv@divisor+7,f
  3332  02D0  0AA0               	incf	___aodiv@divisor,f
  3333  02D1  1D03               	skipz
  3334  02D2  2AE6               	goto	u82lld
  3335  02D3  0AA1               	incf	___aodiv@divisor+1,f
  3336  02D4  1D03               	skipz
  3337  02D5  2AE6               	goto	u82lld
  3338  02D6  0AA2               	incf	___aodiv@divisor+2,f
  3339  02D7  1D03               	skipz
  3340  02D8  2AE6               	goto	u82lld
  3341  02D9  0AA3               	incf	___aodiv@divisor+3,f
  3342  02DA  1D03               	skipz
  3343  02DB  2AE6               	goto	u82lld
  3344  02DC  0AA4               	incf	___aodiv@divisor+4,f
  3345  02DD  1D03               	skipz
  3346  02DE  2AE6               	goto	u82lld
  3347  02DF  0AA5               	incf	___aodiv@divisor+5,f
  3348  02E0  1D03               	skipz
  3349  02E1  2AE6               	goto	u82lld
  3350  02E2  0AA6               	incf	___aodiv@divisor+6,f
  3351  02E3  1D03               	skipz
  3352  02E4  2AE6               	goto	u82lld
  3353  02E5  0AA7               	incf	___aodiv@divisor+7,f
  3354  02E6                     u82lld:
  3355  02E6  01F3               	clrf	___aodiv@sign
  3356  02E7  0AF3               	incf	___aodiv@sign,f
  3357  02E8                     l1184:
  3358  02E8  3028               	movlw	low ___aodiv@dividend
  3359  02E9  0086               	movwf	6
  3360  02EA  3000               	movlw	high ___aodiv@dividend
  3361  02EB  0087               	movwf	7
  3362  02EC  3F47               	moviw [7]fsr1
  3363  02ED  00F1               	movwf	??___aodiv
  3364  02EE  1FF1               	btfss	??___aodiv,7
  3365  02EF  2B13               	goto	l1190
  3366  02F0  0020               	movlb	0	; select bank0
  3367  02F1  09A8               	comf	___aodiv@dividend,f
  3368  02F2  09A9               	comf	___aodiv@dividend+1,f
  3369  02F3  09AA               	comf	___aodiv@dividend+2,f
  3370  02F4  09AB               	comf	___aodiv@dividend+3,f
  3371  02F5  09AC               	comf	___aodiv@dividend+4,f
  3372  02F6  09AD               	comf	___aodiv@dividend+5,f
  3373  02F7  09AE               	comf	___aodiv@dividend+6,f
  3374  02F8  09AF               	comf	___aodiv@dividend+7,f
  3375  02F9  0AA8               	incf	___aodiv@dividend,f
  3376  02FA  1D03               	skipz
  3377  02FB  2B0F               	goto	l1188
  3378  02FC  0AA9               	incf	___aodiv@dividend+1,f
  3379  02FD  1D03               	skipz
  3380  02FE  2B0F               	goto	l1188
  3381  02FF  0AAA               	incf	___aodiv@dividend+2,f
  3382  0300  1D03               	skipz
  3383  0301  2B0F               	goto	l1188
  3384  0302  0AAB               	incf	___aodiv@dividend+3,f
  3385  0303  1D03               	skipz
  3386  0304  2B0F               	goto	l1188
  3387  0305  0AAC               	incf	___aodiv@dividend+4,f
  3388  0306  1D03               	skipz
  3389  0307  2B0F               	goto	l1188
  3390  0308  0AAD               	incf	___aodiv@dividend+5,f
  3391  0309  1D03               	skipz
  3392  030A  2B0F               	goto	l1188
  3393  030B  0AAE               	incf	___aodiv@dividend+6,f
  3394  030C  1D03               	skipz
  3395  030D  2B0F               	goto	l1188
  3396  030E  0AAF               	incf	___aodiv@dividend+7,f
  3397  030F                     l1188:
  3398  030F  3001               	movlw	1
  3399  0310  00F1               	movwf	??___aodiv
  3400  0311  0871               	movf	??___aodiv,w
  3401  0312  06F3               	xorwf	___aodiv@sign,f
  3402  0313                     l1190:
  3403  0313  3074               	movlw	low ___aodiv@quotient
  3404  0314  0086               	movwf	6
  3405  0315  3000               	movlw	high ___aodiv@quotient
  3406  0316  0087               	movwf	7
  3407  0317  3008               	movlw	8
  3408  0318  00F1               	movwf	??___aodiv
  3409  0319  3000               	movlw	0
  3410  031A                     u850:
  3411  031A  001E               	movwi fsr1++
  3412  031B  0BF1               	decfsz	??___aodiv,f
  3413  031C  2B1A               	goto	u850
  3414  031D  0020               	movlb	0	; select bank0
  3415  031E  0820               	movf	___aodiv@divisor,w
  3416  031F  0421               	iorwf	___aodiv@divisor+1,w
  3417  0320  0422               	iorwf	___aodiv@divisor+2,w
  3418  0321  0423               	iorwf	___aodiv@divisor+3,w
  3419  0322  0424               	iorwf	___aodiv@divisor+4,w
  3420  0323  0425               	iorwf	___aodiv@divisor+5,w
  3421  0324  0426               	iorwf	___aodiv@divisor+6,w
  3422  0325  0427               	iorwf	___aodiv@divisor+7,w
  3423  0326  1903               	skipnz
  3424  0327  2B7E               	goto	l1212
  3425  0328  01F2               	clrf	___aodiv@counter
  3426  0329  0AF2               	incf	___aodiv@counter,f
  3427  032A                     l1200:
  3428  032A  1BA7               	btfsc	___aodiv@divisor+7,7
  3429  032B  2B39               	goto	l1202
  3430  032C  35A0               	lslf	___aodiv@divisor,f
  3431  032D  0DA1               	rlf	___aodiv@divisor+1,f
  3432  032E  0DA2               	rlf	___aodiv@divisor+2,f
  3433  032F  0DA3               	rlf	___aodiv@divisor+3,f
  3434  0330  0DA4               	rlf	___aodiv@divisor+4,f
  3435  0331  0DA5               	rlf	___aodiv@divisor+5,f
  3436  0332  0DA6               	rlf	___aodiv@divisor+6,f
  3437  0333  0DA7               	rlf	___aodiv@divisor+7,f
  3438  0334  3001               	movlw	1
  3439  0335  00F1               	movwf	??___aodiv
  3440  0336  0871               	movf	??___aodiv,w
  3441  0337  07F2               	addwf	___aodiv@counter,f
  3442  0338  2B2A               	goto	l1200
  3443  0339                     l1202:
  3444  0339  35F4               	lslf	___aodiv@quotient,f
  3445  033A  0DF5               	rlf	___aodiv@quotient+1,f
  3446  033B  0DF6               	rlf	___aodiv@quotient+2,f
  3447  033C  0DF7               	rlf	___aodiv@quotient+3,f
  3448  033D  0DF8               	rlf	___aodiv@quotient+4,f
  3449  033E  0DF9               	rlf	___aodiv@quotient+5,f
  3450  033F  0DFA               	rlf	___aodiv@quotient+6,f
  3451  0340  0DFB               	rlf	___aodiv@quotient+7,f
  3452  0341  0827               	movf	___aodiv@divisor+7,w
  3453  0342  022F               	subwf	___aodiv@dividend+7,w
  3454  0343  1D03               	skipz
  3455  0344  2B5F               	goto	u885
  3456  0345  0826               	movf	___aodiv@divisor+6,w
  3457  0346  022E               	subwf	___aodiv@dividend+6,w
  3458  0347  1D03               	skipz
  3459  0348  2B5F               	goto	u885
  3460  0349  0825               	movf	___aodiv@divisor+5,w
  3461  034A  022D               	subwf	___aodiv@dividend+5,w
  3462  034B  1D03               	skipz
  3463  034C  2B5F               	goto	u885
  3464  034D  0824               	movf	___aodiv@divisor+4,w
  3465  034E  022C               	subwf	___aodiv@dividend+4,w
  3466  034F  1D03               	skipz
  3467  0350  2B5F               	goto	u885
  3468  0351  0823               	movf	___aodiv@divisor+3,w
  3469  0352  022B               	subwf	___aodiv@dividend+3,w
  3470  0353  1D03               	skipz
  3471  0354  2B5F               	goto	u885
  3472  0355  0822               	movf	___aodiv@divisor+2,w
  3473  0356  022A               	subwf	___aodiv@dividend+2,w
  3474  0357  1D03               	skipz
  3475  0358  2B5F               	goto	u885
  3476  0359  0821               	movf	___aodiv@divisor+1,w
  3477  035A  0229               	subwf	___aodiv@dividend+1,w
  3478  035B  1D03               	skipz
  3479  035C  2B5F               	goto	u885
  3480  035D  0820               	movf	___aodiv@divisor,w
  3481  035E  0228               	subwf	___aodiv@dividend,w
  3482  035F                     u885:
  3483  035F  1C03               	skipc
  3484  0360  2B72               	goto	l1210
  3485  0361  0820               	movf	___aodiv@divisor,w
  3486  0362  02A8               	subwf	___aodiv@dividend,f
  3487  0363  0821               	movf	___aodiv@divisor+1,w
  3488  0364  3BA9               	subwfb	___aodiv@dividend+1,f
  3489  0365  0822               	movf	___aodiv@divisor+2,w
  3490  0366  3BAA               	subwfb	___aodiv@dividend+2,f
  3491  0367  0823               	movf	___aodiv@divisor+3,w
  3492  0368  3BAB               	subwfb	___aodiv@dividend+3,f
  3493  0369  0824               	movf	___aodiv@divisor+4,w
  3494  036A  3BAC               	subwfb	___aodiv@dividend+4,f
  3495  036B  0825               	movf	___aodiv@divisor+5,w
  3496  036C  3BAD               	subwfb	___aodiv@dividend+5,f
  3497  036D  0826               	movf	___aodiv@divisor+6,w
  3498  036E  3BAE               	subwfb	___aodiv@dividend+6,f
  3499  036F  0827               	movf	___aodiv@divisor+7,w
  3500  0370  3BAF               	subwfb	___aodiv@dividend+7,f
  3501  0371  1474               	bsf	___aodiv@quotient,0
  3502  0372                     l1210:
  3503  0372  36A7               	lsrf	___aodiv@divisor+7,f
  3504  0373  0CA6               	rrf	___aodiv@divisor+6,f
  3505  0374  0CA5               	rrf	___aodiv@divisor+5,f
  3506  0375  0CA4               	rrf	___aodiv@divisor+4,f
  3507  0376  0CA3               	rrf	___aodiv@divisor+3,f
  3508  0377  0CA2               	rrf	___aodiv@divisor+2,f
  3509  0378  0CA1               	rrf	___aodiv@divisor+1,f
  3510  0379  0CA0               	rrf	___aodiv@divisor,f
  3511  037A  3001               	movlw	1
  3512  037B  02F2               	subwf	___aodiv@counter,f
  3513  037C  1D03               	btfss	3,2
  3514  037D  2B39               	goto	l1202
  3515  037E                     l1212:
  3516  037E  0873               	movf	___aodiv@sign,w
  3517  037F  1903               	btfsc	3,2
  3518  0380  2B9F               	goto	l274
  3519  0381  09F4               	comf	___aodiv@quotient,f
  3520  0382  09F5               	comf	___aodiv@quotient+1,f
  3521  0383  09F6               	comf	___aodiv@quotient+2,f
  3522  0384  09F7               	comf	___aodiv@quotient+3,f
  3523  0385  09F8               	comf	___aodiv@quotient+4,f
  3524  0386  09F9               	comf	___aodiv@quotient+5,f
  3525  0387  09FA               	comf	___aodiv@quotient+6,f
  3526  0388  09FB               	comf	___aodiv@quotient+7,f
  3527  0389  0AF4               	incf	___aodiv@quotient,f
  3528  038A  1D03               	skipz
  3529  038B  2B9F               	goto	l274
  3530  038C  0AF5               	incf	___aodiv@quotient+1,f
  3531  038D  1D03               	skipz
  3532  038E  2B9F               	goto	l274
  3533  038F  0AF6               	incf	___aodiv@quotient+2,f
  3534  0390  1D03               	skipz
  3535  0391  2B9F               	goto	l274
  3536  0392  0AF7               	incf	___aodiv@quotient+3,f
  3537  0393  1D03               	skipz
  3538  0394  2B9F               	goto	l274
  3539  0395  0AF8               	incf	___aodiv@quotient+4,f
  3540  0396  1D03               	skipz
  3541  0397  2B9F               	goto	l274
  3542  0398  0AF9               	incf	___aodiv@quotient+5,f
  3543  0399  1D03               	skipz
  3544  039A  2B9F               	goto	l274
  3545  039B  0AFA               	incf	___aodiv@quotient+6,f
  3546  039C  1D03               	skipz
  3547  039D  2B9F               	goto	l274
  3548  039E  0AFB               	incf	___aodiv@quotient+7,f
  3549  039F                     l274:
  3550  039F  0874               	movf	___aodiv@quotient,w
  3551  03A0  0020               	movlb	0	; select bank0
  3552  03A1  00A0               	movwf	?___aodiv
  3553  03A2  0875               	movf	___aodiv@quotient+1,w
  3554  03A3  00A1               	movwf	?___aodiv+1
  3555  03A4  0876               	movf	___aodiv@quotient+2,w
  3556  03A5  00A2               	movwf	?___aodiv+2
  3557  03A6  0877               	movf	___aodiv@quotient+3,w
  3558  03A7  00A3               	movwf	?___aodiv+3
  3559  03A8  0878               	movf	___aodiv@quotient+4,w
  3560  03A9  00A4               	movwf	?___aodiv+4
  3561  03AA  0879               	movf	___aodiv@quotient+5,w
  3562  03AB  00A5               	movwf	?___aodiv+5
  3563  03AC  087A               	movf	___aodiv@quotient+6,w
  3564  03AD  00A6               	movwf	?___aodiv+6
  3565  03AE  087B               	movf	___aodiv@quotient+7,w
  3566  03AF  00A7               	movwf	?___aodiv+7
  3567  03B0  0008               	return
  3568  03B1                     __end_of___aodiv:
  3569                           
  3570                           	psect	text16
  3571  05A2                     __ptext16:	
  3572 ;; *************** function ___ltdiv *****************
  3573 ;; Defined at:
  3574 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\ltdiv.c"
  3575 ;; Parameters:    Size  Location     Type
  3576 ;;  divisor         3    1[COMMON] unsigned um
  3577 ;;  dividend        3    4[COMMON] unsigned um
  3578 ;; Auto vars:     Size  Location     Type
  3579 ;;  quotient        3    8[COMMON] unsigned um
  3580 ;;  counter         1   11[COMMON] unsigned char 
  3581 ;; Return value:  Size  Location     Type
  3582 ;;                  3    1[COMMON] unsigned um
  3583 ;; Registers used:
  3584 ;;		wreg, status,2, status,0
  3585 ;; Tracked objects:
  3586 ;;		On entry : 1F/1B
  3587 ;;		On exit  : 1F/1B
  3588 ;;		Unchanged: 1E/0
  3589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3590 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3591 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3592 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3593 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3594 ;;Total ram usage:       11 bytes
  3595 ;; Hardware stack levels used: 1
  3596 ;; Hardware stack levels required when called: 1
  3597 ;; This function calls:
  3598 ;;		Nothing
  3599 ;; This function is called by:
  3600 ;;		_main
  3601 ;; This function uses a non-reentrant model
  3602 ;;
  3603                           
  3604                           
  3605                           ;psect for function ___ltdiv
  3606  05A2                     ___ltdiv:
  3607                           
  3608                           ;incstack = 0
  3609                           ; Regs used in ___ltdiv: [wreg+status,2+status,0]
  3610  05A2  3000               	movlw	0
  3611  05A3  00F8               	movwf	___ltdiv@quotient
  3612  05A4  3000               	movlw	0
  3613  05A5  00F9               	movwf	___ltdiv@quotient+1
  3614  05A6  3000               	movlw	0
  3615  05A7  00FA               	movwf	___ltdiv@quotient+2
  3616  05A8  0873               	movf	___ltdiv@divisor+2,w
  3617  05A9  0472               	iorwf	___ltdiv@divisor+1,w
  3618  05AA  0471               	iorwf	___ltdiv@divisor,w
  3619  05AB  1903               	skipnz
  3620  05AC  2DDF               	goto	l1470
  3621  05AD  01FB               	clrf	___ltdiv@counter
  3622  05AE  0AFB               	incf	___ltdiv@counter,f
  3623  05AF                     l1456:
  3624  05AF  1BF3               	btfsc	___ltdiv@divisor+2,7
  3625  05B0  2DBC               	goto	l1458
  3626  05B1  3001               	movlw	1
  3627  05B2                     u1365:
  3628  05B2  35F1               	lslf	___ltdiv@divisor,f
  3629  05B3  0DF2               	rlf	___ltdiv@divisor+1,f
  3630  05B4  0DF3               	rlf	___ltdiv@divisor+2,f
  3631  05B5  0B89               	decfsz	9,f
  3632  05B6  2DB2               	goto	u1365
  3633  05B7  3001               	movlw	1
  3634  05B8  00F7               	movwf	??___ltdiv
  3635  05B9  0877               	movf	??___ltdiv,w
  3636  05BA  07FB               	addwf	___ltdiv@counter,f
  3637  05BB  2DAF               	goto	l1456
  3638  05BC                     l1458:
  3639  05BC  3001               	movlw	1
  3640  05BD                     u1385:
  3641  05BD  35F8               	lslf	___ltdiv@quotient,f
  3642  05BE  0DF9               	rlf	___ltdiv@quotient+1,f
  3643  05BF  0DFA               	rlf	___ltdiv@quotient+2,f
  3644  05C0  0B89               	decfsz	9,f
  3645  05C1  2DBD               	goto	u1385
  3646  05C2  0873               	movf	___ltdiv@divisor+2,w
  3647  05C3  0276               	subwf	___ltdiv@dividend+2,w
  3648  05C4  1D03               	skipz
  3649  05C5  2DCC               	goto	u1395
  3650  05C6  0872               	movf	___ltdiv@divisor+1,w
  3651  05C7  0275               	subwf	___ltdiv@dividend+1,w
  3652  05C8  1D03               	skipz
  3653  05C9  2DCC               	goto	u1395
  3654  05CA  0871               	movf	___ltdiv@divisor,w
  3655  05CB  0274               	subwf	___ltdiv@dividend,w
  3656  05CC                     u1395:
  3657  05CC  1C03               	skipc
  3658  05CD  2DD5               	goto	l1466
  3659  05CE  0871               	movf	___ltdiv@divisor,w
  3660  05CF  02F4               	subwf	___ltdiv@dividend,f
  3661  05D0  0872               	movf	___ltdiv@divisor+1,w
  3662  05D1  3BF5               	subwfb	___ltdiv@dividend+1,f
  3663  05D2  0873               	movf	___ltdiv@divisor+2,w
  3664  05D3  3BF6               	subwfb	___ltdiv@dividend+2,f
  3665  05D4  1478               	bsf	___ltdiv@quotient,0
  3666  05D5                     l1466:
  3667  05D5  3001               	movlw	1
  3668  05D6                     u1405:
  3669  05D6  36F3               	lsrf	___ltdiv@divisor+2,f
  3670  05D7  0CF2               	rrf	___ltdiv@divisor+1,f
  3671  05D8  0CF1               	rrf	___ltdiv@divisor,f
  3672  05D9  0B89               	decfsz	9,f
  3673  05DA  2DD6               	goto	u1405
  3674  05DB  3001               	movlw	1
  3675  05DC  02FB               	subwf	___ltdiv@counter,f
  3676  05DD  1D03               	btfss	3,2
  3677  05DE  2DBC               	goto	l1458
  3678  05DF                     l1470:
  3679  05DF  0878               	movf	___ltdiv@quotient,w
  3680  05E0  00F1               	movwf	?___ltdiv
  3681  05E1  0879               	movf	___ltdiv@quotient+1,w
  3682  05E2  00F2               	movwf	?___ltdiv+1
  3683  05E3  087A               	movf	___ltdiv@quotient+2,w
  3684  05E4  00F3               	movwf	?___ltdiv+2
  3685  05E5  0008               	return
  3686  05E6                     __end_of___ltdiv:
  3687                           
  3688                           	psect	intentry
  3689  0004                     __pintentry:	
  3690 ;; *************** function _myIsr *****************
  3691 ;; Defined at:
  3692 ;;		line 121 in file "smt_main.c"
  3693 ;; Parameters:    Size  Location     Type
  3694 ;;		None
  3695 ;; Auto vars:     Size  Location     Type
  3696 ;;		None
  3697 ;; Return value:  Size  Location     Type
  3698 ;;                  1    wreg      void 
  3699 ;; Registers used:
  3700 ;;		wreg, status,0
  3701 ;; Tracked objects:
  3702 ;;		On entry : 0/0
  3703 ;;		On exit  : 4/0
  3704 ;;		Unchanged: 0/0
  3705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3708 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3709 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3710 ;;Total ram usage:        1 bytes
  3711 ;; Hardware stack levels used: 1
  3712 ;; This function calls:
  3713 ;;		Nothing
  3714 ;; This function is called by:
  3715 ;;		Interrupt level 1
  3716 ;; This function uses a non-reentrant model
  3717 ;;
  3718                           
  3719  0004                     _myIsr:
  3720                           
  3721                           ;incstack = 0
  3722  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  3723                           
  3724                           ; Regs used in _myIsr: [wreg+status,0]
  3725  0005  3180               	pagesel	$
  3726                           
  3727                           ;smt_main.c: 123:     if(PIR4bits.SMT1PRAIF)
  3728  0006  0020               	movlb	0	; select bank0
  3729  0007  1C93               	btfss	19,1	;volatile
  3730  0008  281A               	goto	i1l1524
  3731                           
  3732                           ;smt_main.c: 124:     {;smt_main.c: 125:         dataAvailable = 1;
  3733  0009  3001               	movlw	1
  3734  000A  00F0               	movwf	??_myIsr
  3735  000B  0870               	movf	??_myIsr,w
  3736  000C  00EF               	movwf	_dataAvailable	;volatile
  3737                           
  3738                           ;smt_main.c: 126:         LATBbits.LATB7 = ~LATBbits.LATB7;
  3739  000D  1003               	clrc
  3740  000E  0022               	movlb	2	; select bank2
  3741  000F  1F8D               	btfss	13,7	;volatile
  3742  0010  1403               	setc
  3743  0011  1C03               	btfss	3,0
  3744  0012  2816               	goto	u144_20
  3745  0013  0022               	movlb	2	; select bank2
  3746  0014  178D               	bsf	13,7	;volatile
  3747  0015  2818               	goto	i1l1522
  3748  0016                     u144_20:
  3749  0016  0022               	movlb	2	; select bank2
  3750  0017  138D               	bcf	13,7	;volatile
  3751  0018                     i1l1522:
  3752                           
  3753                           ;smt_main.c: 127:         PIR4bits.SMT1PRAIF = 0;
  3754  0018  0020               	movlb	0	; select bank0
  3755  0019  1093               	bcf	19,1	;volatile
  3756  001A                     i1l1524:
  3757                           
  3758                           ;smt_main.c: 129:     if(PIR4bits.SMT2IF)
  3759  001A  1D93               	btfss	19,3	;volatile
  3760  001B  2829               	goto	i1l100
  3761                           
  3762                           ;smt_main.c: 130:     {;smt_main.c: 131:                 PIR4bits.SMT2IF = 0;
  3763  001C  1193               	bcf	19,3	;volatile
  3764                           
  3765                           ;smt_main.c: 132:         SMT2TMR = smt2Value;
  3766  001D  0021               	movlb	1	; select bank1
  3767  001E  0820               	movf	_smt2Value^(0+128),w	;volatile
  3768  001F  003B               	movlb	27	; select bank27
  3769  0020  009E               	movwf	30	;volatile
  3770  0021  0021               	movlb	1	; select bank1
  3771  0022  0821               	movf	(_smt2Value+1)^(0+128),w	;volatile
  3772  0023  003B               	movlb	27	; select bank27
  3773  0024  009F               	movwf	31	;volatile
  3774  0025  0021               	movlb	1	; select bank1
  3775  0026  0822               	movf	(_smt2Value+2)^(0+128),w	;volatile
  3776  0027  003B               	movlb	27	; select bank27
  3777  0028  00A0               	movwf	32	;volatile
  3778  0029                     i1l100:
  3779  0029  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  3780  002A  0009               	retfie
  3781  002B                     __end_of_myIsr:
  3782  007E                     btemp	set	126	;btemp
  3783  007E                     int$flags	set	126
  3784  007E                     wtemp0	set	126
  3785                           
  3786                           	psect	idloc
  3787                           
  3788                           ;Config register IDLOC0 @ 0x8000
  3789                           ;	unspecified, using default values
  3790  8000                     	org	32768
  3791  8000  3FFF               	dw	16383
  3792                           
  3793                           ;Config register IDLOC1 @ 0x8001
  3794                           ;	unspecified, using default values
  3795  8001                     	org	32769
  3796  8001  3FFF               	dw	16383
  3797                           
  3798                           ;Config register IDLOC2 @ 0x8002
  3799                           ;	unspecified, using default values
  3800  8002                     	org	32770
  3801  8002  3FFF               	dw	16383
  3802                           
  3803                           ;Config register IDLOC3 @ 0x8003
  3804                           ;	unspecified, using default values
  3805  8003                     	org	32771
  3806  8003  3FFF               	dw	16383
  3807                           
  3808                           	psect	config
  3809                           
  3810                           ;Config register CONFIG1 @ 0x8007
  3811                           ;	Oscillator Selection Bits
  3812                           ;	FOSC = HS, HS Oscillator, High-speed crystal/resonator connected between OSC1 and OSC2
      +                           pins
  3813                           ;	Power-up Timer Enable
  3814                           ;	PWRTE = OFF, PWRT disabled
  3815                           ;	MCLR Pin Function Select
  3816                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  3817                           ;	Flash Program Memory Code Protection
  3818                           ;	CP = OFF, Program memory code protection is disabled
  3819                           ;	Brown-out Reset Enable
  3820                           ;	BOREN = ON, Brown-out Reset enabled
  3821                           ;	Clock Out Enable
  3822                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  3823                           ;	Internal/External Switch Over
  3824                           ;	IESO = ON, Internal External Switch Over mode is enabled
  3825                           ;	Fail-Safe Clock Monitor Enable
  3826                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  3827  8007                     	org	32775
  3828  8007  3FFA               	dw	16378
  3829                           
  3830                           ;Config register CONFIG2 @ 0x8008
  3831                           ;	Flash Memory Self-Write Protection
  3832                           ;	WRT = OFF, Write protection off
  3833                           ;	Peripheral Pin Select one-way control
  3834                           ;	PPS1WAY = OFF, The PPSLOCK bit can be set and cleared repeatedly by software
  3835                           ;	Zero Cross Detect Disable Bit
  3836                           ;	ZCD = OFF, ZCD disable.  ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  3837                           ;	PLL Enable Bit
  3838                           ;	PLLEN = ON, 4x PLL is always enabled
  3839                           ;	Stack Overflow/Underflow Reset Enable
  3840                           ;	STVREN = OFF, Stack Overflow or Underflow will not cause a Reset
  3841                           ;	Brown-out Reset Voltage Selection
  3842                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  3843                           ;	Low-Power Brown Out Reset
  3844                           ;	LPBOR = OFF, Low-Power BOR is disabled
  3845                           ;	Low-Voltage Programming Enable
  3846                           ;	LVP = ON, Low-voltage programming enabled
  3847  8008                     	org	32776
  3848  8008  3DFB               	dw	15867
  3849                           
  3850                           ;Config register CONFIG3 @ 0x8009
  3851                           ;	WDT Period Select
  3852                           ;	WDTCPS = WDTCPS1F, Software Control (WDTPS)
  3853                           ;	Watchdog Timer Enable
  3854                           ;	WDTE = OFF, WDT disabled
  3855                           ;	WDT Window Select
  3856                           ;	WDTCWS = WDTCWSSW, Software WDT window size control (WDTWS bits)
  3857                           ;	WDT Input Clock Selector
  3858                           ;	WDTCCS = SWC, Software control, controlled by WDTCS bits
  3859  8009                     	org	32777
  3860  8009  3F9F               	dw	16287

Data Sizes:
    Strings     11
    Constant    0
    Data        0
    BSS         45
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80     77      80
    BANK1            80      4      46
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_8(CODE[3]), STR_4(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_8(CODE[3]), STR_4(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S932_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 


Critical Paths under _main in COMMON

    _main->_printf
    _vfpfcnvrt->_strncmp
    _dtoa->___aodiv
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _abs->___aomod

Critical Paths under _myIsr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->___aodiv
    _dtoa->___aomod
    _pad->_fputs
    _abs->___aomod

Critical Paths under _myIsr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _myIsr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myIsr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myIsr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _myIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _myIsr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _myIsr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _myIsr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _myIsr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _myIsr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _myIsr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _myIsr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _myIsr in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    7130
                                              0 BANK1      4     4      0
                            ___ltdiv
                             _printf
                           _smt_init
                          _uart_init
 ---------------------------------------------------------------------------------
 (1) _uart_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _smt_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _printf                                              10     4      6    6816
                                             12 COMMON     1     1      0
                                             70 BANK0      7     1      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3    6684
                                             62 BANK0      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           40    38      2    6352
                                             46 BANK0     16    14      2
                               _dtoa
                              _fputc
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     681
                                              1 COMMON    11     5      6
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                30    22      8    4215
                                             16 BANK0     30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    2466
                                             11 COMMON     1     1      0
                                              7 BANK0      8     5      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               5     3      2     123
                                              1 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                8     7      1    1105
                                             10 COMMON     1     0      1
                                              0 BANK0      7     7      0
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     790
                                              2 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      22
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              4 COMMON     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             19     3     16     448
                                              1 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             27    11     16     452
                                              1 COMMON    11    11      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (1) ___ltdiv                                             11     5      6     314
                                              1 COMMON    11     5      6
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _myIsr                                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___ltdiv
   _printf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
             _strlen
         _fputc
         _strncmp
   _smt_init
   _uart_init

 _myIsr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4D      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      4      2E       7       57.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      8B      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      8B      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Mar 16 02:29:05 2023

                    l103 06D8                      l274 039F                      l287 047B  
                    l670 0598                      l680 00B7                      l666 056D  
                    l674 0081                      l683 0149                      l675 0089  
                    l669 058D                      l679 00A5                      u850 031A  
                    u785 0610                      u885 035F                      u985 043C  
                    _abs 06A1                      _pad 0559                      wreg 0009  
           _BAUD1CONbits 019F                     l1200 032A                     l1210 0372  
                   l1202 0339                     ?_abs 0074                     l1212 037E  
                   l1222 03DB                     l1302 00BE                     l1310 0155  
                   l1240 044E                     l1152 05EF                     l1320 0166  
                   l1234 040F                     l1242 045A                     l1226 0402  
                   l1250 0564                     l1314 015C                     l1236 041E  
                   l1156 0612                     l1172 068F                     l1260 056F  
                   l1324 0172                     l1340 051C                     l1412 0623  
                   l1190 0313                     l1166 064B                     l1174 069A  
                   l1254 056B                     l1414 063F                     l1502 04B7  
                   l1184 02E8                     l1282 009D                     l1346 0548  
                   l1338 0541                     l1370 01FE                     l1362 01C5  
                   l1188 030F                     l1292 00E3                     l1470 05DF  
                   l1382 0269                     l1374 022A                     l1456 05AF  
                   l1288 00B3                     l1392 0290                     l1466 05D5  
                   l1458 05BC                     l1388 028A                     l1398 029B  
                   ?_pad 0027                     STR_1 06E1                     STR_2 06E6  
                   STR_4 06E6                     STR_6 06E9                     STR_8 06E9  
                   u1045 0579                     u1125 0095                     u1070 0057  
                   u1080 0058                     u1065 06AA                     u1155 0153  
                   u1405 05D6                     u1175 00D2                     u1185 00DE  
                   u1365 05B2                     u1385 05BD                     u1395 05CC  
                   abs@a 0074                     _dbuf 00AA                     _main 048D  
                   _dtoa 003C                     _prec 00A8                     _nout 00A4  
                   pad@i 002A                     pad@p 0028                     fsr0h 0005  
                   fsr1h 0007                     indf0 0000                     fsr0l 0004  
                   indf1 0001                     fsr1l 0006                     pad@w 002C  
                   btemp 007E                     start 002B                    ??_abs 0076  
                  ??_pad 007B          __end_of___aodiv 03B1                    ?_main 0070  
                  ?_dtoa 0030          __end_of___aomod 048D          __end_of___ltdiv 05E6  
                  i1l100 0029             vfpfcnvrt@fmt 004E                    u82lld 02E6  
                  u93lld 03D9                    _flags 006D                    _fputc 05E6  
                  _fputs 0648                    _myIsr 0004                    pad@fp 002E  
                  _width 00A6                    _putch 06D4                    dtoa@d 0030  
                  dtoa@i 004C                    dtoa@n 0044                    dtoa@p 003D  
                  dtoa@s 0042                    dtoa@w 0040                    status 0003  
                  wtemp0 007E          __end_of_strncmp 0559          __initialization 002D  
           __end_of_main 0507             __end_of_dtoa 0183                   ??_main 00CA  
                 ??_dtoa 0038                   ?_fputc 0072                   ?_fputs 007A  
                 ?_myIsr 0070                   ?_putch 0070                   _RB6PPS 0E9E  
                 i1l1522 0018                   i1l1524 001A                   _RC7PPS 0EA7  
                 u144_20 0016                   _SMT1PR 0D95                   _SPBRGH 019C  
                 _SPBRGL 019B                   _TX1REG 019A             vfprintf@cfmt 0064  
              ??___aodiv 0071                ??___aomod 0071                ??___ltdiv 0077  
                 _printf 06B8                   pad@buf 0027                   dtoa@fp 003F  
                 _strlen 068A                   fputc@c 0072                   fputs@c 0023  
                 fputs@i 0024                   fputs@s 0026         __end_of_smt_init 068A  
                 putch@c 0071         __end_of_vfprintf 0648                ??_strncmp 0077  
__end_of__initialization 0038           __pcstackCOMMON 0070            __end_of_fputc 061B  
          __end_of_fputs 066C            __end_of_myIsr 002B            __end_of_putch 06DB  
                ??_fputc 0075                  ??_fputs 0020                  ??_myIsr 0070  
                ??_putch 0071               __pbssBANK0 006D               __pbssBANK1 00A0  
             __pmaintext 048D               __pintentry 0004                  _CLC1CON 0F10  
                _CLC1POL 0F11                  ?_printf 0066                  ?_strlen 0071  
     __size_of_uart_init 000C       __size_of_vfpfcnvrt 013B                  _SMT1CPR 0D8F  
                _SMT2TMR 0D9E                  ___aodiv 02BE                  ___aomod 03B1  
              ?_smt_init 0070                  ___ltdiv 05A2                ?_vfprintf 005E  
                __ptext1 06C8                  __ptext2 066C                  __ptext3 06B8  
                __ptext4 061B                  __ptext5 0183                  __ptext6 0507  
                __ptext7 003C                  __ptext8 0559                  __ptext9 068A  
        __size_of_printf 0010          __size_of_strlen 0017             __size_of_abs 0017  
           __size_of_pad 0049                  clrloop0 06DC            _dataAvailable 006F  
                _strncmp 0507     end_of_initialization 0038                  fputc@fp 0074  
                fputs@fp 007A        __end_of_uart_init 06D4         ___ltdiv@dividend 0074  
      __end_of_vfpfcnvrt 02BE               ??_smt_init 0071               ??_vfprintf 0061  
                strlen@a 0074                  strlen@s 0075                _TRISAbits 008C  
              _TRISBbits 008D                _TRISCbits 008E         ___ltdiv@quotient 0078  
            _CLC1CONbits 0F10              vfpfcnvrt@ap 004F              vfpfcnvrt@fp 005D  
            vfpfcnvrt@ll 0055           __end_of_printf 06C8           __end_of_strlen 06A1  
    start_initialization 002D              __end_of_abs 06B8              __end_of_pad 05A2  
            vfprintf@fmt 005E                 ??_printf 007C                 ??_strlen 0073  
              ___latbits 0002            __pcstackBANK0 0020            __pcstackBANK1 00CA  
       ___aodiv@dividend 0028                _dtoa$1003 003B                 ?___aodiv 0020  
               ?___aomod 0020         ___aodiv@quotient 0074                 ?___ltdiv 0071  
      __size_of_smt_init 001E        __size_of_vfprintf 002D                 _CLC1GLS0 0F16  
               _CLC1GLS1 0F17                 _CLC1GLS2 0F18                 _CLC1GLS3 0F19  
               _CLC1SEL0 0F12                 _CLC1SEL1 0F13                 _CLC1SEL2 0F14  
               _CLC1SEL3 0F15           __size_of_fputc 0035           __size_of_fputs 0024  
         __size_of_myIsr 0027                 ?_strncmp 0071           __size_of_putch 0007  
              _smt2Value 00A0                 _LATBbits 010D                clear_ram0 06DB  
               _PIE4bits 0093          ___ltdiv@divisor 0071                 _PIR4bits 0013  
        ___ltdiv@counter 007B                _uart_init 06C8                _vfpfcnvrt 0183  
           _SMT1CON0bits 0D98             _SMT1CON1bits 0D99             _SMT2CON0bits 0DAA  
           _SMT2CON1bits 0DAB               vfprintf@ap 0060               vfprintf@fp 0063  
             ?_uart_init 0070         __size_of___aodiv 00F3         __size_of___aomod 00DC  
             ?_vfpfcnvrt 004E         __size_of___ltdiv 0044          ___aodiv@divisor 0020  
        ___aodiv@counter 0072               _ANSELAbits 018C               _ANSELCbits 018E  
               __ptext10 0648                 __ptext11 05E6                 __ptext12 06D4  
               __ptext13 06A1                 __ptext14 03B1                 __ptext15 02BE  
               __ptext16 05A2         __size_of_strncmp 0052            __size_of_main 007A  
          __size_of_dtoa 0147               _RC1STAbits 019D                 int$flags 007E  
               _smt_init 066C                 _vfprintf 061B                printf@fmt 0066  
       ___aomod@dividend 0028               _INTCONbits 000B                 intlevel1 0000  
              strncmp@_l 0071                strncmp@_r 0073              ??_uart_init 0071  
               printf@ap 006C          ___aomod@divisor 0020              ??_vfpfcnvrt 0050  
        ___aomod@counter 0072               _SMT1SIGPPS 0E26            __pstringtext1 06E1  
          __pstringtext2 06E6            __pstringtext3 06E9            __pstringtext4 0000  
               strncmp@l 0078                 strncmp@n 0075                 strncmp@r 007A  
             _TX1STAbits 019E             ___aodiv@sign 0073             ___aomod@sign 0073  
