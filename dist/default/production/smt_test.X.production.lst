

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Mar 05 02:39:22 2023

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og9 
     1                           	processor	16F1619
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     9                           	psect	cinit,global,class=CODE,merge=1,delta=2
    10                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2,group=3
    21                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text6,local,class=CODE,merge=1,delta=2,group=3
    24                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text9,local,class=CODE,merge=1,delta=2,group=3
    27                           	psect	text10,local,class=CODE,merge=1,delta=2,group=3
    28                           	psect	text11,local,class=CODE,merge=1,delta=2,group=3
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2,group=3
    31                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	intentry,global,class=CODE,delta=2
    35                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    36                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    37                           	dabs	1,0x7E,2
    38  0000                     
    39                           ; Version 2.40
    40                           ; Generated 17/11/2021 GMT
    41                           ; 
    42                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution. Publication is not required when
    56                           ;        this file is used in an embedded application.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC16F1619 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74  0000                     	;# 
    75  0001                     	;# 
    76  0002                     	;# 
    77  0003                     	;# 
    78  0004                     	;# 
    79  0005                     	;# 
    80  0006                     	;# 
    81  0007                     	;# 
    82  0008                     	;# 
    83  0009                     	;# 
    84  000A                     	;# 
    85  000B                     	;# 
    86  000C                     	;# 
    87  000D                     	;# 
    88  000E                     	;# 
    89  0010                     	;# 
    90  0011                     	;# 
    91  0012                     	;# 
    92  0013                     	;# 
    93  0014                     	;# 
    94  0015                     	;# 
    95  0016                     	;# 
    96  0016                     	;# 
    97  0017                     	;# 
    98  0018                     	;# 
    99  0019                     	;# 
   100  001A                     	;# 
   101  001A                     	;# 
   102  001B                     	;# 
   103  001B                     	;# 
   104  001C                     	;# 
   105  001D                     	;# 
   106  001E                     	;# 
   107  001F                     	;# 
   108  008C                     	;# 
   109  008D                     	;# 
   110  008E                     	;# 
   111  0090                     	;# 
   112  0091                     	;# 
   113  0092                     	;# 
   114  0093                     	;# 
   115  0094                     	;# 
   116  0095                     	;# 
   117  0096                     	;# 
   118  0098                     	;# 
   119  0099                     	;# 
   120  009A                     	;# 
   121  009B                     	;# 
   122  009B                     	;# 
   123  009C                     	;# 
   124  009D                     	;# 
   125  009E                     	;# 
   126  009F                     	;# 
   127  010C                     	;# 
   128  010D                     	;# 
   129  010E                     	;# 
   130  0111                     	;# 
   131  0112                     	;# 
   132  0113                     	;# 
   133  0114                     	;# 
   134  0115                     	;# 
   135  0116                     	;# 
   136  0117                     	;# 
   137  0118                     	;# 
   138  0119                     	;# 
   139  011C                     	;# 
   140  018C                     	;# 
   141  018D                     	;# 
   142  018E                     	;# 
   143  0191                     	;# 
   144  0191                     	;# 
   145  0192                     	;# 
   146  0193                     	;# 
   147  0193                     	;# 
   148  0194                     	;# 
   149  0195                     	;# 
   150  0196                     	;# 
   151  0197                     	;# 
   152  0199                     	;# 
   153  0199                     	;# 
   154  0199                     	;# 
   155  019A                     	;# 
   156  019A                     	;# 
   157  019A                     	;# 
   158  019B                     	;# 
   159  019B                     	;# 
   160  019B                     	;# 
   161  019B                     	;# 
   162  019B                     	;# 
   163  019C                     	;# 
   164  019C                     	;# 
   165  019C                     	;# 
   166  019D                     	;# 
   167  019D                     	;# 
   168  019D                     	;# 
   169  019E                     	;# 
   170  019E                     	;# 
   171  019E                     	;# 
   172  019F                     	;# 
   173  019F                     	;# 
   174  019F                     	;# 
   175  019F                     	;# 
   176  019F                     	;# 
   177  020C                     	;# 
   178  020D                     	;# 
   179  020E                     	;# 
   180  0211                     	;# 
   181  0211                     	;# 
   182  0212                     	;# 
   183  0212                     	;# 
   184  0213                     	;# 
   185  0213                     	;# 
   186  0214                     	;# 
   187  0214                     	;# 
   188  0215                     	;# 
   189  0215                     	;# 
   190  0215                     	;# 
   191  0215                     	;# 
   192  0216                     	;# 
   193  0216                     	;# 
   194  0217                     	;# 
   195  0217                     	;# 
   196  028C                     	;# 
   197  028D                     	;# 
   198  028E                     	;# 
   199  0291                     	;# 
   200  0291                     	;# 
   201  0292                     	;# 
   202  0293                     	;# 
   203  0294                     	;# 
   204  0298                     	;# 
   205  0298                     	;# 
   206  0299                     	;# 
   207  029A                     	;# 
   208  029B                     	;# 
   209  029E                     	;# 
   210  030C                     	;# 
   211  030D                     	;# 
   212  030E                     	;# 
   213  038C                     	;# 
   214  038D                     	;# 
   215  038E                     	;# 
   216  0391                     	;# 
   217  0392                     	;# 
   218  0393                     	;# 
   219  0394                     	;# 
   220  0395                     	;# 
   221  0396                     	;# 
   222  0397                     	;# 
   223  0398                     	;# 
   224  0399                     	;# 
   225  040E                     	;# 
   226  0413                     	;# 
   227  0413                     	;# 
   228  0414                     	;# 
   229  0414                     	;# 
   230  0415                     	;# 
   231  0416                     	;# 
   232  0417                     	;# 
   233  0418                     	;# 
   234  041A                     	;# 
   235  041A                     	;# 
   236  041B                     	;# 
   237  041B                     	;# 
   238  041C                     	;# 
   239  041D                     	;# 
   240  041E                     	;# 
   241  041F                     	;# 
   242  0493                     	;# 
   243  0494                     	;# 
   244  0495                     	;# 
   245  0496                     	;# 
   246  049A                     	;# 
   247  049B                     	;# 
   248  049C                     	;# 
   249  049D                     	;# 
   250  058C                     	;# 
   251  058C                     	;# 
   252  058D                     	;# 
   253  058E                     	;# 
   254  058E                     	;# 
   255  058F                     	;# 
   256  0590                     	;# 
   257  0590                     	;# 
   258  0591                     	;# 
   259  0592                     	;# 
   260  0592                     	;# 
   261  0593                     	;# 
   262  0594                     	;# 
   263  0594                     	;# 
   264  0595                     	;# 
   265  0596                     	;# 
   266  0596                     	;# 
   267  0597                     	;# 
   268  0598                     	;# 
   269  0599                     	;# 
   270  059A                     	;# 
   271  059B                     	;# 
   272  059B                     	;# 
   273  059C                     	;# 
   274  059D                     	;# 
   275  060C                     	;# 
   276  060C                     	;# 
   277  060D                     	;# 
   278  060E                     	;# 
   279  060F                     	;# 
   280  060F                     	;# 
   281  0610                     	;# 
   282  0611                     	;# 
   283  0612                     	;# 
   284  0613                     	;# 
   285  0614                     	;# 
   286  0617                     	;# 
   287  0617                     	;# 
   288  0618                     	;# 
   289  0619                     	;# 
   290  061A                     	;# 
   291  061A                     	;# 
   292  061B                     	;# 
   293  061C                     	;# 
   294  0691                     	;# 
   295  0692                     	;# 
   296  0693                     	;# 
   297  0694                     	;# 
   298  0695                     	;# 
   299  0696                     	;# 
   300  0697                     	;# 
   301  0699                     	;# 
   302  069A                     	;# 
   303  0711                     	;# 
   304  0712                     	;# 
   305  0713                     	;# 
   306  0714                     	;# 
   307  0715                     	;# 
   308  0718                     	;# 
   309  0718                     	;# 
   310  0719                     	;# 
   311  071A                     	;# 
   312  071A                     	;# 
   313  071B                     	;# 
   314  071C                     	;# 
   315  071D                     	;# 
   316  0791                     	;# 
   317  0791                     	;# 
   318  0792                     	;# 
   319  0793                     	;# 
   320  0793                     	;# 
   321  0794                     	;# 
   322  0795                     	;# 
   323  0795                     	;# 
   324  0796                     	;# 
   325  0797                     	;# 
   326  0797                     	;# 
   327  0798                     	;# 
   328  0799                     	;# 
   329  079A                     	;# 
   330  080C                     	;# 
   331  080C                     	;# 
   332  080D                     	;# 
   333  080E                     	;# 
   334  080E                     	;# 
   335  080F                     	;# 
   336  0810                     	;# 
   337  0810                     	;# 
   338  0811                     	;# 
   339  0812                     	;# 
   340  0812                     	;# 
   341  0813                     	;# 
   342  0814                     	;# 
   343  0815                     	;# 
   344  0816                     	;# 
   345  0817                     	;# 
   346  0818                     	;# 
   347  0819                     	;# 
   348  081A                     	;# 
   349  081A                     	;# 
   350  081B                     	;# 
   351  081C                     	;# 
   352  081C                     	;# 
   353  081D                     	;# 
   354  088C                     	;# 
   355  088D                     	;# 
   356  088E                     	;# 
   357  088F                     	;# 
   358  088F                     	;# 
   359  0890                     	;# 
   360  0891                     	;# 
   361  0892                     	;# 
   362  0893                     	;# 
   363  0893                     	;# 
   364  0894                     	;# 
   365  0895                     	;# 
   366  0896                     	;# 
   367  0897                     	;# 
   368  0897                     	;# 
   369  0898                     	;# 
   370  0899                     	;# 
   371  0D8C                     	;# 
   372  0D8C                     	;# 
   373  0D8D                     	;# 
   374  0D8E                     	;# 
   375  0D8F                     	;# 
   376  0D8F                     	;# 
   377  0D90                     	;# 
   378  0D91                     	;# 
   379  0D92                     	;# 
   380  0D92                     	;# 
   381  0D93                     	;# 
   382  0D94                     	;# 
   383  0D95                     	;# 
   384  0D95                     	;# 
   385  0D96                     	;# 
   386  0D97                     	;# 
   387  0D98                     	;# 
   388  0D99                     	;# 
   389  0D9A                     	;# 
   390  0D9B                     	;# 
   391  0D9C                     	;# 
   392  0D9D                     	;# 
   393  0D9E                     	;# 
   394  0D9E                     	;# 
   395  0D9F                     	;# 
   396  0DA0                     	;# 
   397  0DA1                     	;# 
   398  0DA1                     	;# 
   399  0DA2                     	;# 
   400  0DA3                     	;# 
   401  0DA4                     	;# 
   402  0DA4                     	;# 
   403  0DA5                     	;# 
   404  0DA6                     	;# 
   405  0DA7                     	;# 
   406  0DA7                     	;# 
   407  0DA8                     	;# 
   408  0DA9                     	;# 
   409  0DAA                     	;# 
   410  0DAB                     	;# 
   411  0DAC                     	;# 
   412  0DAD                     	;# 
   413  0DAE                     	;# 
   414  0DAF                     	;# 
   415  0E0F                     	;# 
   416  0E10                     	;# 
   417  0E11                     	;# 
   418  0E12                     	;# 
   419  0E13                     	;# 
   420  0E14                     	;# 
   421  0E15                     	;# 
   422  0E16                     	;# 
   423  0E17                     	;# 
   424  0E18                     	;# 
   425  0E19                     	;# 
   426  0E1A                     	;# 
   427  0E1B                     	;# 
   428  0E1C                     	;# 
   429  0E1D                     	;# 
   430  0E1E                     	;# 
   431  0E1F                     	;# 
   432  0E20                     	;# 
   433  0E21                     	;# 
   434  0E22                     	;# 
   435  0E23                     	;# 
   436  0E24                     	;# 
   437  0E25                     	;# 
   438  0E26                     	;# 
   439  0E27                     	;# 
   440  0E28                     	;# 
   441  0E29                     	;# 
   442  0E2A                     	;# 
   443  0E2B                     	;# 
   444  0E2C                     	;# 
   445  0E2D                     	;# 
   446  0E2E                     	;# 
   447  0E90                     	;# 
   448  0E91                     	;# 
   449  0E92                     	;# 
   450  0E94                     	;# 
   451  0E95                     	;# 
   452  0E9C                     	;# 
   453  0E9D                     	;# 
   454  0E9E                     	;# 
   455  0E9F                     	;# 
   456  0EA0                     	;# 
   457  0EA1                     	;# 
   458  0EA2                     	;# 
   459  0EA3                     	;# 
   460  0EA4                     	;# 
   461  0EA5                     	;# 
   462  0EA6                     	;# 
   463  0EA7                     	;# 
   464  0F0F                     	;# 
   465  0F10                     	;# 
   466  0F11                     	;# 
   467  0F12                     	;# 
   468  0F13                     	;# 
   469  0F14                     	;# 
   470  0F15                     	;# 
   471  0F16                     	;# 
   472  0F17                     	;# 
   473  0F18                     	;# 
   474  0F19                     	;# 
   475  0F1A                     	;# 
   476  0F1B                     	;# 
   477  0F1C                     	;# 
   478  0F1D                     	;# 
   479  0F1E                     	;# 
   480  0F1F                     	;# 
   481  0F20                     	;# 
   482  0F21                     	;# 
   483  0F22                     	;# 
   484  0F23                     	;# 
   485  0F24                     	;# 
   486  0F25                     	;# 
   487  0F26                     	;# 
   488  0F27                     	;# 
   489  0F28                     	;# 
   490  0F29                     	;# 
   491  0F2A                     	;# 
   492  0F2B                     	;# 
   493  0F2C                     	;# 
   494  0F2D                     	;# 
   495  0F2E                     	;# 
   496  0F2F                     	;# 
   497  0F30                     	;# 
   498  0F31                     	;# 
   499  0F32                     	;# 
   500  0F33                     	;# 
   501  0F34                     	;# 
   502  0F35                     	;# 
   503  0F36                     	;# 
   504  0F37                     	;# 
   505  0FE4                     	;# 
   506  0FE5                     	;# 
   507  0FE6                     	;# 
   508  0FE7                     	;# 
   509  0FE8                     	;# 
   510  0FE9                     	;# 
   511  0FEA                     	;# 
   512  0FEB                     	;# 
   513  0FED                     	;# 
   514  0FEE                     	;# 
   515  0FEF                     	;# 
   516                           
   517                           	psect	nvBANK1
   518  00D2                     __pnvBANK1:
   519  00D2                     _smt2PendChange:
   520  00D2                     	ds	1
   521  0013                     _PIR4bits	set	19
   522  000B                     _INTCONbits	set	11
   523  0098                     _OSCTUNEbits	set	152
   524  0093                     _PIE4bits	set	147
   525  0099                     _OSCCONbits	set	153
   526  008E                     _TRISCbits	set	142
   527  008C                     _TRISAbits	set	140
   528  008D                     _TRISBbits	set	141
   529  010D                     _LATBbits	set	269
   530  019A                     _TX1REG	set	410
   531  018C                     _ANSELAbits	set	396
   532  019B                     _SPBRGL	set	411
   533  019C                     _SPBRGH	set	412
   534  019F                     _BAUD1CONbits	set	415
   535  019D                     _RC1STAbits	set	413
   536  019E                     _TX1STAbits	set	414
   537  0D9E                     _SMT2TMR	set	3486
   538  0D8F                     _SMT1CPR	set	3471
   539  0D95                     _SMT1PR	set	3477
   540  0DAA                     _SMT2CON0bits	set	3498
   541  0DAB                     _SMT2CON1bits	set	3499
   542  0D99                     _SMT1CON1bits	set	3481
   543  0D98                     _SMT1CON0bits	set	3480
   544  0E9E                     _RB6PPS	set	3742
   545  0EA7                     _RC7PPS	set	3751
   546  0F10                     _CLC1CONbits	set	3856
   547  0F15                     _CLC1SEL3	set	3861
   548  0F14                     _CLC1SEL2	set	3860
   549  0F13                     _CLC1SEL1	set	3859
   550  0F12                     _CLC1SEL0	set	3858
   551  0F11                     _CLC1POL	set	3857
   552  0F19                     _CLC1GLS3	set	3865
   553  0F18                     _CLC1GLS2	set	3864
   554  0F17                     _CLC1GLS1	set	3863
   555  0F16                     _CLC1GLS0	set	3862
   556  0F10                     _CLC1CON	set	3856
   557                           
   558                           	psect	stringtext1
   559  06D7                     __pstringtext1:
   560  06D7                     STR_1:
   561  06D7  3425               	retlw	37	;'%'
   562  06D8  346C               	retlw	108	;'l'
   563  06D9  3464               	retlw	100	;'d'
   564  06DA  340A               	retlw	10
   565  06DB  3400               	retlw	0
   566                           
   567                           	psect	stringtext2
   568  06DC                     __pstringtext2:
   569  06DC                     STR_2:
   570  06DC  346C               	retlw	108	;'l'
   571  06DD  3464               	retlw	100	;'d'
   572  06DE  3400               	retlw	0
   573                           
   574                           	psect	stringtext3
   575  06DF                     __pstringtext3:
   576  06DF                     STR_6:
   577  06DF  346C               	retlw	108	;'l'
   578  06E0  3469               	retlw	105	;'i'
   579  06E1  3400               	retlw	0
   580                           
   581                           	psect	stringtext4
   582  0000                     __pstringtext4:
   583  06DC                     
   584                           	psect	cinit
   585  0038                     start_initialization:	
   586                           ; #config settings
   587                           
   588  0038                     __initialization:
   589                           
   590                           ; Clear objects allocated to COMMON
   591  0038  01FC               	clrf	__pbssCOMMON& (0+127)
   592                           
   593                           ; Clear objects allocated to BANK0
   594  0039  0020               	movlb	0	; select bank0
   595  003A  01EE               	clrf	__pbssBANK0& (0+127)
   596  003B  01EF               	clrf	(__pbssBANK0+1)& (0+127)
   597                           
   598                           ; Clear objects allocated to BANK1
   599  003C  30A0               	movlw	low __pbssBANK1
   600  003D  0084               	movwf	4
   601  003E  3000               	movlw	high __pbssBANK1
   602  003F  0085               	movwf	5
   603  0040  3032               	movlw	50
   604  0041  3186  26D1         	fcall	clear_ram0
   605  0043                     end_of_initialization:	
   606                           ;End of C runtime variable initialization code
   607                           
   608  0043                     __end_of__initialization:
   609  0043  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   610  0044  0020               	movlb	0
   611  0045  3184  2C98         	ljmp	_main	;jump to C main() function
   612                           
   613                           	psect	bssCOMMON
   614  007C                     __pbssCOMMON:
   615  007C                     _dataAvailable:
   616  007C                     	ds	1
   617                           
   618                           	psect	bssBANK0
   619  006E                     __pbssBANK0:
   620  006E                     _flags:
   621  006E                     	ds	2
   622                           
   623                           	psect	bssBANK1
   624  00A0                     __pbssBANK1:
   625  00A0                     _smt2Value:
   626  00A0                     	ds	4
   627  00A4                     _refreshValue:
   628  00A4                     	ds	4
   629  00A8                     _actValue:
   630  00A8                     	ds	4
   631  00AC                     _nout:
   632  00AC                     	ds	2
   633  00AE                     _width:
   634  00AE                     	ds	2
   635  00B0                     _prec:
   636  00B0                     	ds	2
   637  00B2                     _dbuf:
   638  00B2                     	ds	32
   639                           
   640                           	psect	clrtext
   641  06D1                     clear_ram0:	
   642                           ;	Called with FSR0 containing the base address, and
   643                           ;	WREG with the size to clear
   644                           
   645  06D1  0064               	clrwdt	;clear the watchdog before getting into this loop
   646  06D2                     clrloop0:
   647  06D2  0180               	clrf	0	;clear RAM location pointed to by FSR
   648  06D3  3101               	addfsr 0,1
   649  06D4  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   650  06D5  2ED2               	goto	clrloop0	;have we reached the end yet?
   651  06D6  3400               	retlw	0	;all done for this memory range, return
   652                           
   653                           	psect	cstackBANK1
   654  00D3                     __pcstackBANK1:
   655  00D3                     ??_main:
   656                           
   657                           ; 1 bytes @ 0x0
   658  00D3                     	ds	1
   659                           
   660                           	psect	cstackCOMMON
   661  0070                     __pcstackCOMMON:
   662  0070                     ?_smt_init:
   663  0070                     ?_uart_init:	
   664                           ; 1 bytes @ 0x0
   665                           
   666  0070                     ?_main:	
   667                           ; 1 bytes @ 0x0
   668                           
   669  0070                     ?_myIsr:	
   670                           ; 1 bytes @ 0x0
   671                           
   672  0070                     ??_myIsr:	
   673                           ; 1 bytes @ 0x0
   674                           
   675  0070                     ?_putch:	
   676                           ; 1 bytes @ 0x0
   677                           
   678                           
   679                           ; 1 bytes @ 0x0
   680  0070                     	ds	1
   681  0071                     ??_smt_init:
   682  0071                     ??_uart_init:	
   683                           ; 1 bytes @ 0x1
   684                           
   685  0071                     ??_putch:	
   686                           ; 1 bytes @ 0x1
   687                           
   688  0071                     ??___aodiv:	
   689                           ; 1 bytes @ 0x1
   690                           
   691  0071                     ??___aomod:	
   692                           ; 1 bytes @ 0x1
   693                           
   694  0071                     ?_strlen:	
   695                           ; 1 bytes @ 0x1
   696                           
   697  0071                     ?_strncmp:	
   698                           ; 2 bytes @ 0x1
   699                           
   700  0071                     ?___ltdiv:	
   701                           ; 2 bytes @ 0x1
   702                           
   703  0071                     putch@c:	
   704                           ; 3 bytes @ 0x1
   705                           
   706  0071                     strncmp@_l:	
   707                           ; 1 bytes @ 0x1
   708                           
   709  0071                     ___ltdiv@divisor:	
   710                           ; 2 bytes @ 0x1
   711                           
   712                           
   713                           ; 3 bytes @ 0x1
   714  0071                     	ds	1
   715  0072                     ?_fputc:
   716  0072                     ___aodiv@counter:	
   717                           ; 2 bytes @ 0x2
   718                           
   719  0072                     ___aomod@counter:	
   720                           ; 1 bytes @ 0x2
   721                           
   722  0072                     fputc@c:	
   723                           ; 1 bytes @ 0x2
   724                           
   725                           
   726                           ; 2 bytes @ 0x2
   727  0072                     	ds	1
   728  0073                     ??_strlen:
   729  0073                     ___aodiv@sign:	
   730                           ; 1 bytes @ 0x3
   731                           
   732  0073                     ___aomod@sign:	
   733                           ; 1 bytes @ 0x3
   734                           
   735  0073                     strncmp@_r:	
   736                           ; 1 bytes @ 0x3
   737                           
   738                           
   739                           ; 2 bytes @ 0x3
   740  0073                     	ds	1
   741  0074                     ?_abs:
   742  0074                     fputc@fp:	
   743                           ; 2 bytes @ 0x4
   744                           
   745  0074                     strlen@a:	
   746                           ; 1 bytes @ 0x4
   747                           
   748  0074                     abs@a:	
   749                           ; 1 bytes @ 0x4
   750                           
   751  0074                     ___ltdiv@dividend:	
   752                           ; 2 bytes @ 0x4
   753                           
   754  0074                     ___aodiv@quotient:	
   755                           ; 3 bytes @ 0x4
   756                           
   757                           
   758                           ; 8 bytes @ 0x4
   759  0074                     	ds	1
   760  0075                     ??_fputc:
   761  0075                     strlen@s:	
   762                           ; 1 bytes @ 0x5
   763                           
   764  0075                     strncmp@n:	
   765                           ; 1 bytes @ 0x5
   766                           
   767                           
   768                           ; 2 bytes @ 0x5
   769  0075                     	ds	1
   770  0076                     ??_abs:
   771                           
   772                           ; 1 bytes @ 0x6
   773  0076                     	ds	1
   774  0077                     ??_strncmp:
   775  0077                     ??___ltdiv:	
   776                           ; 1 bytes @ 0x7
   777                           
   778                           
   779                           ; 1 bytes @ 0x7
   780  0077                     	ds	1
   781  0078                     strncmp@l:
   782  0078                     ___ltdiv@quotient:	
   783                           ; 2 bytes @ 0x8
   784                           
   785                           
   786                           ; 3 bytes @ 0x8
   787  0078                     	ds	2
   788  007A                     ?_fputs:
   789  007A                     fputs@fp:	
   790                           ; 2 bytes @ 0xA
   791                           
   792  007A                     strncmp@r:	
   793                           ; 1 bytes @ 0xA
   794                           
   795                           
   796                           ; 2 bytes @ 0xA
   797  007A                     	ds	1
   798  007B                     ??_pad:
   799  007B                     ___ltdiv@counter:	
   800                           ; 1 bytes @ 0xB
   801                           
   802                           
   803                           ; 1 bytes @ 0xB
   804  007B                     	ds	1
   805                           
   806                           	psect	cstackBANK0
   807  0020                     __pcstackBANK0:
   808  0020                     ??_fputs:
   809  0020                     ?___aodiv:	
   810                           ; 1 bytes @ 0x0
   811                           
   812  0020                     ?___aomod:	
   813                           ; 8 bytes @ 0x0
   814                           
   815  0020                     ___aodiv@divisor:	
   816                           ; 8 bytes @ 0x0
   817                           
   818  0020                     ___aomod@divisor:	
   819                           ; 8 bytes @ 0x0
   820                           
   821                           
   822                           ; 8 bytes @ 0x0
   823  0020                     	ds	3
   824  0023                     fputs@c:
   825                           
   826                           ; 1 bytes @ 0x3
   827  0023                     	ds	1
   828  0024                     fputs@i:
   829                           
   830                           ; 2 bytes @ 0x4
   831  0024                     	ds	2
   832  0026                     fputs@s:
   833                           
   834                           ; 1 bytes @ 0x6
   835  0026                     	ds	1
   836  0027                     ?_pad:
   837  0027                     pad@buf:	
   838                           ; 2 bytes @ 0x7
   839                           
   840                           
   841                           ; 1 bytes @ 0x7
   842  0027                     	ds	1
   843  0028                     pad@p:
   844  0028                     ___aodiv@dividend:	
   845                           ; 2 bytes @ 0x8
   846                           
   847  0028                     ___aomod@dividend:	
   848                           ; 8 bytes @ 0x8
   849                           
   850                           
   851                           ; 8 bytes @ 0x8
   852  0028                     	ds	2
   853  002A                     pad@i:
   854                           
   855                           ; 2 bytes @ 0xA
   856  002A                     	ds	2
   857  002C                     pad@w:
   858                           
   859                           ; 2 bytes @ 0xC
   860  002C                     	ds	2
   861  002E                     pad@fp:
   862                           
   863                           ; 1 bytes @ 0xE
   864  002E                     	ds	2
   865  0030                     ?_dtoa:
   866  0030                     dtoa@d:	
   867                           ; 2 bytes @ 0x10
   868                           
   869                           
   870                           ; 8 bytes @ 0x10
   871  0030                     	ds	8
   872  0038                     ??_dtoa:
   873                           
   874                           ; 1 bytes @ 0x18
   875  0038                     	ds	3
   876  003B                     _dtoa$1031:
   877                           
   878                           ; 2 bytes @ 0x1B
   879  003B                     	ds	2
   880  003D                     dtoa@p:
   881                           
   882                           ; 2 bytes @ 0x1D
   883  003D                     	ds	2
   884  003F                     dtoa@fp:
   885                           
   886                           ; 1 bytes @ 0x1F
   887  003F                     	ds	1
   888  0040                     dtoa@w:
   889                           
   890                           ; 2 bytes @ 0x20
   891  0040                     	ds	2
   892  0042                     dtoa@s:
   893                           
   894                           ; 2 bytes @ 0x22
   895  0042                     	ds	2
   896  0044                     dtoa@n:
   897                           
   898                           ; 8 bytes @ 0x24
   899  0044                     	ds	8
   900  004C                     dtoa@i:
   901                           
   902                           ; 2 bytes @ 0x2C
   903  004C                     	ds	2
   904  004E                     ?_vfpfcnvrt:
   905  004E                     vfpfcnvrt@fmt:	
   906                           ; 2 bytes @ 0x2E
   907                           
   908                           
   909                           ; 1 bytes @ 0x2E
   910  004E                     	ds	1
   911  004F                     vfpfcnvrt@ap:
   912                           
   913                           ; 1 bytes @ 0x2F
   914  004F                     	ds	1
   915  0050                     ??_vfpfcnvrt:
   916                           
   917                           ; 1 bytes @ 0x30
   918  0050                     	ds	5
   919  0055                     vfpfcnvrt@ll:
   920                           
   921                           ; 8 bytes @ 0x35
   922  0055                     	ds	8
   923  005D                     vfpfcnvrt@fp:
   924                           
   925                           ; 1 bytes @ 0x3D
   926  005D                     	ds	1
   927  005E                     ?_vfprintf:
   928  005E                     vfprintf@fmt:	
   929                           ; 2 bytes @ 0x3E
   930                           
   931                           
   932                           ; 2 bytes @ 0x3E
   933  005E                     	ds	2
   934  0060                     vfprintf@ap:
   935                           
   936                           ; 1 bytes @ 0x40
   937  0060                     	ds	1
   938  0061                     ??_vfprintf:
   939                           
   940                           ; 1 bytes @ 0x41
   941  0061                     	ds	2
   942  0063                     vfprintf@fp:
   943                           
   944                           ; 1 bytes @ 0x43
   945  0063                     	ds	1
   946  0064                     vfprintf@cfmt:
   947                           
   948                           ; 2 bytes @ 0x44
   949  0064                     	ds	2
   950  0066                     ?_printf:
   951  0066                     printf@fmt:	
   952                           ; 2 bytes @ 0x46
   953                           
   954                           
   955                           ; 2 bytes @ 0x46
   956  0066                     	ds	6
   957  006C                     ??_printf:
   958                           
   959                           ; 1 bytes @ 0x4C
   960  006C                     	ds	1
   961  006D                     printf@ap:
   962                           
   963                           ; 1 bytes @ 0x4D
   964  006D                     	ds	1
   965                           
   966                           	psect	maintext
   967  0498                     __pmaintext:	
   968 ;;
   969 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   970 ;;
   971 ;; *************** function _main *****************
   972 ;; Defined at:
   973 ;;		line 78 in file "smt_main.c"
   974 ;; Parameters:    Size  Location     Type
   975 ;;		None
   976 ;; Auto vars:     Size  Location     Type
   977 ;;		None
   978 ;; Return value:  Size  Location     Type
   979 ;;                  1    wreg      void 
   980 ;; Registers used:
   981 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   982 ;; Tracked objects:
   983 ;;		On entry : B1F/0
   984 ;;		On exit  : 1F/0
   985 ;;		Unchanged: 0/0
   986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   989 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
   990 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
   991 ;;Total ram usage:        1 bytes
   992 ;; Hardware stack levels required when called: 9
   993 ;; This function calls:
   994 ;;		___ltdiv
   995 ;;		_printf
   996 ;;		_smt_init
   997 ;;		_uart_init
   998 ;; This function is called by:
   999 ;;		Startup code after reset
  1000 ;; This function uses a non-reentrant model
  1001 ;;
  1002                           
  1003                           
  1004                           ;psect for function _main
  1005  0498                     _main:
  1006                           
  1007                           ;smt_main.c: 79:     TRISBbits.TRISB7 = 0;
  1008                           
  1009                           ;incstack = 0
  1010                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1011  0498  0021               	movlb	1	; select bank1
  1012  0499  138D               	bcf	13,7	;volatile
  1013                           
  1014                           ;smt_main.c: 80:     TRISAbits.TRISA5 = 1;
  1015  049A  168C               	bsf	12,5	;volatile
  1016                           
  1017                           ;smt_main.c: 81:     TRISAbits.TRISA4 = 1;
  1018  049B  160C               	bsf	12,4	;volatile
  1019                           
  1020                           ;smt_main.c: 82:     ANSELAbits.ANSA4 =0;
  1021  049C  0023               	movlb	3	; select bank3
  1022  049D  120C               	bcf	12,4	;volatile
  1023                           
  1024                           ;smt_main.c: 83:     TRISBbits.TRISB6 = 0;
  1025  049E  0021               	movlb	1	; select bank1
  1026  049F  130D               	bcf	13,6	;volatile
  1027                           
  1028                           ;smt_main.c: 84:     TRISCbits.TRISC7 = 1;
  1029  04A0  178E               	bsf	14,7	;volatile
  1030                           
  1031                           ;smt_main.c: 85:     OSCCONbits.SCS = 0;
  1032  04A1  30FC               	movlw	-4
  1033  04A2  0599               	andwf	25,f	;volatile
  1034                           
  1035                           ;smt_main.c: 86:     OSCCONbits.IRCF = 0b1110;
  1036  04A3  0819               	movf	25,w	;volatile
  1037  04A4  3987               	andlw	-121
  1038  04A5  3870               	iorlw	112
  1039  04A6  0099               	movwf	25	;volatile
  1040                           
  1041                           ;smt_main.c: 87:     INTCONbits.GIE = 1;
  1042  04A7  178B               	bsf	11,7	;volatile
  1043                           
  1044                           ;smt_main.c: 88:     INTCONbits.PEIE = 1;
  1045  04A8  170B               	bsf	11,6	;volatile
  1046                           
  1047                           ;smt_main.c: 89:     PIE4bits.SMT1PRAIE = 1;
  1048  04A9  1493               	bsf	19,1	;volatile
  1049                           
  1050                           ;smt_main.c: 90:     PIE4bits.SMT2IE = 1;
  1051  04AA  1593               	bsf	19,3	;volatile
  1052                           
  1053                           ;smt_main.c: 91:     PIE4bits.SMT1IE = 1;
  1054  04AB  1413               	bsf	19,0	;volatile
  1055                           
  1056                           ;smt_main.c: 92:     OSCTUNEbits.TUN = 0b011111;
  1057  04AC  0818               	movf	24,w	;volatile
  1058  04AD  39C0               	andlw	-64
  1059  04AE  381F               	iorlw	31
  1060  04AF  0098               	movwf	24	;volatile
  1061                           
  1062                           ;smt_main.c: 94:     smt_init();
  1063  04B0  3186  2666  3184   	fcall	_smt_init
  1064                           
  1065                           ;smt_main.c: 95:     uart_init();
  1066  04B3  3186  26BE  3184   	fcall	_uart_init
  1067                           
  1068                           ;smt_main.c: 105:     CLC1CON = 0x86;
  1069  04B6  3086               	movlw	134
  1070  04B7  003E               	movlb	30	; select bank30
  1071  04B8  0090               	movwf	16	;volatile
  1072                           
  1073                           ;smt_main.c: 106:     CLC1GLS0 = 0x02;
  1074  04B9  3002               	movlw	2
  1075  04BA  0096               	movwf	22	;volatile
  1076                           
  1077                           ;smt_main.c: 107:     CLC1GLS1 = 0;
  1078  04BB  0197               	clrf	23	;volatile
  1079                           
  1080                           ;smt_main.c: 108:     CLC1GLS2 = 0;
  1081  04BC  0198               	clrf	24	;volatile
  1082                           
  1083                           ;smt_main.c: 109:     CLC1GLS3 = 0;
  1084  04BD  0199               	clrf	25	;volatile
  1085                           
  1086                           ;smt_main.c: 110:     CLC1POL = 0xA;
  1087  04BE  300A               	movlw	10
  1088  04BF  0091               	movwf	17	;volatile
  1089                           
  1090                           ;smt_main.c: 111:     CLC1SEL0 = 0x14;
  1091  04C0  3014               	movlw	20
  1092  04C1  0092               	movwf	18	;volatile
  1093                           
  1094                           ;smt_main.c: 112:     CLC1SEL1 = 0;
  1095  04C2  0193               	clrf	19	;volatile
  1096                           
  1097                           ;smt_main.c: 113:     CLC1SEL2 = 0;
  1098  04C3  0194               	clrf	20	;volatile
  1099                           
  1100                           ;smt_main.c: 114:     CLC1SEL3 = 0;
  1101  04C4  0195               	clrf	21	;volatile
  1102                           
  1103                           ;smt_main.c: 115:     RB6PPS = 0b00100;
  1104  04C5  3004               	movlw	4
  1105  04C6  003D               	movlb	29	; select bank29
  1106  04C7  009E               	movwf	30	;volatile
  1107                           
  1108                           ;smt_main.c: 116:     CLC1CONbits.EN = 1;
  1109  04C8  003E               	movlb	30	; select bank30
  1110  04C9  1790               	bsf	16,7	;volatile
  1111                           
  1112                           ;smt_main.c: 117:     smt2PendChange = 1;
  1113  04CA  3001               	movlw	1
  1114  04CB  0021               	movlb	1	; select bank1
  1115  04CC  00D3               	movwf	??_main^(0+128)
  1116  04CD  0853               	movf	??_main^(0+128),w
  1117  04CE  00D2               	movwf	_smt2PendChange^(0+128)	;volatile
  1118  04CF                     l95:	
  1119                           ;smt_main.c: 118:     while(1)
  1120                           
  1121                           
  1122                           ;smt_main.c: 119:     {;smt_main.c: 120:         if(dataAvailable)
  1123  04CF  087C               	movf	_dataAvailable,w	;volatile
  1124  04D0  1903               	btfsc	3,2
  1125  04D1  2CCF               	goto	l95
  1126                           
  1127                           ;smt_main.c: 121:         {;smt_main.c: 122:             smt2Value = ((SMT1CPR&0xffffff)
      +                          /25);
  1128  04D2  3019               	movlw	25
  1129  04D3  00F1               	movwf	___ltdiv@divisor
  1130  04D4  3000               	movlw	0
  1131  04D5  00F2               	movwf	___ltdiv@divisor+1
  1132  04D6  3000               	movlw	0
  1133  04D7  00F3               	movwf	___ltdiv@divisor+2
  1134  04D8  003B               	movlb	27	; select bank27
  1135  04D9  080F               	movf	15,w	;volatile
  1136  04DA  00F4               	movwf	___ltdiv@dividend
  1137  04DB  0810               	movf	16,w	;volatile
  1138  04DC  00F5               	movwf	___ltdiv@dividend+1
  1139  04DD  0811               	movf	17,w	;volatile
  1140  04DE  00F6               	movwf	___ltdiv@dividend+2
  1141  04DF  3185  259C  3184   	fcall	___ltdiv
  1142  04E2  0871               	movf	?___ltdiv,w
  1143  04E3  0021               	movlb	1	; select bank1
  1144  04E4  00A0               	movwf	_smt2Value^(0+128)	;volatile
  1145  04E5  0872               	movf	?___ltdiv+1,w
  1146  04E6  00A1               	movwf	(_smt2Value^(0+128)+1)	;volatile
  1147  04E7  0873               	movf	?___ltdiv+2,w
  1148  04E8  00A2               	movwf	(_smt2Value^(0+128)+2)	;volatile
  1149  04E9  01A3               	clrf	(_smt2Value^(0+128)+3)	;volatile
  1150                           
  1151                           ;smt_main.c: 123:             printf("%ld\n",SMT1CPR&0xffffff);
  1152  04EA  30D7               	movlw	low (STR_1| (0+32768))
  1153  04EB  0020               	movlb	0	; select bank0
  1154  04EC  00E6               	movwf	printf@fmt
  1155  04ED  3086               	movlw	high (STR_1| (0+32768))
  1156  04EE  00E7               	movwf	printf@fmt+1
  1157  04EF  003B               	movlb	27	; select bank27
  1158  04F0  080F               	movf	15,w	;volatile
  1159  04F1  0020               	movlb	0	; select bank0
  1160  04F2  00E8               	movwf	?_printf+2
  1161  04F3  003B               	movlb	27	; select bank27
  1162  04F4  0810               	movf	16,w	;volatile
  1163  04F5  0020               	movlb	0	; select bank0
  1164  04F6  00E9               	movwf	?_printf+3
  1165  04F7  003B               	movlb	27	; select bank27
  1166  04F8  0811               	movf	17,w	;volatile
  1167  04F9  0020               	movlb	0	; select bank0
  1168  04FA  00EA               	movwf	?_printf+4
  1169  04FB  01EB               	clrf	?_printf+5
  1170  04FC  3186  26AE  3184   	fcall	_printf
  1171                           
  1172                           ;smt_main.c: 124:             dataAvailable = 0;
  1173  04FF  01FC               	clrf	_dataAvailable	;volatile
  1174  0500  2CCF               	goto	l95
  1175  0501                     __end_of_main:
  1176                           
  1177                           	psect	text1
  1178  06BE                     __ptext1:	
  1179 ;; *************** function _uart_init *****************
  1180 ;; Defined at:
  1181 ;;		line 62 in file "smt_main.c"
  1182 ;; Parameters:    Size  Location     Type
  1183 ;;		None
  1184 ;; Auto vars:     Size  Location     Type
  1185 ;;		None
  1186 ;; Return value:  Size  Location     Type
  1187 ;;                  1    wreg      void 
  1188 ;; Registers used:
  1189 ;;		wreg, status,2
  1190 ;; Tracked objects:
  1191 ;;		On entry : B1F/1B
  1192 ;;		On exit  : B1F/1D
  1193 ;;		Unchanged: B00/0
  1194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1198 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1199 ;;Total ram usage:        0 bytes
  1200 ;; Hardware stack levels used: 1
  1201 ;; Hardware stack levels required when called: 1
  1202 ;; This function calls:
  1203 ;;		Nothing
  1204 ;; This function is called by:
  1205 ;;		_main
  1206 ;; This function uses a non-reentrant model
  1207 ;;
  1208                           
  1209                           
  1210                           ;psect for function _uart_init
  1211  06BE                     _uart_init:
  1212                           
  1213                           ;smt_main.c: 64:     TX1STAbits.TXEN = 1;
  1214                           
  1215                           ;incstack = 0
  1216                           ; Regs used in _uart_init: [wreg+status,2]
  1217  06BE  0023               	movlb	3	; select bank3
  1218  06BF  169E               	bsf	30,5	;volatile
  1219                           
  1220                           ;smt_main.c: 65:     TX1STAbits.BRGH = 1;
  1221  06C0  151E               	bsf	30,2	;volatile
  1222                           
  1223                           ;smt_main.c: 66:     RC1STAbits.SPEN = 1;
  1224  06C1  179D               	bsf	29,7	;volatile
  1225                           
  1226                           ;smt_main.c: 67:     BAUD1CONbits.BRG16 = 1;
  1227  06C2  159F               	bsf	31,3	;volatile
  1228                           
  1229                           ;smt_main.c: 68:     SPBRGH = 0;
  1230  06C3  019C               	clrf	28	;volatile
  1231                           
  1232                           ;smt_main.c: 69:     SPBRGL = 70;
  1233  06C4  3046               	movlw	70
  1234  06C5  009B               	movwf	27	;volatile
  1235                           
  1236                           ;smt_main.c: 70:     RC7PPS = 0b10010;
  1237  06C6  3012               	movlw	18
  1238  06C7  003D               	movlb	29	; select bank29
  1239  06C8  00A7               	movwf	39	;volatile
  1240  06C9  0008               	return
  1241  06CA                     __end_of_uart_init:
  1242                           
  1243                           	psect	text2
  1244  0666                     __ptext2:	
  1245 ;; *************** function _smt_init *****************
  1246 ;; Defined at:
  1247 ;;		line 43 in file "smt_main.c"
  1248 ;; Parameters:    Size  Location     Type
  1249 ;;		None
  1250 ;; Auto vars:     Size  Location     Type
  1251 ;;		None
  1252 ;; Return value:  Size  Location     Type
  1253 ;;                  1    wreg      void 
  1254 ;; Registers used:
  1255 ;;		wreg, status,2, status,0
  1256 ;; Tracked objects:
  1257 ;;		On entry : B1F/1
  1258 ;;		On exit  : B1F/1B
  1259 ;;		Unchanged: B00/0
  1260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1264 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1265 ;;Total ram usage:        0 bytes
  1266 ;; Hardware stack levels used: 1
  1267 ;; Hardware stack levels required when called: 1
  1268 ;; This function calls:
  1269 ;;		Nothing
  1270 ;; This function is called by:
  1271 ;;		_main
  1272 ;; This function uses a non-reentrant model
  1273 ;;
  1274                           
  1275                           
  1276                           ;psect for function _smt_init
  1277  0666                     _smt_init:
  1278                           
  1279                           ;smt_main.c: 45:     SMT1CON0bits.EN = 1;
  1280                           
  1281                           ;incstack = 0
  1282                           ; Regs used in _smt_init: [wreg+status,2+status,0]
  1283  0666  003B               	movlb	27	; select bank27
  1284  0667  1798               	bsf	24,7	;volatile
  1285                           
  1286                           ;smt_main.c: 46:     SMT1CON1bits.MODE = 0b0010;
  1287  0668  0819               	movf	25,w	;volatile
  1288  0669  39F0               	andlw	-16
  1289  066A  3802               	iorlw	2
  1290  066B  0099               	movwf	25	;volatile
  1291                           
  1292                           ;smt_main.c: 47:     SMT1CON1bits.REPEAT =1;
  1293  066C  1719               	bsf	25,6	;volatile
  1294                           
  1295                           ;smt_main.c: 48:     SMT1CON0bits.SMT1PS = 3;
  1296  066D  3003               	movlw	3
  1297  066E  0498               	iorwf	24,f	;volatile
  1298                           
  1299                           ;smt_main.c: 52:     SMT1PR = 0xffffff;
  1300  066F  30FF               	movlw	255
  1301  0670  0095               	movwf	21	;volatile
  1302  0671  30FF               	movlw	255
  1303  0672  0096               	movwf	22	;volatile
  1304  0673  30FF               	movlw	255
  1305  0674  0097               	movwf	23	;volatile
  1306                           
  1307                           ;smt_main.c: 53:     SMT1CON1bits.SMT1GO = 1;
  1308  0675  1799               	bsf	25,7	;volatile
  1309                           
  1310                           ;smt_main.c: 55:     SMT2CON1bits.MODE = 0;
  1311  0676  30F0               	movlw	-16
  1312  0677  05AB               	andwf	43,f	;volatile
  1313                           
  1314                           ;smt_main.c: 56:     SMT2CON1bits.REPEAT =1;
  1315  0678  172B               	bsf	43,6	;volatile
  1316                           
  1317                           ;smt_main.c: 57:     SMT2CON0bits.SMT2PS = 1;
  1318  0679  082A               	movf	42,w	;volatile
  1319  067A  39FC               	andlw	-4
  1320  067B  3801               	iorlw	1
  1321  067C  00AA               	movwf	42	;volatile
  1322                           
  1323                           ;smt_main.c: 58:     SMT2CON0bits.EN = 1;
  1324  067D  17AA               	bsf	42,7	;volatile
  1325                           
  1326                           ;smt_main.c: 59:     SMT2CON1bits.SMT2GO = 1;
  1327  067E  17AB               	bsf	43,7	;volatile
  1328  067F  0008               	return
  1329  0680                     __end_of_smt_init:
  1330                           
  1331                           	psect	text3
  1332  06AE                     __ptext3:	
  1333 ;; *************** function _printf *****************
  1334 ;; Defined at:
  1335 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\printf.c"
  1336 ;; Parameters:    Size  Location     Type
  1337 ;;  fmt             2   70[BANK0 ] PTR const unsigned char 
  1338 ;;		 -> STR_1(5), 
  1339 ;; Auto vars:     Size  Location     Type
  1340 ;;  ret             2    0        int 
  1341 ;;  ap              1   77[BANK0 ] PTR void [1]
  1342 ;;		 -> ?_printf(2), 
  1343 ;; Return value:  Size  Location     Type
  1344 ;;                  2   70[BANK0 ] int 
  1345 ;; Registers used:
  1346 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1347 ;; Tracked objects:
  1348 ;;		On entry : 1F/0
  1349 ;;		On exit  : 1F/0
  1350 ;;		Unchanged: 0/0
  1351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1352 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1353 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1354 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1355 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1356 ;;Total ram usage:        8 bytes
  1357 ;; Hardware stack levels used: 1
  1358 ;; Hardware stack levels required when called: 8
  1359 ;; This function calls:
  1360 ;;		_vfprintf
  1361 ;; This function is called by:
  1362 ;;		_main
  1363 ;; This function uses a non-reentrant model
  1364 ;;
  1365                           
  1366                           
  1367                           ;psect for function _printf
  1368  06AE                     _printf:
  1369                           
  1370                           ;incstack = 0
  1371                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1372  06AE  3068               	movlw	(low ((?_printf| 0+2)))& (0+255)
  1373  06AF  00EC               	movwf	??_printf
  1374  06B0  086C               	movf	??_printf,w
  1375  06B1  00ED               	movwf	printf@ap
  1376  06B2  0867               	movf	printf@fmt+1,w
  1377  06B3  00DF               	movwf	vfprintf@fmt+1
  1378  06B4  0866               	movf	printf@fmt,w
  1379  06B5  00DE               	movwf	vfprintf@fmt
  1380  06B6  306D               	movlw	(low (printf@ap| 0))& (0+255)
  1381  06B7  00EC               	movwf	??_printf
  1382  06B8  086C               	movf	??_printf,w
  1383  06B9  00E0               	movwf	vfprintf@ap
  1384  06BA  3000               	movlw	0
  1385  06BB  3186  2615         	fcall	_vfprintf
  1386  06BD  0008               	return
  1387  06BE                     __end_of_printf:
  1388                           
  1389                           	psect	text4
  1390  0615                     __ptext4:	
  1391 ;; *************** function _vfprintf *****************
  1392 ;; Defined at:
  1393 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1394 ;; Parameters:    Size  Location     Type
  1395 ;;  fp              1    wreg     PTR struct _IO_FILE
  1396 ;;		 -> NULL(0), 
  1397 ;;  fmt             2   62[BANK0 ] PTR const unsigned char 
  1398 ;;		 -> STR_1(5), 
  1399 ;;  ap              1   64[BANK0 ] PTR PTR void 
  1400 ;;		 -> printf@ap(1), 
  1401 ;; Auto vars:     Size  Location     Type
  1402 ;;  fp              1   67[BANK0 ] PTR struct _IO_FILE
  1403 ;;		 -> NULL(0), 
  1404 ;;  cfmt            2   68[BANK0 ] PTR unsigned char 
  1405 ;;		 -> STR_1(5), 
  1406 ;; Return value:  Size  Location     Type
  1407 ;;                  2   62[BANK0 ] int 
  1408 ;; Registers used:
  1409 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1410 ;; Tracked objects:
  1411 ;;		On entry : 1F/0
  1412 ;;		On exit  : 1F/0
  1413 ;;		Unchanged: 0/0
  1414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1415 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1416 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1417 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1418 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1419 ;;Total ram usage:        8 bytes
  1420 ;; Hardware stack levels used: 1
  1421 ;; Hardware stack levels required when called: 7
  1422 ;; This function calls:
  1423 ;;		_vfpfcnvrt
  1424 ;; This function is called by:
  1425 ;;		_printf
  1426 ;; This function uses a non-reentrant model
  1427 ;;
  1428                           
  1429                           
  1430                           ;psect for function _vfprintf
  1431  0615                     _vfprintf:
  1432                           
  1433                           ;incstack = 0
  1434                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1435                           ;vfprintf@fp stored from wreg
  1436  0615  00E3               	movwf	vfprintf@fp
  1437                           
  1438                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1439  0616  085F               	movf	vfprintf@fmt+1,w
  1440  0617  00E5               	movwf	vfprintf@cfmt+1
  1441  0618  085E               	movf	vfprintf@fmt,w
  1442  0619  00E4               	movwf	vfprintf@cfmt
  1443                           
  1444                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1445  061A  0021               	movlb	1	; select bank1
  1446  061B  01AC               	clrf	_nout^(0+128)
  1447  061C  01AD               	clrf	(_nout+1)^(0+128)
  1448  061D                     l1433:	
  1449                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1450                           
  1451                           
  1452                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1453  061D  0020               	movlb	0	; select bank0
  1454  061E  0864               	movf	vfprintf@cfmt,w
  1455  061F  0084               	movwf	4
  1456  0620  0865               	movf	vfprintf@cfmt+1,w
  1457  0621  0085               	movwf	5
  1458  0622  0012               	moviw fsr0++
  1459  0623  1903               	btfsc	3,2
  1460  0624  2E39               	goto	l1435
  1461                           
  1462                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1463  0625  3064               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  1464  0626  00E1               	movwf	??_vfprintf
  1465  0627  0861               	movf	??_vfprintf,w
  1466  0628  00CE               	movwf	vfpfcnvrt@fmt
  1467  0629  0860               	movf	vfprintf@ap,w
  1468  062A  00E2               	movwf	??_vfprintf+1
  1469  062B  0862               	movf	??_vfprintf+1,w
  1470  062C  00CF               	movwf	vfpfcnvrt@ap
  1471  062D  0863               	movf	vfprintf@fp,w
  1472  062E  3181  218E  3186   	fcall	_vfpfcnvrt
  1473  0631  084E               	movf	?_vfpfcnvrt,w
  1474  0632  0021               	movlb	1	; select bank1
  1475  0633  07AC               	addwf	_nout^(0+128),f
  1476  0634  0020               	movlb	0	; select bank0
  1477  0635  084F               	movf	?_vfpfcnvrt+1,w
  1478  0636  0021               	movlb	1	; select bank1
  1479  0637  3DAD               	addwfc	(_nout+1)^(0+128),f
  1480  0638  2E1D               	goto	l1433
  1481  0639                     l1435:
  1482                           
  1483                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1484  0639  0021               	movlb	1	; select bank1
  1485  063A  082D               	movf	(_nout+1)^(0+128),w
  1486  063B  0020               	movlb	0	; select bank0
  1487  063C  00DF               	movwf	?_vfprintf+1
  1488  063D  0021               	movlb	1	; select bank1
  1489  063E  082C               	movf	_nout^(0+128),w
  1490  063F  0020               	movlb	0	; select bank0
  1491  0640  00DE               	movwf	?_vfprintf
  1492  0641  0008               	return
  1493  0642                     __end_of_vfprintf:
  1494                           
  1495                           	psect	text5
  1496  018E                     __ptext5:	
  1497 ;; *************** function _vfpfcnvrt *****************
  1498 ;; Defined at:
  1499 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1500 ;; Parameters:    Size  Location     Type
  1501 ;;  fp              1    wreg     PTR struct _IO_FILE
  1502 ;;		 -> NULL(0), 
  1503 ;;  fmt             1   46[BANK0 ] PTR PTR unsigned char 
  1504 ;;		 -> vfprintf@cfmt(2), 
  1505 ;;  ap              1   47[BANK0 ] PTR PTR void 
  1506 ;;		 -> printf@ap(1), 
  1507 ;; Auto vars:     Size  Location     Type
  1508 ;;  fp              1   61[BANK0 ] PTR struct _IO_FILE
  1509 ;;		 -> NULL(0), 
  1510 ;;  ll              8   53[BANK0 ] long long 
  1511 ;;  llu             8    0        unsigned long long 
  1512 ;;  f               4    0        unsigned long long 
  1513 ;;  ct              3    0        unsigned char [3]
  1514 ;;  vp              2    0        PTR void 
  1515 ;;  i               2    0        int 
  1516 ;;  done            2    0        int 
  1517 ;;  cp              2    0        PTR unsigned char 
  1518 ;;  c               1    0        unsigned char 
  1519 ;; Return value:  Size  Location     Type
  1520 ;;                  2   46[BANK0 ] int 
  1521 ;; Registers used:
  1522 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1523 ;; Tracked objects:
  1524 ;;		On entry : 1F/0
  1525 ;;		On exit  : 1F/0
  1526 ;;		Unchanged: 0/0
  1527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1528 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1529 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1530 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1531 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1532 ;;Total ram usage:       16 bytes
  1533 ;; Hardware stack levels used: 1
  1534 ;; Hardware stack levels required when called: 6
  1535 ;; This function calls:
  1536 ;;		_dtoa
  1537 ;;		_fputc
  1538 ;;		_strncmp
  1539 ;; This function is called by:
  1540 ;;		_vfprintf
  1541 ;; This function uses a non-reentrant model
  1542 ;;
  1543                           
  1544                           
  1545                           ;psect for function _vfpfcnvrt
  1546  018E                     _vfpfcnvrt:
  1547                           
  1548                           ;incstack = 0
  1549                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1550                           ;vfpfcnvrt@fp stored from wreg
  1551  018E  00DD               	movwf	vfpfcnvrt@fp
  1552                           
  1553                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1554  018F  084E               	movf	vfpfcnvrt@fmt,w
  1555  0190  0086               	movwf	6
  1556  0191  0187               	clrf	7
  1557  0192  3F40               	moviw [0]fsr1
  1558  0193  00D0               	movwf	??_vfpfcnvrt
  1559  0194  3F41               	moviw [1]fsr1
  1560  0195  00D1               	movwf	??_vfpfcnvrt+1
  1561  0196  0850               	movf	??_vfpfcnvrt,w
  1562  0197  0084               	movwf	4
  1563  0198  0851               	movf	??_vfpfcnvrt+1,w
  1564  0199  0085               	movwf	5
  1565  019A  0012               	moviw fsr0++
  1566  019B  3A25               	xorlw	37
  1567  019C  1D03               	btfss	3,2
  1568  019D  2AA6               	goto	l1419
  1569                           
  1570                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1571  019E  084E               	movf	vfpfcnvrt@fmt,w
  1572  019F  0086               	movwf	6
  1573  01A0  0187               	clrf	7
  1574  01A1  3001               	movlw	1
  1575  01A2  0781               	addwf	1,f
  1576  01A3  3141               	addfsr 1,1
  1577  01A4  1803               	skipnc
  1578  01A5  0A81               	incf	1,f
  1579                           
  1580                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1581  01A6  0021               	movlb	1	; select bank1
  1582  01A7  01AE               	clrf	_width^(0+128)
  1583  01A8  01AF               	clrf	(_width+1)^(0+128)
  1584  01A9  0020               	movlb	0	; select bank0
  1585  01AA  01EE               	clrf	_flags
  1586  01AB  01EF               	clrf	_flags+1
  1587                           
  1588                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1589  01AC  30FF               	movlw	255
  1590  01AD  0021               	movlb	1	; select bank1
  1591  01AE  00B0               	movwf	_prec^(0+128)
  1592  01AF  30FF               	movlw	255
  1593  01B0  00B1               	movwf	(_prec^(0+128)+1)
  1594                           
  1595                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  1596  01B1  0020               	movlb	0	; select bank0
  1597  01B2  084E               	movf	vfpfcnvrt@fmt,w
  1598  01B3  0086               	movwf	6
  1599  01B4  0187               	clrf	7
  1600  01B5  3F40               	moviw [0]fsr1
  1601  01B6  00D0               	movwf	??_vfpfcnvrt
  1602  01B7  3F41               	moviw [1]fsr1
  1603  01B8  00D1               	movwf	??_vfpfcnvrt+1
  1604  01B9  0850               	movf	??_vfpfcnvrt,w
  1605  01BA  0084               	movwf	4
  1606  01BB  0851               	movf	??_vfpfcnvrt+1,w
  1607  01BC  0085               	movwf	5
  1608  01BD  0012               	moviw fsr0++
  1609  01BE  3A64               	xorlw	100
  1610  01BF  1903               	btfsc	3,2
  1611  01C0  29D0               	goto	l1383
  1612  01C1  084E               	movf	vfpfcnvrt@fmt,w
  1613  01C2  0086               	movwf	6
  1614  01C3  0187               	clrf	7
  1615  01C4  3F40               	moviw [0]fsr1
  1616  01C5  00D0               	movwf	??_vfpfcnvrt
  1617  01C6  3F41               	moviw [1]fsr1
  1618  01C7  00D1               	movwf	??_vfpfcnvrt+1
  1619  01C8  0850               	movf	??_vfpfcnvrt,w
  1620  01C9  0084               	movwf	4
  1621  01CA  0851               	movf	??_vfpfcnvrt+1,w
  1622  01CB  0085               	movwf	5
  1623  01CC  0012               	moviw fsr0++
  1624  01CD  3A69               	xorlw	105
  1625  01CE  1D03               	btfss	3,2
  1626  01CF  2A09               	goto	l1391
  1627  01D0                     l1383:
  1628                           
  1629                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  1630  01D0  084E               	movf	vfpfcnvrt@fmt,w
  1631  01D1  0086               	movwf	6
  1632  01D2  0187               	clrf	7
  1633  01D3  3001               	movlw	1
  1634  01D4  0781               	addwf	1,f
  1635  01D5  3141               	addfsr 1,1
  1636  01D6  1803               	skipnc
  1637  01D7  0A81               	incf	1,f
  1638                           
  1639                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  1640  01D8  084F               	movf	vfpfcnvrt@ap,w
  1641  01D9  0086               	movwf	6
  1642  01DA  0187               	clrf	7
  1643  01DB  0801               	movf	1,w
  1644  01DC  0084               	movwf	4
  1645  01DD  0185               	clrf	5
  1646  01DE  3002               	movlw	2
  1647  01DF  0781               	addwf	1,f
  1648  01E0  3F00               	moviw [0]fsr0
  1649  01E1  00D0               	movwf	??_vfpfcnvrt
  1650  01E2  3F01               	moviw [1]fsr0
  1651  01E3  00D1               	movwf	??_vfpfcnvrt+1
  1652  01E4  0850               	movf	??_vfpfcnvrt,w
  1653  01E5  00D5               	movwf	vfpfcnvrt@ll
  1654  01E6  0851               	movf	??_vfpfcnvrt+1,w
  1655  01E7  00D6               	movwf	vfpfcnvrt@ll+1
  1656  01E8  0D89               	rlf	9,f
  1657  01E9  3B89               	subwfb	9,f
  1658  01EA  0989               	comf	9,f
  1659  01EB  00D7               	movwf	vfpfcnvrt@ll+2
  1660  01EC  00D8               	movwf	vfpfcnvrt@ll+3
  1661  01ED  00D9               	movwf	vfpfcnvrt@ll+4
  1662  01EE  00DA               	movwf	vfpfcnvrt@ll+5
  1663  01EF  00DB               	movwf	vfpfcnvrt@ll+6
  1664  01F0  00DC               	movwf	vfpfcnvrt@ll+7
  1665                           
  1666                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  1667  01F1  0855               	movf	vfpfcnvrt@ll,w
  1668  01F2  00B0               	movwf	dtoa@d
  1669  01F3  0856               	movf	vfpfcnvrt@ll+1,w
  1670  01F4  00B1               	movwf	dtoa@d+1
  1671  01F5  0857               	movf	vfpfcnvrt@ll+2,w
  1672  01F6  00B2               	movwf	dtoa@d+2
  1673  01F7  0858               	movf	vfpfcnvrt@ll+3,w
  1674  01F8  00B3               	movwf	dtoa@d+3
  1675  01F9  0859               	movf	vfpfcnvrt@ll+4,w
  1676  01FA  00B4               	movwf	dtoa@d+4
  1677  01FB  085A               	movf	vfpfcnvrt@ll+5,w
  1678  01FC  00B5               	movwf	dtoa@d+5
  1679  01FD  085B               	movf	vfpfcnvrt@ll+6,w
  1680  01FE  00B6               	movwf	dtoa@d+6
  1681  01FF  085C               	movf	vfpfcnvrt@ll+7,w
  1682  0200  00B7               	movwf	dtoa@d+7
  1683  0201  085D               	movf	vfpfcnvrt@fp,w
  1684  0202  3180  2047         	fcall	_dtoa
  1685  0204  0831               	movf	?_dtoa+1,w
  1686  0205  00CF               	movwf	?_vfpfcnvrt+1
  1687  0206  0830               	movf	?_dtoa,w
  1688  0207  00CE               	movwf	?_vfpfcnvrt
  1689  0208  0008               	return
  1690  0209                     l1391:
  1691                           
  1692                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 857:         if (
      +                          !strncmp(*fmt, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeo
      +                          f("li")/sizeof("li"[0]))-1))) {
  1693  0209  084E               	movf	vfpfcnvrt@fmt,w
  1694  020A  0086               	movwf	6
  1695  020B  0187               	clrf	7
  1696  020C  3F40               	moviw [0]fsr1
  1697  020D  00F1               	movwf	strncmp@_l
  1698  020E  3F41               	moviw [1]fsr1
  1699  020F  00F2               	movwf	strncmp@_l+1
  1700  0210  30DC               	movlw	low (STR_2| (0+32768))
  1701  0211  00F3               	movwf	strncmp@_r
  1702  0212  3086               	movlw	high (STR_2| (0+32768))
  1703  0213  00F4               	movwf	strncmp@_r+1
  1704  0214  3002               	movlw	2
  1705  0215  00F5               	movwf	strncmp@n
  1706  0216  3000               	movlw	0
  1707  0217  00F6               	movwf	strncmp@n+1
  1708  0218  3185  2501  3181   	fcall	_strncmp
  1709  021B  0871               	movf	?_strncmp,w
  1710  021C  0472               	iorwf	?_strncmp+1,w
  1711  021D  1903               	btfsc	3,2
  1712  021E  2A35               	goto	l1395
  1713  021F  084E               	movf	vfpfcnvrt@fmt,w
  1714  0220  0086               	movwf	6
  1715  0221  0187               	clrf	7
  1716  0222  3F40               	moviw [0]fsr1
  1717  0223  00F1               	movwf	strncmp@_l
  1718  0224  3F41               	moviw [1]fsr1
  1719  0225  00F2               	movwf	strncmp@_l+1
  1720  0226  30DF               	movlw	low (STR_6| (0+32768))
  1721  0227  00F3               	movwf	strncmp@_r
  1722  0228  3086               	movlw	high (STR_6| (0+32768))
  1723  0229  00F4               	movwf	strncmp@_r+1
  1724  022A  3002               	movlw	2
  1725  022B  00F5               	movwf	strncmp@n
  1726  022C  3000               	movlw	0
  1727  022D  00F6               	movwf	strncmp@n+1
  1728  022E  3185  2501  3181   	fcall	_strncmp
  1729  0231  0871               	movf	?_strncmp,w
  1730  0232  0472               	iorwf	?_strncmp+1,w
  1731  0233  1D03               	btfss	3,2
  1732  0234  2A74               	goto	l1403
  1733  0235                     l1395:
  1734                           
  1735                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 858: ;C:\Program 
      +                          Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 860:             *fmt += ((si
      +                          zeof("ld")/sizeof("ld"[0]))-1);
  1736  0235  084E               	movf	vfpfcnvrt@fmt,w
  1737  0236  0086               	movwf	6
  1738  0237  0187               	clrf	7
  1739  0238  3002               	movlw	2
  1740  0239  0781               	addwf	1,f
  1741  023A  3141               	addfsr 1,1
  1742  023B  1803               	skipnc
  1743  023C  0A81               	incf	1,f
  1744                           
  1745                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 861:             
      +                          ll = (long long)(*(long *)__va_arg(*(long **)ap, (long)0));
  1746  023D  084F               	movf	vfpfcnvrt@ap,w
  1747  023E  0086               	movwf	6
  1748  023F  0187               	clrf	7
  1749  0240  0801               	movf	1,w
  1750  0241  0084               	movwf	4
  1751  0242  0185               	clrf	5
  1752  0243  3004               	movlw	4
  1753  0244  0781               	addwf	1,f
  1754  0245  3F00               	moviw [0]fsr0
  1755  0246  00D0               	movwf	??_vfpfcnvrt
  1756  0247  3F01               	moviw [1]fsr0
  1757  0248  00D1               	movwf	??_vfpfcnvrt+1
  1758  0249  3F02               	moviw [2]fsr0
  1759  024A  00D2               	movwf	??_vfpfcnvrt+2
  1760  024B  3F03               	moviw [3]fsr0
  1761  024C  00D3               	movwf	??_vfpfcnvrt+3
  1762  024D  0850               	movf	??_vfpfcnvrt,w
  1763  024E  00D5               	movwf	vfpfcnvrt@ll
  1764  024F  0851               	movf	??_vfpfcnvrt+1,w
  1765  0250  00D6               	movwf	vfpfcnvrt@ll+1
  1766  0251  0852               	movf	??_vfpfcnvrt+2,w
  1767  0252  00D7               	movwf	vfpfcnvrt@ll+2
  1768  0253  0853               	movf	??_vfpfcnvrt+3,w
  1769  0254  00D8               	movwf	vfpfcnvrt@ll+3
  1770  0255  3000               	movlw	0
  1771  0256  1BD8               	btfsc	vfpfcnvrt@ll+3,7
  1772  0257  30FF               	movlw	255
  1773  0258  00D9               	movwf	vfpfcnvrt@ll+4
  1774  0259  00DA               	movwf	vfpfcnvrt@ll+5
  1775  025A  00DB               	movwf	vfpfcnvrt@ll+6
  1776  025B  00DC               	movwf	vfpfcnvrt@ll+7
  1777                           
  1778                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 863:             
      +                          return dtoa(fp, ll);
  1779  025C  0855               	movf	vfpfcnvrt@ll,w
  1780  025D  00B0               	movwf	dtoa@d
  1781  025E  0856               	movf	vfpfcnvrt@ll+1,w
  1782  025F  00B1               	movwf	dtoa@d+1
  1783  0260  0857               	movf	vfpfcnvrt@ll+2,w
  1784  0261  00B2               	movwf	dtoa@d+2
  1785  0262  0858               	movf	vfpfcnvrt@ll+3,w
  1786  0263  00B3               	movwf	dtoa@d+3
  1787  0264  0859               	movf	vfpfcnvrt@ll+4,w
  1788  0265  00B4               	movwf	dtoa@d+4
  1789  0266  085A               	movf	vfpfcnvrt@ll+5,w
  1790  0267  00B5               	movwf	dtoa@d+5
  1791  0268  085B               	movf	vfpfcnvrt@ll+6,w
  1792  0269  00B6               	movwf	dtoa@d+6
  1793  026A  085C               	movf	vfpfcnvrt@ll+7,w
  1794  026B  00B7               	movwf	dtoa@d+7
  1795  026C  085D               	movf	vfpfcnvrt@fp,w
  1796  026D  3180  2047         	fcall	_dtoa
  1797  026F  0831               	movf	?_dtoa+1,w
  1798  0270  00CF               	movwf	?_vfpfcnvrt+1
  1799  0271  0830               	movf	?_dtoa,w
  1800  0272  00CE               	movwf	?_vfpfcnvrt
  1801  0273  0008               	return
  1802  0274                     l1403:
  1803                           
  1804                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  1805  0274  084E               	movf	vfpfcnvrt@fmt,w
  1806  0275  0086               	movwf	6
  1807  0276  0187               	clrf	7
  1808  0277  3F40               	moviw [0]fsr1
  1809  0278  00D0               	movwf	??_vfpfcnvrt
  1810  0279  3F41               	moviw [1]fsr1
  1811  027A  00D1               	movwf	??_vfpfcnvrt+1
  1812  027B  0850               	movf	??_vfpfcnvrt,w
  1813  027C  0084               	movwf	4
  1814  027D  0851               	movf	??_vfpfcnvrt+1,w
  1815  027E  0085               	movwf	5
  1816  027F  0012               	moviw fsr0++
  1817  0280  3A25               	xorlw	37
  1818  0281  1D03               	btfss	3,2
  1819  0282  2A9B               	goto	l1413
  1820                           
  1821                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  1822  0283  084E               	movf	vfpfcnvrt@fmt,w
  1823  0284  0086               	movwf	6
  1824  0285  0187               	clrf	7
  1825  0286  3001               	movlw	1
  1826  0287  0781               	addwf	1,f
  1827  0288  3141               	addfsr 1,1
  1828  0289  1803               	skipnc
  1829  028A  0A81               	incf	1,f
  1830                           
  1831                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  1832  028B  3025               	movlw	37
  1833  028C  00F2               	movwf	fputc@c
  1834  028D  3000               	movlw	0
  1835  028E  00F3               	movwf	fputc@c+1
  1836  028F  085D               	movf	vfpfcnvrt@fp,w
  1837  0290  00D0               	movwf	??_vfpfcnvrt
  1838  0291  0850               	movf	??_vfpfcnvrt,w
  1839  0292  00F4               	movwf	fputc@fp
  1840  0293  3185  25E0         	fcall	_fputc
  1841  0295                     l1409:
  1842                           
  1843                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  1844  0295  3001               	movlw	1
  1845  0296  0020               	movlb	0	; select bank0
  1846  0297  00CE               	movwf	?_vfpfcnvrt
  1847  0298  3000               	movlw	0
  1848  0299  00CF               	movwf	?_vfpfcnvrt+1
  1849  029A  0008               	return
  1850  029B                     l1413:
  1851                           
  1852                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  1853  029B  084E               	movf	vfpfcnvrt@fmt,w
  1854  029C  0086               	movwf	6
  1855  029D  0187               	clrf	7
  1856  029E  3001               	movlw	1
  1857  029F  0781               	addwf	1,f
  1858  02A0  3141               	addfsr 1,1
  1859  02A1  1803               	skipnc
  1860  02A2  0A81               	incf	1,f
  1861                           
  1862                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  1863  02A3  01CE               	clrf	?_vfpfcnvrt
  1864  02A4  01CF               	clrf	?_vfpfcnvrt+1
  1865  02A5  0008               	return
  1866  02A6                     l1419:
  1867                           
  1868                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  1869  02A6  084E               	movf	vfpfcnvrt@fmt,w
  1870  02A7  0086               	movwf	6
  1871  02A8  0187               	clrf	7
  1872  02A9  3F40               	moviw [0]fsr1
  1873  02AA  00D0               	movwf	??_vfpfcnvrt
  1874  02AB  3F41               	moviw [1]fsr1
  1875  02AC  00D1               	movwf	??_vfpfcnvrt+1
  1876  02AD  0850               	movf	??_vfpfcnvrt,w
  1877  02AE  0084               	movwf	4
  1878  02AF  0851               	movf	??_vfpfcnvrt+1,w
  1879  02B0  0085               	movwf	5
  1880  02B1  0800               	movf	0,w	;code access
  1881  02B2  00D2               	movwf	??_vfpfcnvrt+2
  1882  02B3  01D3               	clrf	??_vfpfcnvrt+3
  1883  02B4  0852               	movf	??_vfpfcnvrt+2,w
  1884  02B5  00F2               	movwf	fputc@c
  1885  02B6  0853               	movf	??_vfpfcnvrt+3,w
  1886  02B7  00F3               	movwf	fputc@c+1
  1887  02B8  085D               	movf	vfpfcnvrt@fp,w
  1888  02B9  00D4               	movwf	??_vfpfcnvrt+4
  1889  02BA  0854               	movf	??_vfpfcnvrt+4,w
  1890  02BB  00F4               	movwf	fputc@fp
  1891  02BC  3185  25E0  3181   	fcall	_fputc
  1892                           
  1893                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  1894  02BF  0020               	movlb	0	; select bank0
  1895  02C0  084E               	movf	vfpfcnvrt@fmt,w
  1896  02C1  0086               	movwf	6
  1897  02C2  0187               	clrf	7
  1898  02C3  3001               	movlw	1
  1899  02C4  0781               	addwf	1,f
  1900  02C5  3141               	addfsr 1,1
  1901  02C6  1803               	skipnc
  1902  02C7  0A81               	incf	1,f
  1903  02C8  2A95               	goto	l1409
  1904  02C9                     __end_of_vfpfcnvrt:
  1905                           
  1906                           	psect	text6
  1907  0501                     __ptext6:	
  1908 ;; *************** function _strncmp *****************
  1909 ;; Defined at:
  1910 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strncmp.c"
  1911 ;; Parameters:    Size  Location     Type
  1912 ;;  _l              2    1[COMMON] PTR const unsigned char 
  1913 ;;		 -> STR_1(5), 
  1914 ;;  _r              2    3[COMMON] PTR const unsigned char 
  1915 ;;		 -> STR_8(3), STR_4(3), 
  1916 ;;  n               2    5[COMMON] unsigned int 
  1917 ;; Auto vars:     Size  Location     Type
  1918 ;;  r               2   10[COMMON] PTR const unsigned char 
  1919 ;;		 -> STR_8(3), STR_4(3), 
  1920 ;;  l               2    8[COMMON] PTR const unsigned char 
  1921 ;;		 -> STR_1(5), 
  1922 ;; Return value:  Size  Location     Type
  1923 ;;                  2    1[COMMON] int 
  1924 ;; Registers used:
  1925 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  1926 ;; Tracked objects:
  1927 ;;		On entry : 1F/0
  1928 ;;		On exit  : 1F/0
  1929 ;;		Unchanged: 1F/0
  1930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1931 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1932 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1933 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1934 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1935 ;;Total ram usage:       11 bytes
  1936 ;; Hardware stack levels used: 1
  1937 ;; Hardware stack levels required when called: 1
  1938 ;; This function calls:
  1939 ;;		Nothing
  1940 ;; This function is called by:
  1941 ;;		_vfpfcnvrt
  1942 ;; This function uses a non-reentrant model
  1943 ;;
  1944                           
  1945                           
  1946                           ;psect for function _strncmp
  1947  0501                     _strncmp:
  1948                           
  1949                           ;incstack = 0
  1950                           ; Regs used in _strncmp: [wreg-fsr0h+status,2+status,0+pclath]
  1951  0501  0872               	movf	strncmp@_l+1,w
  1952  0502  00F9               	movwf	strncmp@l+1
  1953  0503  0871               	movf	strncmp@_l,w
  1954  0504  00F8               	movwf	strncmp@l
  1955  0505  0874               	movf	strncmp@_r+1,w
  1956  0506  00FB               	movwf	strncmp@r+1
  1957  0507  0873               	movf	strncmp@_r,w
  1958  0508  00FA               	movwf	strncmp@r
  1959  0509  3001               	movlw	1
  1960  050A  02F5               	subwf	strncmp@n,f
  1961  050B  3000               	movlw	0
  1962  050C  3BF6               	subwfb	strncmp@n+1,f
  1963  050D  0A75               	incf	strncmp@n,w
  1964  050E  1D03               	skipz
  1965  050F  2D3B               	goto	l1359
  1966  0510  0A76               	incf	strncmp@n+1,w
  1967  0511  1D03               	btfss	3,2
  1968  0512  2D3B               	goto	l1359
  1969  0513  01F1               	clrf	?_strncmp
  1970  0514  01F2               	clrf	?_strncmp+1
  1971  0515  0008               	return
  1972  0516                     l1361:
  1973  0516  087A               	movf	strncmp@r,w
  1974  0517  0084               	movwf	4
  1975  0518  087B               	movf	strncmp@r+1,w
  1976  0519  0085               	movwf	5
  1977  051A  0012               	moviw fsr0++
  1978  051B  1903               	btfsc	3,2
  1979  051C  2D42               	goto	l1367
  1980  051D  0875               	movf	strncmp@n,w
  1981  051E  0476               	iorwf	strncmp@n+1,w
  1982  051F  1903               	btfsc	3,2
  1983  0520  2D42               	goto	l1367
  1984  0521  087A               	movf	strncmp@r,w
  1985  0522  0084               	movwf	4
  1986  0523  087B               	movf	strncmp@r+1,w
  1987  0524  0085               	movwf	5
  1988  0525  0800               	movf	0,w	;code access
  1989  0526  00F7               	movwf	??_strncmp
  1990  0527  0878               	movf	strncmp@l,w
  1991  0528  0084               	movwf	4
  1992  0529  0879               	movf	strncmp@l+1,w
  1993  052A  0085               	movwf	5
  1994  052B  0800               	movf	0,w	;code access
  1995  052C  0677               	xorwf	??_strncmp,w
  1996  052D  1D03               	btfss	3,2
  1997  052E  2D42               	goto	l1367
  1998  052F  3001               	movlw	1
  1999  0530  07F8               	addwf	strncmp@l,f
  2000  0531  3000               	movlw	0
  2001  0532  3DF9               	addwfc	strncmp@l+1,f
  2002  0533  3001               	movlw	1
  2003  0534  07FA               	addwf	strncmp@r,f
  2004  0535  3000               	movlw	0
  2005  0536  3DFB               	addwfc	strncmp@r+1,f
  2006  0537  3001               	movlw	1
  2007  0538  02F5               	subwf	strncmp@n,f
  2008  0539  3000               	movlw	0
  2009  053A  3BF6               	subwfb	strncmp@n+1,f
  2010  053B                     l1359:
  2011  053B  0878               	movf	strncmp@l,w
  2012  053C  0084               	movwf	4
  2013  053D  0879               	movf	strncmp@l+1,w
  2014  053E  0085               	movwf	5
  2015  053F  0012               	moviw fsr0++
  2016  0540  1D03               	btfss	3,2
  2017  0541  2D16               	goto	l1361
  2018  0542                     l1367:
  2019  0542  0878               	movf	strncmp@l,w
  2020  0543  0084               	movwf	4
  2021  0544  0879               	movf	strncmp@l+1,w
  2022  0545  0085               	movwf	5
  2023  0546  0800               	movf	0,w	;code access
  2024  0547  00F7               	movwf	??_strncmp
  2025  0548  087A               	movf	strncmp@r,w
  2026  0549  0084               	movwf	4
  2027  054A  087B               	movf	strncmp@r+1,w
  2028  054B  0085               	movwf	5
  2029  054C  0800               	movf	0,w	;code access
  2030  054D  0277               	subwf	??_strncmp,w
  2031  054E  00F1               	movwf	?_strncmp
  2032  054F  01F2               	clrf	?_strncmp+1
  2033  0550  1C03               	skipc
  2034  0551  03F2               	decf	?_strncmp+1,f
  2035  0552  0008               	return
  2036  0553                     __end_of_strncmp:
  2037                           
  2038                           	psect	text7
  2039  0047                     __ptext7:	
  2040 ;; *************** function _dtoa *****************
  2041 ;; Defined at:
  2042 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2043 ;; Parameters:    Size  Location     Type
  2044 ;;  fp              1    wreg     PTR struct _IO_FILE
  2045 ;;		 -> NULL(0), 
  2046 ;;  d               8   16[BANK0 ] long long 
  2047 ;; Auto vars:     Size  Location     Type
  2048 ;;  fp              1   31[BANK0 ] PTR struct _IO_FILE
  2049 ;;		 -> NULL(0), 
  2050 ;;  n               8   36[BANK0 ] long long 
  2051 ;;  i               2   44[BANK0 ] int 
  2052 ;;  s               2   34[BANK0 ] int 
  2053 ;;  w               2   32[BANK0 ] int 
  2054 ;;  p               2   29[BANK0 ] int 
  2055 ;; Return value:  Size  Location     Type
  2056 ;;                  2   16[BANK0 ] int 
  2057 ;; Registers used:
  2058 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2059 ;; Tracked objects:
  2060 ;;		On entry : 1F/0
  2061 ;;		On exit  : 1F/0
  2062 ;;		Unchanged: 0/0
  2063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2064 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2065 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2066 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2067 ;;      Totals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2068 ;;Total ram usage:       30 bytes
  2069 ;; Hardware stack levels used: 1
  2070 ;; Hardware stack levels required when called: 5
  2071 ;; This function calls:
  2072 ;;		___aodiv
  2073 ;;		___aomod
  2074 ;;		_abs
  2075 ;;		_pad
  2076 ;; This function is called by:
  2077 ;;		_vfpfcnvrt
  2078 ;; This function uses a non-reentrant model
  2079 ;;
  2080                           
  2081                           
  2082                           ;psect for function _dtoa
  2083  0047                     _dtoa:
  2084                           
  2085                           ;incstack = 0
  2086                           ; Regs used in _dtoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2087                           ;dtoa@fp stored from wreg
  2088  0047  00BF               	movwf	dtoa@fp
  2089                           
  2090                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  2091  0048  0830               	movf	dtoa@d,w
  2092  0049  00C4               	movwf	dtoa@n
  2093  004A  0831               	movf	dtoa@d+1,w
  2094  004B  00C5               	movwf	dtoa@n+1
  2095  004C  0832               	movf	dtoa@d+2,w
  2096  004D  00C6               	movwf	dtoa@n+2
  2097  004E  0833               	movf	dtoa@d+3,w
  2098  004F  00C7               	movwf	dtoa@n+3
  2099  0050  0834               	movf	dtoa@d+4,w
  2100  0051  00C8               	movwf	dtoa@n+4
  2101  0052  0835               	movf	dtoa@d+5,w
  2102  0053  00C9               	movwf	dtoa@n+5
  2103  0054  0836               	movf	dtoa@d+6,w
  2104  0055  00CA               	movwf	dtoa@n+6
  2105  0056  0837               	movf	dtoa@d+7,w
  2106  0057  00CB               	movwf	dtoa@n+7
  2107                           
  2108                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  2109  0058  3044               	movlw	low dtoa@n
  2110  0059  0086               	movwf	6
  2111  005A  3000               	movlw	high dtoa@n
  2112  005B  0087               	movwf	7
  2113  005C  3F47               	moviw [7]fsr1
  2114  005D  00B8               	movwf	??_dtoa
  2115  005E  1FB8               	btfss	??_dtoa,7
  2116  005F  2862               	goto	u1080
  2117  0060  3001               	movlw	1
  2118  0061  2863               	goto	u1090
  2119  0062                     u1080:
  2120  0062  3000               	movlw	0
  2121  0063                     u1090:
  2122  0063  0020               	movlb	0	; select bank0
  2123  0064  00B9               	movwf	??_dtoa+1
  2124  0065  01BA               	clrf	??_dtoa+2
  2125  0066  0839               	movf	??_dtoa+1,w
  2126  0067  00C2               	movwf	dtoa@s
  2127  0068  083A               	movf	??_dtoa+2,w
  2128  0069  00C3               	movwf	dtoa@s+1
  2129                           
  2130                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  2131  006A  0842               	movf	dtoa@s,w
  2132  006B  0443               	iorwf	dtoa@s+1,w
  2133  006C  1903               	btfsc	3,2
  2134  006D  288C               	goto	l681
  2135                           
  2136                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  2137  006E  09C4               	comf	dtoa@n,f
  2138  006F  09C5               	comf	dtoa@n+1,f
  2139  0070  09C6               	comf	dtoa@n+2,f
  2140  0071  09C7               	comf	dtoa@n+3,f
  2141  0072  09C8               	comf	dtoa@n+4,f
  2142  0073  09C9               	comf	dtoa@n+5,f
  2143  0074  09CA               	comf	dtoa@n+6,f
  2144  0075  09CB               	comf	dtoa@n+7,f
  2145  0076  0AC4               	incf	dtoa@n,f
  2146  0077  1D03               	skipz
  2147  0078  288C               	goto	l681
  2148  0079  0AC5               	incf	dtoa@n+1,f
  2149  007A  1D03               	skipz
  2150  007B  288C               	goto	l681
  2151  007C  0AC6               	incf	dtoa@n+2,f
  2152  007D  1D03               	skipz
  2153  007E  288C               	goto	l681
  2154  007F  0AC7               	incf	dtoa@n+3,f
  2155  0080  1D03               	skipz
  2156  0081  288C               	goto	l681
  2157  0082  0AC8               	incf	dtoa@n+4,f
  2158  0083  1D03               	skipz
  2159  0084  288C               	goto	l681
  2160  0085  0AC9               	incf	dtoa@n+5,f
  2161  0086  1D03               	skipz
  2162  0087  288C               	goto	l681
  2163  0088  0ACA               	incf	dtoa@n+6,f
  2164  0089  1D03               	skipz
  2165  008A  288C               	goto	l681
  2166  008B  0ACB               	incf	dtoa@n+7,f
  2167  008C                     l681:	
  2168                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 297:     }
  2169                           
  2170                           
  2171                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  2172  008C  0021               	movlb	1	; select bank1
  2173  008D  1BB1               	btfsc	(_prec+1)^(0+128),7
  2174  008E  2894               	goto	l682
  2175                           
  2176                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  2177  008F  30FD               	movlw	253
  2178  0090  0020               	movlb	0	; select bank0
  2179  0091  05EE               	andwf	_flags,f
  2180  0092  30FF               	movlw	255
  2181  0093  05EF               	andwf	_flags+1,f
  2182  0094                     l682:	
  2183                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 302:     }
  2184                           
  2185                           
  2186                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  2187  0094  0021               	movlb	1	; select bank1
  2188  0095  0831               	movf	(_prec+1)^(0+128),w
  2189  0096  3A80               	xorlw	128
  2190  0097  0020               	movlb	0	; select bank0
  2191  0098  00B8               	movwf	??_dtoa
  2192  0099  3080               	movlw	128
  2193  009A  0238               	subwf	??_dtoa,w
  2194  009B  1D03               	skipz
  2195  009C  28A0               	goto	u1135
  2196  009D  3001               	movlw	1
  2197  009E  0021               	movlb	1	; select bank1
  2198  009F  0230               	subwf	_prec^(0+128),w
  2199  00A0                     u1135:
  2200  00A0  1803               	skipnc
  2201  00A1  28A8               	goto	l1303
  2202  00A2  3001               	movlw	1
  2203  00A3  0020               	movlb	0	; select bank0
  2204  00A4  00BD               	movwf	dtoa@p
  2205  00A5  3000               	movlw	0
  2206  00A6  00BE               	movwf	dtoa@p+1
  2207  00A7  28B0               	goto	l686
  2208  00A8                     l1303:
  2209  00A8  0021               	movlb	1	; select bank1
  2210  00A9  0831               	movf	(_prec+1)^(0+128),w
  2211  00AA  0020               	movlb	0	; select bank0
  2212  00AB  00BE               	movwf	dtoa@p+1
  2213  00AC  0021               	movlb	1	; select bank1
  2214  00AD  0830               	movf	_prec^(0+128),w
  2215  00AE  0020               	movlb	0	; select bank0
  2216  00AF  00BD               	movwf	dtoa@p
  2217  00B0                     l686:
  2218                           
  2219                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  2220  00B0  0021               	movlb	1	; select bank1
  2221  00B1  082F               	movf	(_width+1)^(0+128),w
  2222  00B2  0020               	movlb	0	; select bank0
  2223  00B3  00C1               	movwf	dtoa@w+1
  2224  00B4  0021               	movlb	1	; select bank1
  2225  00B5  082E               	movf	_width^(0+128),w
  2226  00B6  0020               	movlb	0	; select bank0
  2227  00B7  00C0               	movwf	dtoa@w
  2228                           
  2229                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  2230  00B8  0842               	movf	dtoa@s,w
  2231  00B9  0443               	iorwf	dtoa@s+1,w
  2232  00BA  1D03               	btfss	3,2
  2233  00BB  28BE               	goto	l1309
  2234  00BC  1D6E               	btfss	_flags,2
  2235  00BD  28C2               	goto	l687
  2236  00BE                     l1309:
  2237                           
  2238                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  2239  00BE  30FF               	movlw	255
  2240  00BF  07C0               	addwf	dtoa@w,f
  2241  00C0  30FF               	movlw	255
  2242  00C1  3DC1               	addwfc	dtoa@w+1,f
  2243  00C2                     l687:	
  2244                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 307:     }
  2245                           
  2246                           
  2247                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  2248  00C2  301F               	movlw	31
  2249  00C3  00CC               	movwf	dtoa@i
  2250  00C4  3000               	movlw	0
  2251  00C5  00CD               	movwf	dtoa@i+1
  2252                           
  2253                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  2254  00C6  0021               	movlb	1	; select bank1
  2255  00C7  01D1               	clrf	(_dbuf^(0+128)+31)
  2256                           
  2257                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2258  00C8  2954               	goto	l690
  2259  00C9                     l1323:
  2260  00C9  0020               	movlb	0	; select bank0
  2261  00CA  0844               	movf	dtoa@n,w
  2262  00CB  0445               	iorwf	dtoa@n+1,w
  2263  00CC  0446               	iorwf	dtoa@n+2,w
  2264  00CD  0447               	iorwf	dtoa@n+3,w
  2265  00CE  0448               	iorwf	dtoa@n+4,w
  2266  00CF  0449               	iorwf	dtoa@n+5,w
  2267  00D0  044A               	iorwf	dtoa@n+6,w
  2268  00D1  044B               	iorwf	dtoa@n+7,w
  2269  00D2  1D03               	skipz
  2270  00D3  28EE               	goto	l1313
  2271  00D4  083E               	movf	dtoa@p+1,w
  2272  00D5  3A80               	xorlw	128
  2273  00D6  00B8               	movwf	??_dtoa
  2274  00D7  3080               	movlw	128
  2275  00D8  0238               	subwf	??_dtoa,w
  2276  00D9  1D03               	skipz
  2277  00DA  28DD               	goto	u1185
  2278  00DB  3001               	movlw	1
  2279  00DC  023D               	subwf	dtoa@p,w
  2280  00DD                     u1185:
  2281  00DD  1803               	skipnc
  2282  00DE  28EE               	goto	l1313
  2283  00DF  0020               	movlb	0	; select bank0
  2284  00E0  0841               	movf	dtoa@w+1,w
  2285  00E1  3A80               	xorlw	128
  2286  00E2  00B8               	movwf	??_dtoa
  2287  00E3  3080               	movlw	128
  2288  00E4  0238               	subwf	??_dtoa,w
  2289  00E5  1D03               	skipz
  2290  00E6  28E9               	goto	u1195
  2291  00E7  3001               	movlw	1
  2292  00E8  0240               	subwf	dtoa@w,w
  2293  00E9                     u1195:
  2294  00E9  1C03               	skipc
  2295  00EA  2960               	goto	l1331
  2296  00EB  0020               	movlb	0	; select bank0
  2297  00EC  1CEE               	btfss	_flags,1
  2298  00ED  2960               	goto	l1331
  2299  00EE                     l1313:
  2300                           
  2301                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  2302  00EE  30FF               	movlw	255
  2303  00EF  0020               	movlb	0	; select bank0
  2304  00F0  07CC               	addwf	dtoa@i,f
  2305  00F1  30FF               	movlw	255
  2306  00F2  3DCD               	addwfc	dtoa@i+1,f
  2307                           
  2308                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  2309  00F3  300A               	movlw	10
  2310  00F4  00A0               	movwf	___aomod@divisor
  2311  00F5  01A1               	clrf	___aomod@divisor+1
  2312  00F6  01A2               	clrf	___aomod@divisor+2
  2313  00F7  01A3               	clrf	___aomod@divisor+3
  2314  00F8  01A4               	clrf	___aomod@divisor+4
  2315  00F9  01A5               	clrf	___aomod@divisor+5
  2316  00FA  01A6               	clrf	___aomod@divisor+6
  2317  00FB  01A7               	clrf	___aomod@divisor+7
  2318  00FC  0844               	movf	dtoa@n,w
  2319  00FD  00A8               	movwf	___aomod@dividend
  2320  00FE  0845               	movf	dtoa@n+1,w
  2321  00FF  00A9               	movwf	___aomod@dividend+1
  2322  0100  0846               	movf	dtoa@n+2,w
  2323  0101  00AA               	movwf	___aomod@dividend+2
  2324  0102  0847               	movf	dtoa@n+3,w
  2325  0103  00AB               	movwf	___aomod@dividend+3
  2326  0104  0848               	movf	dtoa@n+4,w
  2327  0105  00AC               	movwf	___aomod@dividend+4
  2328  0106  0849               	movf	dtoa@n+5,w
  2329  0107  00AD               	movwf	___aomod@dividend+5
  2330  0108  084A               	movf	dtoa@n+6,w
  2331  0109  00AE               	movwf	___aomod@dividend+6
  2332  010A  084B               	movf	dtoa@n+7,w
  2333  010B  00AF               	movwf	___aomod@dividend+7
  2334  010C  3183  23BC  3180   	fcall	___aomod
  2335  010F  0821               	movf	?___aomod+1,w
  2336  0110  00F5               	movwf	abs@a+1
  2337  0111  0820               	movf	?___aomod,w
  2338  0112  00F4               	movwf	abs@a
  2339  0113  3186  2697  3180   	fcall	_abs
  2340  0116  0874               	movf	?_abs,w
  2341  0117  3E30               	addlw	48
  2342  0118  0020               	movlb	0	; select bank0
  2343  0119  00B8               	movwf	??_dtoa
  2344  011A  084C               	movf	dtoa@i,w
  2345  011B  3EB2               	addlw	(low (_dbuf| 0))& (0+255)
  2346  011C  0086               	movwf	6
  2347  011D  0187               	clrf	7
  2348  011E  0838               	movf	??_dtoa,w
  2349  011F  0081               	movwf	1
  2350                           
  2351                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  2352  0120  30FF               	movlw	255
  2353  0121  07BD               	addwf	dtoa@p,f
  2354  0122  30FF               	movlw	255
  2355  0123  3DBE               	addwfc	dtoa@p+1,f
  2356                           
  2357                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  2358  0124  30FF               	movlw	255
  2359  0125  07C0               	addwf	dtoa@w,f
  2360  0126  30FF               	movlw	255
  2361  0127  3DC1               	addwfc	dtoa@w+1,f
  2362                           
  2363                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  2364  0128  300A               	movlw	10
  2365  0129  00A0               	movwf	___aodiv@divisor
  2366  012A  01A1               	clrf	___aodiv@divisor+1
  2367  012B  01A2               	clrf	___aodiv@divisor+2
  2368  012C  01A3               	clrf	___aodiv@divisor+3
  2369  012D  01A4               	clrf	___aodiv@divisor+4
  2370  012E  01A5               	clrf	___aodiv@divisor+5
  2371  012F  01A6               	clrf	___aodiv@divisor+6
  2372  0130  01A7               	clrf	___aodiv@divisor+7
  2373  0131  0844               	movf	dtoa@n,w
  2374  0132  00A8               	movwf	___aodiv@dividend
  2375  0133  0845               	movf	dtoa@n+1,w
  2376  0134  00A9               	movwf	___aodiv@dividend+1
  2377  0135  0846               	movf	dtoa@n+2,w
  2378  0136  00AA               	movwf	___aodiv@dividend+2
  2379  0137  0847               	movf	dtoa@n+3,w
  2380  0138  00AB               	movwf	___aodiv@dividend+3
  2381  0139  0848               	movf	dtoa@n+4,w
  2382  013A  00AC               	movwf	___aodiv@dividend+4
  2383  013B  0849               	movf	dtoa@n+5,w
  2384  013C  00AD               	movwf	___aodiv@dividend+5
  2385  013D  084A               	movf	dtoa@n+6,w
  2386  013E  00AE               	movwf	___aodiv@dividend+6
  2387  013F  084B               	movf	dtoa@n+7,w
  2388  0140  00AF               	movwf	___aodiv@dividend+7
  2389  0141  3182  22C9  3180   	fcall	___aodiv
  2390  0144  0820               	movf	?___aodiv,w
  2391  0145  00C4               	movwf	dtoa@n
  2392  0146  0821               	movf	?___aodiv+1,w
  2393  0147  00C5               	movwf	dtoa@n+1
  2394  0148  0822               	movf	?___aodiv+2,w
  2395  0149  00C6               	movwf	dtoa@n+2
  2396  014A  0823               	movf	?___aodiv+3,w
  2397  014B  00C7               	movwf	dtoa@n+3
  2398  014C  0824               	movf	?___aodiv+4,w
  2399  014D  00C8               	movwf	dtoa@n+4
  2400  014E  0825               	movf	?___aodiv+5,w
  2401  014F  00C9               	movwf	dtoa@n+5
  2402  0150  0826               	movf	?___aodiv+6,w
  2403  0151  00CA               	movwf	dtoa@n+6
  2404  0152  0827               	movf	?___aodiv+7,w
  2405  0153  00CB               	movwf	dtoa@n+7
  2406  0154                     l690:	
  2407                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 318:     }
  2408                           
  2409                           
  2410                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2411  0154  0020               	movlb	0	; select bank0
  2412  0155  084D               	movf	dtoa@i+1,w
  2413  0156  3A80               	xorlw	128
  2414  0157  00B8               	movwf	??_dtoa
  2415  0158  3080               	movlw	128
  2416  0159  0238               	subwf	??_dtoa,w
  2417  015A  1D03               	skipz
  2418  015B  295E               	goto	u1165
  2419  015C  3001               	movlw	1
  2420  015D  024C               	subwf	dtoa@i,w
  2421  015E                     u1165:
  2422  015E  1803               	btfsc	3,0
  2423  015F  28C9               	goto	l1323
  2424  0160                     l1331:
  2425                           
  2426                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  2427  0160  0020               	movlb	0	; select bank0
  2428  0161  0842               	movf	dtoa@s,w
  2429  0162  0443               	iorwf	dtoa@s+1,w
  2430  0163  1D03               	btfss	3,2
  2431  0164  2967               	goto	l1335
  2432  0165  1D6E               	btfss	_flags,2
  2433  0166  297D               	goto	l1345
  2434  0167                     l1335:
  2435                           
  2436                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  2437  0167  30FF               	movlw	255
  2438  0168  07CC               	addwf	dtoa@i,f
  2439  0169  30FF               	movlw	255
  2440  016A  3DCD               	addwfc	dtoa@i+1,f
  2441                           
  2442                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  2443  016B  0842               	movf	dtoa@s,w
  2444  016C  0443               	iorwf	dtoa@s+1,w
  2445  016D  1D03               	btfss	3,2
  2446  016E  2971               	goto	l1341
  2447  016F  302B               	movlw	43
  2448  0170  2972               	goto	L1
  2449  0171                     l1341:
  2450  0171  302D               	movlw	45
  2451  0172                     L1:
  2452  0172  00BB               	movwf	_dtoa$1031
  2453  0173  3000               	movlw	0
  2454  0174  00BC               	movwf	_dtoa$1031+1
  2455  0175  083B               	movf	_dtoa$1031,w
  2456  0176  00B8               	movwf	??_dtoa
  2457  0177  084C               	movf	dtoa@i,w
  2458  0178  3EB2               	addlw	(low (_dbuf| 0))& (0+255)
  2459  0179  0086               	movwf	6
  2460  017A  0187               	clrf	7
  2461  017B  0838               	movf	??_dtoa,w
  2462  017C  0081               	movwf	1
  2463  017D                     l1345:
  2464                           
  2465                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  2466  017D  084C               	movf	dtoa@i,w
  2467  017E  3EB2               	addlw	(low (_dbuf| 0))& (0+255)
  2468  017F  00B8               	movwf	??_dtoa
  2469  0180  0838               	movf	??_dtoa,w
  2470  0181  00A7               	movwf	pad@buf
  2471  0182  0841               	movf	dtoa@w+1,w
  2472  0183  00A9               	movwf	pad@p+1
  2473  0184  0840               	movf	dtoa@w,w
  2474  0185  00A8               	movwf	pad@p
  2475  0186  083F               	movf	dtoa@fp,w
  2476  0187  3185  2553         	fcall	_pad
  2477  0189  0828               	movf	?_pad+1,w
  2478  018A  00B1               	movwf	?_dtoa+1
  2479  018B  0827               	movf	?_pad,w
  2480  018C  00B0               	movwf	?_dtoa
  2481  018D  0008               	return
  2482  018E                     __end_of_dtoa:
  2483                           
  2484                           	psect	text8
  2485  0553                     __ptext8:	
  2486 ;; *************** function _pad *****************
  2487 ;; Defined at:
  2488 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2489 ;; Parameters:    Size  Location     Type
  2490 ;;  fp              1    wreg     PTR struct _IO_FILE
  2491 ;;		 -> NULL(0), 
  2492 ;;  buf             1    7[BANK0 ] PTR unsigned char 
  2493 ;;		 -> dbuf(32), 
  2494 ;;  p               2    8[BANK0 ] int 
  2495 ;; Auto vars:     Size  Location     Type
  2496 ;;  fp              1   14[BANK0 ] PTR struct _IO_FILE
  2497 ;;		 -> NULL(0), 
  2498 ;;  w               2   12[BANK0 ] int 
  2499 ;;  i               2   10[BANK0 ] int 
  2500 ;; Return value:  Size  Location     Type
  2501 ;;                  2    7[BANK0 ] int 
  2502 ;; Registers used:
  2503 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2504 ;; Tracked objects:
  2505 ;;		On entry : 1F/0
  2506 ;;		On exit  : 1F/0
  2507 ;;		Unchanged: 0/0
  2508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2509 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2510 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2511 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2512 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2513 ;;Total ram usage:        9 bytes
  2514 ;; Hardware stack levels used: 1
  2515 ;; Hardware stack levels required when called: 4
  2516 ;; This function calls:
  2517 ;;		_fputc
  2518 ;;		_fputs
  2519 ;;		_strlen
  2520 ;; This function is called by:
  2521 ;;		_dtoa
  2522 ;; This function uses a non-reentrant model
  2523 ;;
  2524                           
  2525                           
  2526                           ;psect for function _pad
  2527  0553                     _pad:
  2528                           
  2529                           ;incstack = 0
  2530                           ; Regs used in _pad: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2531                           ;pad@fp stored from wreg
  2532  0553  00AE               	movwf	pad@fp
  2533                           
  2534                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  2535  0554  1C6E               	btfss	_flags,0
  2536  0555  2D5E               	goto	l1271
  2537                           
  2538                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  2539  0556  082E               	movf	pad@fp,w
  2540  0557  00FB               	movwf	??_pad
  2541  0558  087B               	movf	??_pad,w
  2542  0559  00FA               	movwf	fputs@fp
  2543  055A  0827               	movf	pad@buf,w
  2544  055B  3186  2642  3185   	fcall	_fputs
  2545  055E                     l1271:
  2546                           
  2547                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  2548  055E  1BA9               	btfsc	pad@p+1,7
  2549  055F  2D65               	goto	l1275
  2550  0560  0829               	movf	pad@p+1,w
  2551  0561  00AD               	movwf	pad@w+1
  2552  0562  0828               	movf	pad@p,w
  2553  0563  00AC               	movwf	pad@w
  2554  0564  2D67               	goto	l673
  2555  0565                     l1275:
  2556  0565  01AC               	clrf	pad@w
  2557  0566  01AD               	clrf	pad@w+1
  2558  0567                     l673:
  2559                           
  2560                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  2561  0567  01AA               	clrf	pad@i
  2562  0568  01AB               	clrf	pad@i+1
  2563  0569                     l1281:	
  2564                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2565                           
  2566                           
  2567                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2568  0569  082B               	movf	pad@i+1,w
  2569  056A  3A80               	xorlw	128
  2570  056B  00FB               	movwf	??_pad
  2571  056C  082D               	movf	pad@w+1,w
  2572  056D  3A80               	xorlw	128
  2573  056E  027B               	subwf	??_pad,w
  2574  056F  1D03               	skipz
  2575  0570  2D73               	goto	u1055
  2576  0571  082C               	movf	pad@w,w
  2577  0572  022A               	subwf	pad@i,w
  2578  0573                     u1055:
  2579  0573  1803               	btfsc	3,0
  2580  0574  2D87               	goto	l676
  2581                           
  2582                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  2583  0575  3020               	movlw	32
  2584  0576  00F2               	movwf	fputc@c
  2585  0577  3000               	movlw	0
  2586  0578  00F3               	movwf	fputc@c+1
  2587  0579  0020               	movlb	0	; select bank0
  2588  057A  082E               	movf	pad@fp,w
  2589  057B  00FB               	movwf	??_pad
  2590  057C  087B               	movf	??_pad,w
  2591  057D  00F4               	movwf	fputc@fp
  2592  057E  3185  25E0  3185   	fcall	_fputc
  2593                           
  2594                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  2595  0581  3001               	movlw	1
  2596  0582  0020               	movlb	0	; select bank0
  2597  0583  07AA               	addwf	pad@i,f
  2598  0584  3000               	movlw	0
  2599  0585  3DAB               	addwfc	pad@i+1,f
  2600  0586  2D69               	goto	l1281
  2601  0587                     l676:
  2602                           
  2603                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  2604  0587  0020               	movlb	0	; select bank0
  2605  0588  186E               	btfsc	_flags,0
  2606  0589  2D92               	goto	l677
  2607                           
  2608                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  2609  058A  082E               	movf	pad@fp,w
  2610  058B  00FB               	movwf	??_pad
  2611  058C  087B               	movf	??_pad,w
  2612  058D  00FA               	movwf	fputs@fp
  2613  058E  0827               	movf	pad@buf,w
  2614  058F  3186  2642  3185   	fcall	_fputs
  2615  0592                     l677:	
  2616                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 92:     }
  2617                           
  2618                           
  2619                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  2620  0592  0827               	movf	pad@buf,w
  2621  0593  3186  2680         	fcall	_strlen
  2622  0595  082C               	movf	pad@w,w
  2623  0596  0771               	addwf	?_strlen,w
  2624  0597  00A7               	movwf	?_pad
  2625  0598  082D               	movf	pad@w+1,w
  2626  0599  3D72               	addwfc	?_strlen+1,w
  2627  059A  00A8               	movwf	?_pad+1
  2628  059B  0008               	return
  2629  059C                     __end_of_pad:
  2630                           
  2631                           	psect	text9
  2632  0680                     __ptext9:	
  2633 ;; *************** function _strlen *****************
  2634 ;; Defined at:
  2635 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  2636 ;; Parameters:    Size  Location     Type
  2637 ;;  s               1    wreg     PTR const unsigned char 
  2638 ;;		 -> dbuf(32), 
  2639 ;; Auto vars:     Size  Location     Type
  2640 ;;  s               1    5[COMMON] PTR const unsigned char 
  2641 ;;		 -> dbuf(32), 
  2642 ;;  a               1    4[COMMON] PTR const unsigned char 
  2643 ;;		 -> dbuf(32), 
  2644 ;; Return value:  Size  Location     Type
  2645 ;;                  2    1[COMMON] unsigned int 
  2646 ;; Registers used:
  2647 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2648 ;; Tracked objects:
  2649 ;;		On entry : 1F/0
  2650 ;;		On exit  : 1F/0
  2651 ;;		Unchanged: 1F/0
  2652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2653 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2654 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2655 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2656 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2657 ;;Total ram usage:        5 bytes
  2658 ;; Hardware stack levels used: 1
  2659 ;; Hardware stack levels required when called: 1
  2660 ;; This function calls:
  2661 ;;		Nothing
  2662 ;; This function is called by:
  2663 ;;		_pad
  2664 ;; This function uses a non-reentrant model
  2665 ;;
  2666                           
  2667                           
  2668                           ;psect for function _strlen
  2669  0680                     _strlen:
  2670                           
  2671                           ;incstack = 0
  2672                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  2673                           ;strlen@s stored from wreg
  2674  0680  00F5               	movwf	strlen@s
  2675  0681  0875               	movf	strlen@s,w
  2676  0682  00F3               	movwf	??_strlen
  2677  0683  0873               	movf	??_strlen,w
  2678  0684  00F4               	movwf	strlen@a
  2679  0685                     l1193:
  2680  0685  0875               	movf	strlen@s,w
  2681  0686  0086               	movwf	6
  2682  0687  0187               	clrf	7
  2683  0688  0801               	movf	1,w
  2684  0689  1903               	btfsc	3,2
  2685  068A  2E90               	goto	l1195
  2686  068B  3001               	movlw	1
  2687  068C  00F3               	movwf	??_strlen
  2688  068D  0873               	movf	??_strlen,w
  2689  068E  07F5               	addwf	strlen@s,f
  2690  068F  2E85               	goto	l1193
  2691  0690                     l1195:
  2692  0690  0874               	movf	strlen@a,w
  2693  0691  0275               	subwf	strlen@s,w
  2694  0692  00F1               	movwf	?_strlen
  2695  0693  01F2               	clrf	?_strlen+1
  2696  0694  1BF1               	btfsc	?_strlen,7
  2697  0695  03F2               	decf	?_strlen+1,f
  2698  0696  0008               	return
  2699  0697                     __end_of_strlen:
  2700                           
  2701                           	psect	text10
  2702  0642                     __ptext10:	
  2703 ;; *************** function _fputs *****************
  2704 ;; Defined at:
  2705 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  2706 ;; Parameters:    Size  Location     Type
  2707 ;;  s               1    wreg     PTR const unsigned char 
  2708 ;;		 -> dbuf(32), 
  2709 ;;  fp              1   10[COMMON] PTR struct _IO_FILE
  2710 ;;		 -> NULL(0), 
  2711 ;; Auto vars:     Size  Location     Type
  2712 ;;  s               1    6[BANK0 ] PTR const unsigned char 
  2713 ;;		 -> dbuf(32), 
  2714 ;;  i               2    4[BANK0 ] int 
  2715 ;;  c               1    3[BANK0 ] unsigned char 
  2716 ;; Return value:  Size  Location     Type
  2717 ;;                  2   10[COMMON] int 
  2718 ;; Registers used:
  2719 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2720 ;; Tracked objects:
  2721 ;;		On entry : 1F/0
  2722 ;;		On exit  : 1F/0
  2723 ;;		Unchanged: 0/0
  2724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2725 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2726 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2727 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2728 ;;      Totals:         1       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2729 ;;Total ram usage:        8 bytes
  2730 ;; Hardware stack levels used: 1
  2731 ;; Hardware stack levels required when called: 3
  2732 ;; This function calls:
  2733 ;;		_fputc
  2734 ;; This function is called by:
  2735 ;;		_pad
  2736 ;; This function uses a non-reentrant model
  2737 ;;
  2738                           
  2739                           
  2740                           ;psect for function _fputs
  2741  0642                     _fputs:
  2742                           
  2743                           ;incstack = 0
  2744                           ; Regs used in _fputs: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2745                           ;fputs@s stored from wreg
  2746  0642  00A6               	movwf	fputs@s
  2747  0643  01A4               	clrf	fputs@i
  2748  0644  01A5               	clrf	fputs@i+1
  2749  0645                     l1187:
  2750  0645  0824               	movf	fputs@i,w
  2751  0646  0726               	addwf	fputs@s,w
  2752  0647  00A0               	movwf	??_fputs
  2753  0648  0820               	movf	??_fputs,w
  2754  0649  0086               	movwf	6
  2755  064A  0187               	clrf	7
  2756  064B  0801               	movf	1,w
  2757  064C  00A1               	movwf	??_fputs+1
  2758  064D  0821               	movf	??_fputs+1,w
  2759  064E  00A3               	movwf	fputs@c
  2760  064F  0823               	movf	fputs@c,w
  2761  0650  1903               	btfsc	3,2
  2762  0651  0008               	return
  2763  0652  0823               	movf	fputs@c,w
  2764  0653  00A0               	movwf	??_fputs
  2765  0654  01A1               	clrf	??_fputs+1
  2766  0655  0820               	movf	??_fputs,w
  2767  0656  00F2               	movwf	fputc@c
  2768  0657  0821               	movf	??_fputs+1,w
  2769  0658  00F3               	movwf	fputc@c+1
  2770  0659  087A               	movf	fputs@fp,w
  2771  065A  00A2               	movwf	??_fputs+2
  2772  065B  0822               	movf	??_fputs+2,w
  2773  065C  00F4               	movwf	fputc@fp
  2774  065D  3185  25E0  3186   	fcall	_fputc
  2775  0660  3001               	movlw	1
  2776  0661  0020               	movlb	0	; select bank0
  2777  0662  07A4               	addwf	fputs@i,f
  2778  0663  3000               	movlw	0
  2779  0664  3DA5               	addwfc	fputs@i+1,f
  2780  0665  2E45               	goto	l1187
  2781  0666                     __end_of_fputs:
  2782                           
  2783                           	psect	text11
  2784  05E0                     __ptext11:	
  2785 ;; *************** function _fputc *****************
  2786 ;; Defined at:
  2787 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  2788 ;; Parameters:    Size  Location     Type
  2789 ;;  c               2    2[COMMON] int 
  2790 ;;  fp              1    4[COMMON] PTR struct _IO_FILE
  2791 ;;		 -> NULL(0), 
  2792 ;; Auto vars:     Size  Location     Type
  2793 ;;		None
  2794 ;; Return value:  Size  Location     Type
  2795 ;;                  2    2[COMMON] int 
  2796 ;; Registers used:
  2797 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2798 ;; Tracked objects:
  2799 ;;		On entry : 1F/0
  2800 ;;		On exit  : 0/0
  2801 ;;		Unchanged: 0/0
  2802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2803 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2805 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2806 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2807 ;;Total ram usage:        8 bytes
  2808 ;; Hardware stack levels used: 1
  2809 ;; Hardware stack levels required when called: 2
  2810 ;; This function calls:
  2811 ;;		_putch
  2812 ;; This function is called by:
  2813 ;;		_pad
  2814 ;;		_vfpfcnvrt
  2815 ;;		_fputs
  2816 ;; This function uses a non-reentrant model
  2817 ;;
  2818                           
  2819                           
  2820                           ;psect for function _fputc
  2821  05E0                     _fputc:
  2822                           
  2823                           ;incstack = 0
  2824                           ; Regs used in _fputc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2825  05E0  0874               	movf	fputc@fp,w
  2826  05E1  1D03               	btfss	3,2
  2827  05E2  0874               	movf	fputc@fp,w
  2828  05E3  1D03               	btfss	3,2
  2829  05E4  2DE9               	goto	l1173
  2830  05E5  0872               	movf	fputc@c,w
  2831  05E6  3186  26CA         	fcall	_putch
  2832  05E8  0008               	return
  2833  05E9                     l1173:
  2834  05E9  0874               	movf	fputc@fp,w
  2835  05EA  3E03               	addlw	3
  2836  05EB  0086               	movwf	6
  2837  05EC  0187               	clrf	7
  2838  05ED  0016               	moviw fsr1++
  2839  05EE  0401               	iorwf	1,w
  2840  05EF  1903               	btfsc	3,2
  2841  05F0  2E0C               	goto	l1177
  2842  05F1  0874               	movf	fputc@fp,w
  2843  05F2  3E03               	addlw	3
  2844  05F3  0086               	movwf	6
  2845  05F4  0187               	clrf	7
  2846  05F5  3F40               	moviw [0]fsr1
  2847  05F6  00F5               	movwf	??_fputc
  2848  05F7  3F41               	moviw [1]fsr1
  2849  05F8  00F6               	movwf	??_fputc+1
  2850  05F9  0A74               	incf	fputc@fp,w
  2851  05FA  0086               	movwf	6
  2852  05FB  0187               	clrf	7
  2853  05FC  3F40               	moviw [0]fsr1
  2854  05FD  00F7               	movwf	??_fputc+2
  2855  05FE  3F41               	moviw [1]fsr1
  2856  05FF  00F8               	movwf	??_fputc+3
  2857  0600  0878               	movf	??_fputc+3,w
  2858  0601  3A80               	xorlw	128
  2859  0602  00F9               	movwf	??_fputc+4
  2860  0603  0876               	movf	??_fputc+1,w
  2861  0604  3A80               	xorlw	128
  2862  0605  0279               	subwf	??_fputc+4,w
  2863  0606  1D03               	skipz
  2864  0607  2E0A               	goto	u795
  2865  0608  0875               	movf	??_fputc,w
  2866  0609  0277               	subwf	??_fputc+2,w
  2867  060A                     u795:
  2868  060A  1803               	skipnc
  2869  060B  0008               	return
  2870  060C                     l1177:
  2871  060C  0A74               	incf	fputc@fp,w
  2872  060D  0086               	movwf	6
  2873  060E  0187               	clrf	7
  2874  060F  3001               	movlw	1
  2875  0610  0781               	addwf	1,f
  2876  0611  3141               	addfsr 1,1
  2877  0612  1803               	skipnc
  2878  0613  0A81               	incf	1,f
  2879  0614  0008               	return
  2880  0615                     __end_of_fputc:
  2881                           
  2882                           	psect	text12
  2883  06CA                     __ptext12:	
  2884 ;; *************** function _putch *****************
  2885 ;; Defined at:
  2886 ;;		line 147 in file "smt_main.c"
  2887 ;; Parameters:    Size  Location     Type
  2888 ;;  c               1    wreg     unsigned char 
  2889 ;; Auto vars:     Size  Location     Type
  2890 ;;  c               1    1[COMMON] unsigned char 
  2891 ;; Return value:  Size  Location     Type
  2892 ;;                  1    wreg      void 
  2893 ;; Registers used:
  2894 ;;		wreg
  2895 ;; Tracked objects:
  2896 ;;		On entry : 1F/0
  2897 ;;		On exit  : 1F/3
  2898 ;;		Unchanged: 0/0
  2899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2901 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2903 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2904 ;;Total ram usage:        1 bytes
  2905 ;; Hardware stack levels used: 1
  2906 ;; Hardware stack levels required when called: 1
  2907 ;; This function calls:
  2908 ;;		Nothing
  2909 ;; This function is called by:
  2910 ;;		_fputc
  2911 ;; This function uses a non-reentrant model
  2912 ;;
  2913                           
  2914                           
  2915                           ;psect for function _putch
  2916  06CA                     _putch:
  2917                           
  2918                           ;incstack = 0
  2919                           ; Regs used in _putch: [wreg]
  2920                           ;putch@c stored from wreg
  2921  06CA  00F1               	movwf	putch@c
  2922                           
  2923                           ;smt_main.c: 147: void putch(char c);smt_main.c: 148: {;smt_main.c: 149:        TX1REG =
      +                           c;
  2924  06CB  0871               	movf	putch@c,w
  2925  06CC  0023               	movlb	3	; select bank3
  2926  06CD  009A               	movwf	26	;volatile
  2927  06CE                     l110:	
  2928                           ;smt_main.c: 150:        while(TX1STAbits.TRMT != 1);
  2929                           
  2930  06CE  189E               	btfsc	30,1	;volatile
  2931  06CF  0008               	return
  2932  06D0  2ECE               	goto	l110
  2933  06D1                     __end_of_putch:
  2934                           
  2935                           	psect	text13
  2936  0697                     __ptext13:	
  2937 ;; *************** function _abs *****************
  2938 ;; Defined at:
  2939 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
  2940 ;; Parameters:    Size  Location     Type
  2941 ;;  a               2    4[COMMON] int 
  2942 ;; Auto vars:     Size  Location     Type
  2943 ;;		None
  2944 ;; Return value:  Size  Location     Type
  2945 ;;                  2    4[COMMON] int 
  2946 ;; Registers used:
  2947 ;;		wreg, status,2, status,0
  2948 ;; Tracked objects:
  2949 ;;		On entry : 1F/0
  2950 ;;		On exit  : 0/0
  2951 ;;		Unchanged: 0/0
  2952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2953 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2955 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2956 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2957 ;;Total ram usage:        4 bytes
  2958 ;; Hardware stack levels used: 1
  2959 ;; Hardware stack levels required when called: 1
  2960 ;; This function calls:
  2961 ;;		Nothing
  2962 ;; This function is called by:
  2963 ;;		_dtoa
  2964 ;; This function uses a non-reentrant model
  2965 ;;
  2966                           
  2967                           
  2968                           ;psect for function _abs
  2969  0697                     _abs:
  2970                           
  2971                           ;incstack = 0
  2972                           ; Regs used in _abs: [wreg+status,2+status,0]
  2973  0697  0875               	movf	abs@a+1,w
  2974  0698  3A80               	xorlw	128
  2975  0699  00F6               	movwf	??_abs
  2976  069A  3080               	movlw	128
  2977  069B  0276               	subwf	??_abs,w
  2978  069C  1D03               	skipz
  2979  069D  2EA0               	goto	u1075
  2980  069E  3001               	movlw	1
  2981  069F  0274               	subwf	abs@a,w
  2982  06A0                     u1075:
  2983  06A0  1803               	skipnc
  2984  06A1  0008               	return
  2985  06A2  0974               	comf	abs@a,w
  2986  06A3  00F6               	movwf	??_abs
  2987  06A4  0975               	comf	abs@a+1,w
  2988  06A5  00F7               	movwf	??_abs+1
  2989  06A6  0AF6               	incf	??_abs,f
  2990  06A7  1903               	skipnz
  2991  06A8  0AF7               	incf	??_abs+1,f
  2992  06A9  0876               	movf	??_abs,w
  2993  06AA  00F4               	movwf	?_abs
  2994  06AB  0877               	movf	??_abs+1,w
  2995  06AC  00F5               	movwf	?_abs+1
  2996  06AD  0008               	return
  2997  06AE                     __end_of_abs:
  2998                           
  2999                           	psect	text14
  3000  03BC                     __ptext14:	
  3001 ;; *************** function ___aomod *****************
  3002 ;; Defined at:
  3003 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
  3004 ;; Parameters:    Size  Location     Type
  3005 ;;  divisor         8    0[BANK0 ] long long 
  3006 ;;  dividend        8    8[BANK0 ] long long 
  3007 ;; Auto vars:     Size  Location     Type
  3008 ;;  sign            1    3[COMMON] unsigned char 
  3009 ;;  counter         1    2[COMMON] unsigned char 
  3010 ;; Return value:  Size  Location     Type
  3011 ;;                  8    0[BANK0 ] long long 
  3012 ;; Registers used:
  3013 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3014 ;; Tracked objects:
  3015 ;;		On entry : 1F/0
  3016 ;;		On exit  : 1F/0
  3017 ;;		Unchanged: 0/0
  3018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3019 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3020 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3021 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3022 ;;      Totals:         3      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3023 ;;Total ram usage:       19 bytes
  3024 ;; Hardware stack levels used: 1
  3025 ;; Hardware stack levels required when called: 1
  3026 ;; This function calls:
  3027 ;;		Nothing
  3028 ;; This function is called by:
  3029 ;;		_dtoa
  3030 ;; This function uses a non-reentrant model
  3031 ;;
  3032                           
  3033                           
  3034                           ;psect for function ___aomod
  3035  03BC                     ___aomod:
  3036                           
  3037                           ;incstack = 0
  3038                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  3039  03BC  01F3               	clrf	___aomod@sign
  3040  03BD  3028               	movlw	low ___aomod@dividend
  3041  03BE  0086               	movwf	6
  3042  03BF  3000               	movlw	high ___aomod@dividend
  3043  03C0  0087               	movwf	7
  3044  03C1  3F47               	moviw [7]fsr1
  3045  03C2  00F1               	movwf	??___aomod
  3046  03C3  1FF1               	btfss	??___aomod,7
  3047  03C4  2BE6               	goto	l1243
  3048  03C5  0020               	movlb	0	; select bank0
  3049  03C6  09A8               	comf	___aomod@dividend,f
  3050  03C7  09A9               	comf	___aomod@dividend+1,f
  3051  03C8  09AA               	comf	___aomod@dividend+2,f
  3052  03C9  09AB               	comf	___aomod@dividend+3,f
  3053  03CA  09AC               	comf	___aomod@dividend+4,f
  3054  03CB  09AD               	comf	___aomod@dividend+5,f
  3055  03CC  09AE               	comf	___aomod@dividend+6,f
  3056  03CD  09AF               	comf	___aomod@dividend+7,f
  3057  03CE  0AA8               	incf	___aomod@dividend,f
  3058  03CF  1D03               	skipz
  3059  03D0  2BE4               	goto	u94lld
  3060  03D1  0AA9               	incf	___aomod@dividend+1,f
  3061  03D2  1D03               	skipz
  3062  03D3  2BE4               	goto	u94lld
  3063  03D4  0AAA               	incf	___aomod@dividend+2,f
  3064  03D5  1D03               	skipz
  3065  03D6  2BE4               	goto	u94lld
  3066  03D7  0AAB               	incf	___aomod@dividend+3,f
  3067  03D8  1D03               	skipz
  3068  03D9  2BE4               	goto	u94lld
  3069  03DA  0AAC               	incf	___aomod@dividend+4,f
  3070  03DB  1D03               	skipz
  3071  03DC  2BE4               	goto	u94lld
  3072  03DD  0AAD               	incf	___aomod@dividend+5,f
  3073  03DE  1D03               	skipz
  3074  03DF  2BE4               	goto	u94lld
  3075  03E0  0AAE               	incf	___aomod@dividend+6,f
  3076  03E1  1D03               	skipz
  3077  03E2  2BE4               	goto	u94lld
  3078  03E3  0AAF               	incf	___aomod@dividend+7,f
  3079  03E4                     u94lld:
  3080  03E4  01F3               	clrf	___aomod@sign
  3081  03E5  0AF3               	incf	___aomod@sign,f
  3082  03E6                     l1243:
  3083  03E6  3020               	movlw	low ___aomod@divisor
  3084  03E7  0086               	movwf	6
  3085  03E8  3000               	movlw	high ___aomod@divisor
  3086  03E9  0087               	movwf	7
  3087  03EA  3F47               	moviw [7]fsr1
  3088  03EB  00F1               	movwf	??___aomod
  3089  03EC  1FF1               	btfss	??___aomod,7
  3090  03ED  2C0D               	goto	l1247
  3091  03EE  0020               	movlb	0	; select bank0
  3092  03EF  09A0               	comf	___aomod@divisor,f
  3093  03F0  09A1               	comf	___aomod@divisor+1,f
  3094  03F1  09A2               	comf	___aomod@divisor+2,f
  3095  03F2  09A3               	comf	___aomod@divisor+3,f
  3096  03F3  09A4               	comf	___aomod@divisor+4,f
  3097  03F4  09A5               	comf	___aomod@divisor+5,f
  3098  03F5  09A6               	comf	___aomod@divisor+6,f
  3099  03F6  09A7               	comf	___aomod@divisor+7,f
  3100  03F7  0AA0               	incf	___aomod@divisor,f
  3101  03F8  1D03               	skipz
  3102  03F9  2C0D               	goto	l1247
  3103  03FA  0AA1               	incf	___aomod@divisor+1,f
  3104  03FB  1D03               	skipz
  3105  03FC  2C0D               	goto	l1247
  3106  03FD  0AA2               	incf	___aomod@divisor+2,f
  3107  03FE  1D03               	skipz
  3108  03FF  2C0D               	goto	l1247
  3109  0400  0AA3               	incf	___aomod@divisor+3,f
  3110  0401  1D03               	skipz
  3111  0402  2C0D               	goto	l1247
  3112  0403  0AA4               	incf	___aomod@divisor+4,f
  3113  0404  1D03               	skipz
  3114  0405  2C0D               	goto	l1247
  3115  0406  0AA5               	incf	___aomod@divisor+5,f
  3116  0407  1D03               	skipz
  3117  0408  2C0D               	goto	l1247
  3118  0409  0AA6               	incf	___aomod@divisor+6,f
  3119  040A  1D03               	skipz
  3120  040B  2C0D               	goto	l1247
  3121  040C  0AA7               	incf	___aomod@divisor+7,f
  3122  040D                     l1247:
  3123  040D  0020               	movlb	0	; select bank0
  3124  040E  0820               	movf	___aomod@divisor,w
  3125  040F  0421               	iorwf	___aomod@divisor+1,w
  3126  0410  0422               	iorwf	___aomod@divisor+2,w
  3127  0411  0423               	iorwf	___aomod@divisor+3,w
  3128  0412  0424               	iorwf	___aomod@divisor+4,w
  3129  0413  0425               	iorwf	___aomod@divisor+5,w
  3130  0414  0426               	iorwf	___aomod@divisor+6,w
  3131  0415  0427               	iorwf	___aomod@divisor+7,w
  3132  0416  1903               	skipnz
  3133  0417  2C65               	goto	l1263
  3134  0418  01F2               	clrf	___aomod@counter
  3135  0419  0AF2               	incf	___aomod@counter,f
  3136  041A                     l1255:
  3137  041A  1BA7               	btfsc	___aomod@divisor+7,7
  3138  041B  2C29               	goto	l1257
  3139  041C  35A0               	lslf	___aomod@divisor,f
  3140  041D  0DA1               	rlf	___aomod@divisor+1,f
  3141  041E  0DA2               	rlf	___aomod@divisor+2,f
  3142  041F  0DA3               	rlf	___aomod@divisor+3,f
  3143  0420  0DA4               	rlf	___aomod@divisor+4,f
  3144  0421  0DA5               	rlf	___aomod@divisor+5,f
  3145  0422  0DA6               	rlf	___aomod@divisor+6,f
  3146  0423  0DA7               	rlf	___aomod@divisor+7,f
  3147  0424  3001               	movlw	1
  3148  0425  00F1               	movwf	??___aomod
  3149  0426  0871               	movf	??___aomod,w
  3150  0427  07F2               	addwf	___aomod@counter,f
  3151  0428  2C1A               	goto	l1255
  3152  0429                     l1257:
  3153  0429  0827               	movf	___aomod@divisor+7,w
  3154  042A  022F               	subwf	___aomod@dividend+7,w
  3155  042B  1D03               	skipz
  3156  042C  2C47               	goto	u995
  3157  042D  0826               	movf	___aomod@divisor+6,w
  3158  042E  022E               	subwf	___aomod@dividend+6,w
  3159  042F  1D03               	skipz
  3160  0430  2C47               	goto	u995
  3161  0431  0825               	movf	___aomod@divisor+5,w
  3162  0432  022D               	subwf	___aomod@dividend+5,w
  3163  0433  1D03               	skipz
  3164  0434  2C47               	goto	u995
  3165  0435  0824               	movf	___aomod@divisor+4,w
  3166  0436  022C               	subwf	___aomod@dividend+4,w
  3167  0437  1D03               	skipz
  3168  0438  2C47               	goto	u995
  3169  0439  0823               	movf	___aomod@divisor+3,w
  3170  043A  022B               	subwf	___aomod@dividend+3,w
  3171  043B  1D03               	skipz
  3172  043C  2C47               	goto	u995
  3173  043D  0822               	movf	___aomod@divisor+2,w
  3174  043E  022A               	subwf	___aomod@dividend+2,w
  3175  043F  1D03               	skipz
  3176  0440  2C47               	goto	u995
  3177  0441  0821               	movf	___aomod@divisor+1,w
  3178  0442  0229               	subwf	___aomod@dividend+1,w
  3179  0443  1D03               	skipz
  3180  0444  2C47               	goto	u995
  3181  0445  0820               	movf	___aomod@divisor,w
  3182  0446  0228               	subwf	___aomod@dividend,w
  3183  0447                     u995:
  3184  0447  1C03               	skipc
  3185  0448  2C59               	goto	l1261
  3186  0449  0820               	movf	___aomod@divisor,w
  3187  044A  02A8               	subwf	___aomod@dividend,f
  3188  044B  0821               	movf	___aomod@divisor+1,w
  3189  044C  3BA9               	subwfb	___aomod@dividend+1,f
  3190  044D  0822               	movf	___aomod@divisor+2,w
  3191  044E  3BAA               	subwfb	___aomod@dividend+2,f
  3192  044F  0823               	movf	___aomod@divisor+3,w
  3193  0450  3BAB               	subwfb	___aomod@dividend+3,f
  3194  0451  0824               	movf	___aomod@divisor+4,w
  3195  0452  3BAC               	subwfb	___aomod@dividend+4,f
  3196  0453  0825               	movf	___aomod@divisor+5,w
  3197  0454  3BAD               	subwfb	___aomod@dividend+5,f
  3198  0455  0826               	movf	___aomod@divisor+6,w
  3199  0456  3BAE               	subwfb	___aomod@dividend+6,f
  3200  0457  0827               	movf	___aomod@divisor+7,w
  3201  0458  3BAF               	subwfb	___aomod@dividend+7,f
  3202  0459                     l1261:
  3203  0459  36A7               	lsrf	___aomod@divisor+7,f
  3204  045A  0CA6               	rrf	___aomod@divisor+6,f
  3205  045B  0CA5               	rrf	___aomod@divisor+5,f
  3206  045C  0CA4               	rrf	___aomod@divisor+4,f
  3207  045D  0CA3               	rrf	___aomod@divisor+3,f
  3208  045E  0CA2               	rrf	___aomod@divisor+2,f
  3209  045F  0CA1               	rrf	___aomod@divisor+1,f
  3210  0460  0CA0               	rrf	___aomod@divisor,f
  3211  0461  3001               	movlw	1
  3212  0462  02F2               	subwf	___aomod@counter,f
  3213  0463  1D03               	btfss	3,2
  3214  0464  2C29               	goto	l1257
  3215  0465                     l1263:
  3216  0465  0873               	movf	___aomod@sign,w
  3217  0466  1903               	btfsc	3,2
  3218  0467  2C86               	goto	l294
  3219  0468  09A8               	comf	___aomod@dividend,f
  3220  0469  09A9               	comf	___aomod@dividend+1,f
  3221  046A  09AA               	comf	___aomod@dividend+2,f
  3222  046B  09AB               	comf	___aomod@dividend+3,f
  3223  046C  09AC               	comf	___aomod@dividend+4,f
  3224  046D  09AD               	comf	___aomod@dividend+5,f
  3225  046E  09AE               	comf	___aomod@dividend+6,f
  3226  046F  09AF               	comf	___aomod@dividend+7,f
  3227  0470  0AA8               	incf	___aomod@dividend,f
  3228  0471  1D03               	skipz
  3229  0472  2C86               	goto	l294
  3230  0473  0AA9               	incf	___aomod@dividend+1,f
  3231  0474  1D03               	skipz
  3232  0475  2C86               	goto	l294
  3233  0476  0AAA               	incf	___aomod@dividend+2,f
  3234  0477  1D03               	skipz
  3235  0478  2C86               	goto	l294
  3236  0479  0AAB               	incf	___aomod@dividend+3,f
  3237  047A  1D03               	skipz
  3238  047B  2C86               	goto	l294
  3239  047C  0AAC               	incf	___aomod@dividend+4,f
  3240  047D  1D03               	skipz
  3241  047E  2C86               	goto	l294
  3242  047F  0AAD               	incf	___aomod@dividend+5,f
  3243  0480  1D03               	skipz
  3244  0481  2C86               	goto	l294
  3245  0482  0AAE               	incf	___aomod@dividend+6,f
  3246  0483  1D03               	skipz
  3247  0484  2C86               	goto	l294
  3248  0485  0AAF               	incf	___aomod@dividend+7,f
  3249  0486                     l294:
  3250  0486  0020               	movlb	0	; select bank0
  3251  0487  0828               	movf	___aomod@dividend,w
  3252  0488  00A0               	movwf	?___aomod
  3253  0489  0829               	movf	___aomod@dividend+1,w
  3254  048A  00A1               	movwf	?___aomod+1
  3255  048B  082A               	movf	___aomod@dividend+2,w
  3256  048C  00A2               	movwf	?___aomod+2
  3257  048D  082B               	movf	___aomod@dividend+3,w
  3258  048E  00A3               	movwf	?___aomod+3
  3259  048F  082C               	movf	___aomod@dividend+4,w
  3260  0490  00A4               	movwf	?___aomod+4
  3261  0491  082D               	movf	___aomod@dividend+5,w
  3262  0492  00A5               	movwf	?___aomod+5
  3263  0493  082E               	movf	___aomod@dividend+6,w
  3264  0494  00A6               	movwf	?___aomod+6
  3265  0495  082F               	movf	___aomod@dividend+7,w
  3266  0496  00A7               	movwf	?___aomod+7
  3267  0497  0008               	return
  3268  0498                     __end_of___aomod:
  3269                           
  3270                           	psect	text15
  3271  02C9                     __ptext15:	
  3272 ;; *************** function ___aodiv *****************
  3273 ;; Defined at:
  3274 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
  3275 ;; Parameters:    Size  Location     Type
  3276 ;;  divisor         8    0[BANK0 ] long long 
  3277 ;;  dividend        8    8[BANK0 ] long long 
  3278 ;; Auto vars:     Size  Location     Type
  3279 ;;  quotient        8    4[COMMON] long long 
  3280 ;;  sign            1    3[COMMON] unsigned char 
  3281 ;;  counter         1    2[COMMON] unsigned char 
  3282 ;; Return value:  Size  Location     Type
  3283 ;;                  8    0[BANK0 ] long long 
  3284 ;; Registers used:
  3285 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3286 ;; Tracked objects:
  3287 ;;		On entry : 1F/0
  3288 ;;		On exit  : 1F/0
  3289 ;;		Unchanged: 0/0
  3290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3291 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3292 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3293 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3294 ;;      Totals:        11      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3295 ;;Total ram usage:       27 bytes
  3296 ;; Hardware stack levels used: 1
  3297 ;; Hardware stack levels required when called: 1
  3298 ;; This function calls:
  3299 ;;		Nothing
  3300 ;; This function is called by:
  3301 ;;		_dtoa
  3302 ;; This function uses a non-reentrant model
  3303 ;;
  3304                           
  3305                           
  3306                           ;psect for function ___aodiv
  3307  02C9                     ___aodiv:
  3308                           
  3309                           ;incstack = 0
  3310                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  3311  02C9  01F3               	clrf	___aodiv@sign
  3312  02CA  3020               	movlw	low ___aodiv@divisor
  3313  02CB  0086               	movwf	6
  3314  02CC  3000               	movlw	high ___aodiv@divisor
  3315  02CD  0087               	movwf	7
  3316  02CE  3F47               	moviw [7]fsr1
  3317  02CF  00F1               	movwf	??___aodiv
  3318  02D0  1FF1               	btfss	??___aodiv,7
  3319  02D1  2AF3               	goto	l1205
  3320  02D2  0020               	movlb	0	; select bank0
  3321  02D3  09A0               	comf	___aodiv@divisor,f
  3322  02D4  09A1               	comf	___aodiv@divisor+1,f
  3323  02D5  09A2               	comf	___aodiv@divisor+2,f
  3324  02D6  09A3               	comf	___aodiv@divisor+3,f
  3325  02D7  09A4               	comf	___aodiv@divisor+4,f
  3326  02D8  09A5               	comf	___aodiv@divisor+5,f
  3327  02D9  09A6               	comf	___aodiv@divisor+6,f
  3328  02DA  09A7               	comf	___aodiv@divisor+7,f
  3329  02DB  0AA0               	incf	___aodiv@divisor,f
  3330  02DC  1D03               	skipz
  3331  02DD  2AF1               	goto	u83lld
  3332  02DE  0AA1               	incf	___aodiv@divisor+1,f
  3333  02DF  1D03               	skipz
  3334  02E0  2AF1               	goto	u83lld
  3335  02E1  0AA2               	incf	___aodiv@divisor+2,f
  3336  02E2  1D03               	skipz
  3337  02E3  2AF1               	goto	u83lld
  3338  02E4  0AA3               	incf	___aodiv@divisor+3,f
  3339  02E5  1D03               	skipz
  3340  02E6  2AF1               	goto	u83lld
  3341  02E7  0AA4               	incf	___aodiv@divisor+4,f
  3342  02E8  1D03               	skipz
  3343  02E9  2AF1               	goto	u83lld
  3344  02EA  0AA5               	incf	___aodiv@divisor+5,f
  3345  02EB  1D03               	skipz
  3346  02EC  2AF1               	goto	u83lld
  3347  02ED  0AA6               	incf	___aodiv@divisor+6,f
  3348  02EE  1D03               	skipz
  3349  02EF  2AF1               	goto	u83lld
  3350  02F0  0AA7               	incf	___aodiv@divisor+7,f
  3351  02F1                     u83lld:
  3352  02F1  01F3               	clrf	___aodiv@sign
  3353  02F2  0AF3               	incf	___aodiv@sign,f
  3354  02F3                     l1205:
  3355  02F3  3028               	movlw	low ___aodiv@dividend
  3356  02F4  0086               	movwf	6
  3357  02F5  3000               	movlw	high ___aodiv@dividend
  3358  02F6  0087               	movwf	7
  3359  02F7  3F47               	moviw [7]fsr1
  3360  02F8  00F1               	movwf	??___aodiv
  3361  02F9  1FF1               	btfss	??___aodiv,7
  3362  02FA  2B1E               	goto	l1211
  3363  02FB  0020               	movlb	0	; select bank0
  3364  02FC  09A8               	comf	___aodiv@dividend,f
  3365  02FD  09A9               	comf	___aodiv@dividend+1,f
  3366  02FE  09AA               	comf	___aodiv@dividend+2,f
  3367  02FF  09AB               	comf	___aodiv@dividend+3,f
  3368  0300  09AC               	comf	___aodiv@dividend+4,f
  3369  0301  09AD               	comf	___aodiv@dividend+5,f
  3370  0302  09AE               	comf	___aodiv@dividend+6,f
  3371  0303  09AF               	comf	___aodiv@dividend+7,f
  3372  0304  0AA8               	incf	___aodiv@dividend,f
  3373  0305  1D03               	skipz
  3374  0306  2B1A               	goto	l1209
  3375  0307  0AA9               	incf	___aodiv@dividend+1,f
  3376  0308  1D03               	skipz
  3377  0309  2B1A               	goto	l1209
  3378  030A  0AAA               	incf	___aodiv@dividend+2,f
  3379  030B  1D03               	skipz
  3380  030C  2B1A               	goto	l1209
  3381  030D  0AAB               	incf	___aodiv@dividend+3,f
  3382  030E  1D03               	skipz
  3383  030F  2B1A               	goto	l1209
  3384  0310  0AAC               	incf	___aodiv@dividend+4,f
  3385  0311  1D03               	skipz
  3386  0312  2B1A               	goto	l1209
  3387  0313  0AAD               	incf	___aodiv@dividend+5,f
  3388  0314  1D03               	skipz
  3389  0315  2B1A               	goto	l1209
  3390  0316  0AAE               	incf	___aodiv@dividend+6,f
  3391  0317  1D03               	skipz
  3392  0318  2B1A               	goto	l1209
  3393  0319  0AAF               	incf	___aodiv@dividend+7,f
  3394  031A                     l1209:
  3395  031A  3001               	movlw	1
  3396  031B  00F1               	movwf	??___aodiv
  3397  031C  0871               	movf	??___aodiv,w
  3398  031D  06F3               	xorwf	___aodiv@sign,f
  3399  031E                     l1211:
  3400  031E  3074               	movlw	low ___aodiv@quotient
  3401  031F  0086               	movwf	6
  3402  0320  3000               	movlw	high ___aodiv@quotient
  3403  0321  0087               	movwf	7
  3404  0322  3008               	movlw	8
  3405  0323  00F1               	movwf	??___aodiv
  3406  0324  3000               	movlw	0
  3407  0325                     u860:
  3408  0325  001E               	movwi fsr1++
  3409  0326  0BF1               	decfsz	??___aodiv,f
  3410  0327  2B25               	goto	u860
  3411  0328  0020               	movlb	0	; select bank0
  3412  0329  0820               	movf	___aodiv@divisor,w
  3413  032A  0421               	iorwf	___aodiv@divisor+1,w
  3414  032B  0422               	iorwf	___aodiv@divisor+2,w
  3415  032C  0423               	iorwf	___aodiv@divisor+3,w
  3416  032D  0424               	iorwf	___aodiv@divisor+4,w
  3417  032E  0425               	iorwf	___aodiv@divisor+5,w
  3418  032F  0426               	iorwf	___aodiv@divisor+6,w
  3419  0330  0427               	iorwf	___aodiv@divisor+7,w
  3420  0331  1903               	skipnz
  3421  0332  2B89               	goto	l1233
  3422  0333  01F2               	clrf	___aodiv@counter
  3423  0334  0AF2               	incf	___aodiv@counter,f
  3424  0335                     l1221:
  3425  0335  1BA7               	btfsc	___aodiv@divisor+7,7
  3426  0336  2B44               	goto	l1223
  3427  0337  35A0               	lslf	___aodiv@divisor,f
  3428  0338  0DA1               	rlf	___aodiv@divisor+1,f
  3429  0339  0DA2               	rlf	___aodiv@divisor+2,f
  3430  033A  0DA3               	rlf	___aodiv@divisor+3,f
  3431  033B  0DA4               	rlf	___aodiv@divisor+4,f
  3432  033C  0DA5               	rlf	___aodiv@divisor+5,f
  3433  033D  0DA6               	rlf	___aodiv@divisor+6,f
  3434  033E  0DA7               	rlf	___aodiv@divisor+7,f
  3435  033F  3001               	movlw	1
  3436  0340  00F1               	movwf	??___aodiv
  3437  0341  0871               	movf	??___aodiv,w
  3438  0342  07F2               	addwf	___aodiv@counter,f
  3439  0343  2B35               	goto	l1221
  3440  0344                     l1223:
  3441  0344  35F4               	lslf	___aodiv@quotient,f
  3442  0345  0DF5               	rlf	___aodiv@quotient+1,f
  3443  0346  0DF6               	rlf	___aodiv@quotient+2,f
  3444  0347  0DF7               	rlf	___aodiv@quotient+3,f
  3445  0348  0DF8               	rlf	___aodiv@quotient+4,f
  3446  0349  0DF9               	rlf	___aodiv@quotient+5,f
  3447  034A  0DFA               	rlf	___aodiv@quotient+6,f
  3448  034B  0DFB               	rlf	___aodiv@quotient+7,f
  3449  034C  0827               	movf	___aodiv@divisor+7,w
  3450  034D  022F               	subwf	___aodiv@dividend+7,w
  3451  034E  1D03               	skipz
  3452  034F  2B6A               	goto	u895
  3453  0350  0826               	movf	___aodiv@divisor+6,w
  3454  0351  022E               	subwf	___aodiv@dividend+6,w
  3455  0352  1D03               	skipz
  3456  0353  2B6A               	goto	u895
  3457  0354  0825               	movf	___aodiv@divisor+5,w
  3458  0355  022D               	subwf	___aodiv@dividend+5,w
  3459  0356  1D03               	skipz
  3460  0357  2B6A               	goto	u895
  3461  0358  0824               	movf	___aodiv@divisor+4,w
  3462  0359  022C               	subwf	___aodiv@dividend+4,w
  3463  035A  1D03               	skipz
  3464  035B  2B6A               	goto	u895
  3465  035C  0823               	movf	___aodiv@divisor+3,w
  3466  035D  022B               	subwf	___aodiv@dividend+3,w
  3467  035E  1D03               	skipz
  3468  035F  2B6A               	goto	u895
  3469  0360  0822               	movf	___aodiv@divisor+2,w
  3470  0361  022A               	subwf	___aodiv@dividend+2,w
  3471  0362  1D03               	skipz
  3472  0363  2B6A               	goto	u895
  3473  0364  0821               	movf	___aodiv@divisor+1,w
  3474  0365  0229               	subwf	___aodiv@dividend+1,w
  3475  0366  1D03               	skipz
  3476  0367  2B6A               	goto	u895
  3477  0368  0820               	movf	___aodiv@divisor,w
  3478  0369  0228               	subwf	___aodiv@dividend,w
  3479  036A                     u895:
  3480  036A  1C03               	skipc
  3481  036B  2B7D               	goto	l1231
  3482  036C  0820               	movf	___aodiv@divisor,w
  3483  036D  02A8               	subwf	___aodiv@dividend,f
  3484  036E  0821               	movf	___aodiv@divisor+1,w
  3485  036F  3BA9               	subwfb	___aodiv@dividend+1,f
  3486  0370  0822               	movf	___aodiv@divisor+2,w
  3487  0371  3BAA               	subwfb	___aodiv@dividend+2,f
  3488  0372  0823               	movf	___aodiv@divisor+3,w
  3489  0373  3BAB               	subwfb	___aodiv@dividend+3,f
  3490  0374  0824               	movf	___aodiv@divisor+4,w
  3491  0375  3BAC               	subwfb	___aodiv@dividend+4,f
  3492  0376  0825               	movf	___aodiv@divisor+5,w
  3493  0377  3BAD               	subwfb	___aodiv@dividend+5,f
  3494  0378  0826               	movf	___aodiv@divisor+6,w
  3495  0379  3BAE               	subwfb	___aodiv@dividend+6,f
  3496  037A  0827               	movf	___aodiv@divisor+7,w
  3497  037B  3BAF               	subwfb	___aodiv@dividend+7,f
  3498  037C  1474               	bsf	___aodiv@quotient,0
  3499  037D                     l1231:
  3500  037D  36A7               	lsrf	___aodiv@divisor+7,f
  3501  037E  0CA6               	rrf	___aodiv@divisor+6,f
  3502  037F  0CA5               	rrf	___aodiv@divisor+5,f
  3503  0380  0CA4               	rrf	___aodiv@divisor+4,f
  3504  0381  0CA3               	rrf	___aodiv@divisor+3,f
  3505  0382  0CA2               	rrf	___aodiv@divisor+2,f
  3506  0383  0CA1               	rrf	___aodiv@divisor+1,f
  3507  0384  0CA0               	rrf	___aodiv@divisor,f
  3508  0385  3001               	movlw	1
  3509  0386  02F2               	subwf	___aodiv@counter,f
  3510  0387  1D03               	btfss	3,2
  3511  0388  2B44               	goto	l1223
  3512  0389                     l1233:
  3513  0389  0873               	movf	___aodiv@sign,w
  3514  038A  1903               	btfsc	3,2
  3515  038B  2BAA               	goto	l281
  3516  038C  09F4               	comf	___aodiv@quotient,f
  3517  038D  09F5               	comf	___aodiv@quotient+1,f
  3518  038E  09F6               	comf	___aodiv@quotient+2,f
  3519  038F  09F7               	comf	___aodiv@quotient+3,f
  3520  0390  09F8               	comf	___aodiv@quotient+4,f
  3521  0391  09F9               	comf	___aodiv@quotient+5,f
  3522  0392  09FA               	comf	___aodiv@quotient+6,f
  3523  0393  09FB               	comf	___aodiv@quotient+7,f
  3524  0394  0AF4               	incf	___aodiv@quotient,f
  3525  0395  1D03               	skipz
  3526  0396  2BAA               	goto	l281
  3527  0397  0AF5               	incf	___aodiv@quotient+1,f
  3528  0398  1D03               	skipz
  3529  0399  2BAA               	goto	l281
  3530  039A  0AF6               	incf	___aodiv@quotient+2,f
  3531  039B  1D03               	skipz
  3532  039C  2BAA               	goto	l281
  3533  039D  0AF7               	incf	___aodiv@quotient+3,f
  3534  039E  1D03               	skipz
  3535  039F  2BAA               	goto	l281
  3536  03A0  0AF8               	incf	___aodiv@quotient+4,f
  3537  03A1  1D03               	skipz
  3538  03A2  2BAA               	goto	l281
  3539  03A3  0AF9               	incf	___aodiv@quotient+5,f
  3540  03A4  1D03               	skipz
  3541  03A5  2BAA               	goto	l281
  3542  03A6  0AFA               	incf	___aodiv@quotient+6,f
  3543  03A7  1D03               	skipz
  3544  03A8  2BAA               	goto	l281
  3545  03A9  0AFB               	incf	___aodiv@quotient+7,f
  3546  03AA                     l281:
  3547  03AA  0874               	movf	___aodiv@quotient,w
  3548  03AB  0020               	movlb	0	; select bank0
  3549  03AC  00A0               	movwf	?___aodiv
  3550  03AD  0875               	movf	___aodiv@quotient+1,w
  3551  03AE  00A1               	movwf	?___aodiv+1
  3552  03AF  0876               	movf	___aodiv@quotient+2,w
  3553  03B0  00A2               	movwf	?___aodiv+2
  3554  03B1  0877               	movf	___aodiv@quotient+3,w
  3555  03B2  00A3               	movwf	?___aodiv+3
  3556  03B3  0878               	movf	___aodiv@quotient+4,w
  3557  03B4  00A4               	movwf	?___aodiv+4
  3558  03B5  0879               	movf	___aodiv@quotient+5,w
  3559  03B6  00A5               	movwf	?___aodiv+5
  3560  03B7  087A               	movf	___aodiv@quotient+6,w
  3561  03B8  00A6               	movwf	?___aodiv+6
  3562  03B9  087B               	movf	___aodiv@quotient+7,w
  3563  03BA  00A7               	movwf	?___aodiv+7
  3564  03BB  0008               	return
  3565  03BC                     __end_of___aodiv:
  3566                           
  3567                           	psect	text16
  3568  059C                     __ptext16:	
  3569 ;; *************** function ___ltdiv *****************
  3570 ;; Defined at:
  3571 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\ltdiv.c"
  3572 ;; Parameters:    Size  Location     Type
  3573 ;;  divisor         3    1[COMMON] unsigned um
  3574 ;;  dividend        3    4[COMMON] unsigned um
  3575 ;; Auto vars:     Size  Location     Type
  3576 ;;  quotient        3    8[COMMON] unsigned um
  3577 ;;  counter         1   11[COMMON] unsigned char 
  3578 ;; Return value:  Size  Location     Type
  3579 ;;                  3    1[COMMON] unsigned um
  3580 ;; Registers used:
  3581 ;;		wreg, status,2, status,0
  3582 ;; Tracked objects:
  3583 ;;		On entry : 1F/1B
  3584 ;;		On exit  : 1F/1B
  3585 ;;		Unchanged: 1E/0
  3586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3587 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3588 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3589 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3590 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3591 ;;Total ram usage:       11 bytes
  3592 ;; Hardware stack levels used: 1
  3593 ;; Hardware stack levels required when called: 1
  3594 ;; This function calls:
  3595 ;;		Nothing
  3596 ;; This function is called by:
  3597 ;;		_main
  3598 ;; This function uses a non-reentrant model
  3599 ;;
  3600                           
  3601                           
  3602                           ;psect for function ___ltdiv
  3603  059C                     ___ltdiv:
  3604                           
  3605                           ;incstack = 0
  3606                           ; Regs used in ___ltdiv: [wreg+status,2+status,0]
  3607  059C  3000               	movlw	0
  3608  059D  00F8               	movwf	___ltdiv@quotient
  3609  059E  3000               	movlw	0
  3610  059F  00F9               	movwf	___ltdiv@quotient+1
  3611  05A0  3000               	movlw	0
  3612  05A1  00FA               	movwf	___ltdiv@quotient+2
  3613  05A2  0873               	movf	___ltdiv@divisor+2,w
  3614  05A3  0472               	iorwf	___ltdiv@divisor+1,w
  3615  05A4  0471               	iorwf	___ltdiv@divisor,w
  3616  05A5  1903               	skipnz
  3617  05A6  2DD9               	goto	l1493
  3618  05A7  01FB               	clrf	___ltdiv@counter
  3619  05A8  0AFB               	incf	___ltdiv@counter,f
  3620  05A9                     l1479:
  3621  05A9  1BF3               	btfsc	___ltdiv@divisor+2,7
  3622  05AA  2DB6               	goto	l1481
  3623  05AB  3001               	movlw	1
  3624  05AC                     u1375:
  3625  05AC  35F1               	lslf	___ltdiv@divisor,f
  3626  05AD  0DF2               	rlf	___ltdiv@divisor+1,f
  3627  05AE  0DF3               	rlf	___ltdiv@divisor+2,f
  3628  05AF  0B89               	decfsz	9,f
  3629  05B0  2DAC               	goto	u1375
  3630  05B1  3001               	movlw	1
  3631  05B2  00F7               	movwf	??___ltdiv
  3632  05B3  0877               	movf	??___ltdiv,w
  3633  05B4  07FB               	addwf	___ltdiv@counter,f
  3634  05B5  2DA9               	goto	l1479
  3635  05B6                     l1481:
  3636  05B6  3001               	movlw	1
  3637  05B7                     u1395:
  3638  05B7  35F8               	lslf	___ltdiv@quotient,f
  3639  05B8  0DF9               	rlf	___ltdiv@quotient+1,f
  3640  05B9  0DFA               	rlf	___ltdiv@quotient+2,f
  3641  05BA  0B89               	decfsz	9,f
  3642  05BB  2DB7               	goto	u1395
  3643  05BC  0873               	movf	___ltdiv@divisor+2,w
  3644  05BD  0276               	subwf	___ltdiv@dividend+2,w
  3645  05BE  1D03               	skipz
  3646  05BF  2DC6               	goto	u1405
  3647  05C0  0872               	movf	___ltdiv@divisor+1,w
  3648  05C1  0275               	subwf	___ltdiv@dividend+1,w
  3649  05C2  1D03               	skipz
  3650  05C3  2DC6               	goto	u1405
  3651  05C4  0871               	movf	___ltdiv@divisor,w
  3652  05C5  0274               	subwf	___ltdiv@dividend,w
  3653  05C6                     u1405:
  3654  05C6  1C03               	skipc
  3655  05C7  2DCF               	goto	l1489
  3656  05C8  0871               	movf	___ltdiv@divisor,w
  3657  05C9  02F4               	subwf	___ltdiv@dividend,f
  3658  05CA  0872               	movf	___ltdiv@divisor+1,w
  3659  05CB  3BF5               	subwfb	___ltdiv@dividend+1,f
  3660  05CC  0873               	movf	___ltdiv@divisor+2,w
  3661  05CD  3BF6               	subwfb	___ltdiv@dividend+2,f
  3662  05CE  1478               	bsf	___ltdiv@quotient,0
  3663  05CF                     l1489:
  3664  05CF  3001               	movlw	1
  3665  05D0                     u1415:
  3666  05D0  36F3               	lsrf	___ltdiv@divisor+2,f
  3667  05D1  0CF2               	rrf	___ltdiv@divisor+1,f
  3668  05D2  0CF1               	rrf	___ltdiv@divisor,f
  3669  05D3  0B89               	decfsz	9,f
  3670  05D4  2DD0               	goto	u1415
  3671  05D5  3001               	movlw	1
  3672  05D6  02FB               	subwf	___ltdiv@counter,f
  3673  05D7  1D03               	btfss	3,2
  3674  05D8  2DB6               	goto	l1481
  3675  05D9                     l1493:
  3676  05D9  0878               	movf	___ltdiv@quotient,w
  3677  05DA  00F1               	movwf	?___ltdiv
  3678  05DB  0879               	movf	___ltdiv@quotient+1,w
  3679  05DC  00F2               	movwf	?___ltdiv+1
  3680  05DD  087A               	movf	___ltdiv@quotient+2,w
  3681  05DE  00F3               	movwf	?___ltdiv+2
  3682  05DF  0008               	return
  3683  05E0                     __end_of___ltdiv:
  3684                           
  3685                           	psect	intentry
  3686  0004                     __pintentry:	
  3687 ;; *************** function _myIsr *****************
  3688 ;; Defined at:
  3689 ;;		line 129 in file "smt_main.c"
  3690 ;; Parameters:    Size  Location     Type
  3691 ;;		None
  3692 ;; Auto vars:     Size  Location     Type
  3693 ;;		None
  3694 ;; Return value:  Size  Location     Type
  3695 ;;                  1    wreg      void 
  3696 ;; Registers used:
  3697 ;;		wreg, status,2, status,0
  3698 ;; Tracked objects:
  3699 ;;		On entry : 0/0
  3700 ;;		On exit  : 1F/0
  3701 ;;		Unchanged: 0/0
  3702 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3705 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3706 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3707 ;;Total ram usage:        1 bytes
  3708 ;; Hardware stack levels used: 1
  3709 ;; This function calls:
  3710 ;;		Nothing
  3711 ;; This function is called by:
  3712 ;;		Interrupt level 1
  3713 ;; This function uses a non-reentrant model
  3714 ;;
  3715                           
  3716  0004                     _myIsr:
  3717                           
  3718                           ;incstack = 0
  3719  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  3720                           
  3721                           ; Regs used in _myIsr: [wreg+status,2+status,0]
  3722  0005  3180               	pagesel	$
  3723                           
  3724                           ;smt_main.c: 131:     if(PIR4bits.SMT1PRAIF)
  3725  0006  0020               	movlb	0	; select bank0
  3726  0007  1C93               	btfss	19,1	;volatile
  3727  0008  280E               	goto	i1l1553
  3728                           
  3729                           ;smt_main.c: 132:     {;smt_main.c: 133:         dataAvailable = 1;
  3730  0009  3001               	movlw	1
  3731  000A  00F0               	movwf	??_myIsr
  3732  000B  0870               	movf	??_myIsr,w
  3733  000C  00FC               	movwf	_dataAvailable	;volatile
  3734                           
  3735                           ;smt_main.c: 134:         PIR4bits.SMT1PRAIF = 0;
  3736  000D  1093               	bcf	19,1	;volatile
  3737  000E                     i1l1553:
  3738                           
  3739                           ;smt_main.c: 136:     if(PIR4bits.SMT2IF)
  3740  000E  1D93               	btfss	19,3	;volatile
  3741  000F  2824               	goto	i1l1559
  3742                           
  3743                           ;smt_main.c: 137:     {;smt_main.c: 138:         PIR4bits.SMT2IF = 0;
  3744  0010  1193               	bcf	19,3	;volatile
  3745                           
  3746                           ;smt_main.c: 139:         SMT2TMR = 16777216-smt2Value;
  3747  0011  0021               	movlb	1	; select bank1
  3748  0012  0820               	movf	_smt2Value^(0+128),w	;volatile
  3749  0013  3C00               	sublw	0
  3750  0014  003B               	movlb	27	; select bank27
  3751  0015  009E               	movwf	30	;volatile
  3752  0016  0021               	movlb	1	; select bank1
  3753  0017  0821               	movf	(_smt2Value+1)^(0+128),w	;volatile
  3754  0018  1C03               	skipc
  3755  0019  0F21               	incfsz	(_smt2Value+1)^(0+128),w	;volatile
  3756  001A  3C00               	sublw	0
  3757  001B  003B               	movlb	27	; select bank27
  3758  001C  009F               	movwf	31	;volatile
  3759  001D  0021               	movlb	1	; select bank1
  3760  001E  0822               	movf	(_smt2Value+2)^(0+128),w	;volatile
  3761  001F  1C03               	skipc
  3762  0020  0F22               	incfsz	(_smt2Value+2)^(0+128),w	;volatile
  3763  0021  3C00               	sublw	0
  3764  0022  003B               	movlb	27	; select bank27
  3765  0023  00A0               	movwf	32	;volatile
  3766  0024                     i1l1559:
  3767                           
  3768                           ;smt_main.c: 141:     if(PIR4bits.SMT1IF)
  3769  0024  0020               	movlb	0	; select bank0
  3770  0025  1C13               	btfss	19,0	;volatile
  3771  0026  2834               	goto	i1l107
  3772                           
  3773                           ;smt_main.c: 142:     {;smt_main.c: 143:         LATBbits.LATB7 = ~LATBbits.LATB7;
  3774  0027  1003               	clrc
  3775  0028  0022               	movlb	2	; select bank2
  3776  0029  1F8D               	btfss	13,7	;volatile
  3777  002A  1403               	setc
  3778  002B  1C03               	btfss	3,0
  3779  002C  2830               	goto	u147_20
  3780  002D  0022               	movlb	2	; select bank2
  3781  002E  178D               	bsf	13,7	;volatile
  3782  002F  2832               	goto	i1l1563
  3783  0030                     u147_20:
  3784  0030  0022               	movlb	2	; select bank2
  3785  0031  138D               	bcf	13,7	;volatile
  3786  0032                     i1l1563:
  3787                           
  3788                           ;smt_main.c: 144:         PIR4bits.SMT1IF = 0;
  3789  0032  0020               	movlb	0	; select bank0
  3790  0033  1013               	bcf	19,0	;volatile
  3791  0034                     i1l107:
  3792  0034  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  3793  0035  0009               	retfie
  3794  0036                     __end_of_myIsr:
  3795  007E                     btemp	set	126	;btemp
  3796  007E                     int$flags	set	126
  3797  007E                     wtemp0	set	126
  3798                           
  3799                           	psect	idloc
  3800                           
  3801                           ;Config register IDLOC0 @ 0x8000
  3802                           ;	unspecified, using default values
  3803  8000                     	org	32768
  3804  8000  3FFF               	dw	16383
  3805                           
  3806                           ;Config register IDLOC1 @ 0x8001
  3807                           ;	unspecified, using default values
  3808  8001                     	org	32769
  3809  8001  3FFF               	dw	16383
  3810                           
  3811                           ;Config register IDLOC2 @ 0x8002
  3812                           ;	unspecified, using default values
  3813  8002                     	org	32770
  3814  8002  3FFF               	dw	16383
  3815                           
  3816                           ;Config register IDLOC3 @ 0x8003
  3817                           ;	unspecified, using default values
  3818  8003                     	org	32771
  3819  8003  3FFF               	dw	16383
  3820                           
  3821                           	psect	config
  3822                           
  3823                           ;Config register CONFIG1 @ 0x8007
  3824                           ;	Oscillator Selection Bits
  3825                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  3826                           ;	Power-up Timer Enable
  3827                           ;	PWRTE = OFF, PWRT disabled
  3828                           ;	MCLR Pin Function Select
  3829                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  3830                           ;	Flash Program Memory Code Protection
  3831                           ;	CP = OFF, Program memory code protection is disabled
  3832                           ;	Brown-out Reset Enable
  3833                           ;	BOREN = ON, Brown-out Reset enabled
  3834                           ;	Clock Out Enable
  3835                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  3836                           ;	Internal/External Switch Over
  3837                           ;	IESO = OFF, Internal External Switch Over mode is disabled
  3838                           ;	Fail-Safe Clock Monitor Enable
  3839                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  3840  8007                     	org	32775
  3841  8007  2FFC               	dw	12284
  3842                           
  3843                           ;Config register CONFIG2 @ 0x8008
  3844                           ;	Flash Memory Self-Write Protection
  3845                           ;	WRT = OFF, Write protection off
  3846                           ;	Peripheral Pin Select one-way control
  3847                           ;	PPS1WAY = OFF, The PPSLOCK bit can be set and cleared repeatedly by software
  3848                           ;	Zero Cross Detect Disable Bit
  3849                           ;	ZCD = OFF, ZCD disable.  ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  3850                           ;	PLL Enable Bit
  3851                           ;	PLLEN = ON, 4x PLL is always enabled
  3852                           ;	Stack Overflow/Underflow Reset Enable
  3853                           ;	STVREN = OFF, Stack Overflow or Underflow will not cause a Reset
  3854                           ;	Brown-out Reset Voltage Selection
  3855                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  3856                           ;	Low-Power Brown Out Reset
  3857                           ;	LPBOR = OFF, Low-Power BOR is disabled
  3858                           ;	Low-Voltage Programming Enable
  3859                           ;	LVP = ON, Low-voltage programming enabled
  3860  8008                     	org	32776
  3861  8008  3DFB               	dw	15867
  3862                           
  3863                           ;Config register CONFIG3 @ 0x8009
  3864                           ;	WDT Period Select
  3865                           ;	WDTCPS = WDTCPS1F, Software Control (WDTPS)
  3866                           ;	Watchdog Timer Enable
  3867                           ;	WDTE = OFF, WDT disabled
  3868                           ;	WDT Window Select
  3869                           ;	WDTCWS = WDTCWSSW, Software WDT window size control (WDTWS bits)
  3870                           ;	WDT Input Clock Selector
  3871                           ;	WDTCCS = SWC, Software control, controlled by WDTCS bits
  3872  8009                     	org	32777
  3873  8009  3F9F               	dw	16287

Data Sizes:
    Strings     11
    Constant    0
    Data        0
    BSS         53
    Persistent  33
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     78      80
    BANK1            80      1      52
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_8(CODE[3]), STR_4(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_8(CODE[3]), STR_4(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S960_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 


Critical Paths under _main in COMMON

    _main->___ltdiv
    _vfpfcnvrt->_strncmp
    _dtoa->___aodiv
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _abs->___aomod

Critical Paths under _myIsr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->___aodiv
    _dtoa->___aomod
    _pad->_fputs
    _abs->___aomod

Critical Paths under _myIsr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _myIsr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myIsr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myIsr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _myIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _myIsr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _myIsr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _myIsr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _myIsr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _myIsr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _myIsr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _myIsr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _myIsr in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    7175
                                              0 BANK1      1     1      0
                            ___ltdiv
                             _printf
                           _smt_init
                          _uart_init
 ---------------------------------------------------------------------------------
 (1) _uart_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _smt_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _printf                                              10     4      6    6861
                                             70 BANK0      8     2      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3    6684
                                             62 BANK0      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           40    38      2    6352
                                             46 BANK0     16    14      2
                               _dtoa
                              _fputc
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     681
                                              1 COMMON    11     5      6
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                30    22      8    4215
                                             16 BANK0     30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    2466
                                             11 COMMON     1     1      0
                                              7 BANK0      8     5      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               5     3      2     123
                                              1 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                8     7      1    1105
                                             10 COMMON     1     0      1
                                              0 BANK0      7     7      0
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     790
                                              2 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      22
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              4 COMMON     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             19     3     16     448
                                              1 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             27    11     16     452
                                              1 COMMON    11    11      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (1) ___ltdiv                                             11     5      6     314
                                              1 COMMON    11     5      6
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _myIsr                                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___ltdiv
   _printf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
             _strlen
         _fputc
         _strncmp
   _smt_init
   _uart_init

 _myIsr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4E      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      1      34       7       65.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      91      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      91      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Mar 05 02:39:22 2023

                     l95 04CF                      l110 06CE                      l281 03AA  
                    l294 0486                      l673 0567                      l681 008C  
                    l690 0154                      l682 0094                      l676 0587  
                    l677 0592                      l686 00B0                      l687 00C2  
                    u860 0325                      u795 060A                      u895 036A  
                    u995 0447                      _abs 0697                      _pad 0553  
                    wreg 0009             _BAUD1CONbits 019F                     l1211 031E  
                   ?_abs 0074                     l1221 0335                     l1205 02F3  
                   l1231 037D                     l1223 0344                     l1303 00A8  
                   l1233 0389                     l1209 031A                     l1313 00EE  
                   l1243 03E6                     l1323 00C9                     l1331 0160  
                   l1403 0274                     l1261 0459                     l1173 05E9  
                   l1341 0171                     l1309 00BE                     l1413 029B  
                   l1255 041A                     l1263 0465                     l1247 040D  
                   l1271 055E                     l1335 0167                     l1257 0429  
                   l1177 060C                     l1193 0685                     l1281 0569  
                   l1345 017D                     l1361 0516                     l1409 0295  
                   l1433 061D                     l1187 0645                     l1195 0690  
                   l1275 0565                     l1419 02A6                     l1435 0639  
                   l1367 0542                     l1359 053B                     l1391 0209  
                   l1383 01D0                     l1481 05B6                     l1395 0235  
                   l1493 05D9                     l1479 05A9                     l1489 05CF  
                   ?_pad 0027                     STR_1 06D7                     STR_2 06DC  
                   STR_4 06DC                     STR_6 06DF                     STR_8 06DF  
                   u1055 0573                     u1135 00A0                     u1080 0062  
                   u1090 0063                     u1075 06A0                     u1405 05C6  
                   u1165 015E                     u1415 05D0                     u1185 00DD  
                   u1195 00E9                     u1375 05AC                     u1395 05B7  
                   abs@a 0074                     _dbuf 00B2                     _main 0498  
                   _dtoa 0047                     _prec 00B0                     _nout 00AC  
                   pad@i 002A                     pad@p 0028                     fsr0h 0005  
                   fsr1h 0007                     indf0 0000                     fsr0l 0004  
                   indf1 0001                     fsr1l 0006                     pad@w 002C  
                   btemp 007E                     start 0036                    ??_abs 0076  
                  ??_pad 007B          __end_of___aodiv 03BC                    ?_main 0070  
                  ?_dtoa 0030          __end_of___aomod 0498          __end_of___ltdiv 05E0  
                  i1l107 0034             vfpfcnvrt@fmt 004E                    u83lld 02F1  
                  u94lld 03E4                    _flags 006E                    _fputc 05E0  
                  _fputs 0642                    _myIsr 0004                    pad@fp 002E  
                  _width 00AE                    _putch 06CA                    dtoa@d 0030  
                  dtoa@i 004C                    dtoa@n 0044                    dtoa@p 003D  
                  dtoa@s 0042                    dtoa@w 0040                    status 0003  
                  wtemp0 007E          __end_of_strncmp 0553          __initialization 0038  
           __end_of_main 0501             __end_of_dtoa 018E                   ??_main 00D3  
                 ??_dtoa 0038                   ?_fputc 0072                   ?_fputs 007A  
                 ?_myIsr 0070                   ?_putch 0070                   _RB6PPS 0E9E  
                 i1l1553 000E                   i1l1563 0032                   _RC7PPS 0EA7  
                 i1l1559 0024                   u147_20 0030                   _SMT1PR 0D95  
                 _SPBRGH 019C                   _SPBRGL 019B                   _TX1REG 019A  
           vfprintf@cfmt 0064                ??___aodiv 0071                ??___aomod 0071  
              ??___ltdiv 0077                   _printf 06AE                   pad@buf 0027  
                 dtoa@fp 003F                   _strlen 0680                   fputc@c 0072  
                 fputs@c 0023                   fputs@i 0024                   fputs@s 0026  
       __end_of_smt_init 0680                   putch@c 0071         __end_of_vfprintf 0642  
              ??_strncmp 0077  __end_of__initialization 0043           __pcstackCOMMON 0070  
          __end_of_fputc 0615            __end_of_fputs 0666            __end_of_myIsr 0036  
          __end_of_putch 06D1                  ??_fputc 0075                  ??_fputs 0020  
                ??_myIsr 0070                  ??_putch 0071               __pbssBANK0 006E  
             __pbssBANK1 00A0               __pmaintext 0498               __pintentry 0004  
                _CLC1CON 0F10                  _CLC1POL 0F11                  ?_printf 0066  
                ?_strlen 0071       __size_of_uart_init 000C       __size_of_vfpfcnvrt 013B  
                _SMT1CPR 0D8F                  _SMT2TMR 0D9E                  ___aodiv 02C9  
                ___aomod 03BC                ?_smt_init 0070                  ___ltdiv 059C  
              ?_vfprintf 005E                  __ptext1 06BE                  __ptext2 0666  
                __ptext3 06AE                  __ptext4 0615                  __ptext5 018E  
                __ptext6 0501                  __ptext7 0047                  __ptext8 0553  
                __ptext9 0680          __size_of_printf 0010          __size_of_strlen 0017  
           __size_of_abs 0017             __size_of_pad 0049                  clrloop0 06D2  
          _dataAvailable 007C                  _strncmp 0501     end_of_initialization 0043  
                fputc@fp 0074                  fputs@fp 007A        __end_of_uart_init 06CA  
       ___ltdiv@dividend 0074        __end_of_vfpfcnvrt 02C9               ??_smt_init 0071  
             ??_vfprintf 0061                  strlen@a 0074                  strlen@s 0075  
              _TRISAbits 008C                _TRISBbits 008D                _TRISCbits 008E  
       ___ltdiv@quotient 0078              _CLC1CONbits 0F10              vfpfcnvrt@ap 004F  
            vfpfcnvrt@fp 005D              vfpfcnvrt@ll 0055           __end_of_printf 06BE  
         __end_of_strlen 0697      start_initialization 0038              __end_of_abs 06AE  
            __end_of_pad 059C              vfprintf@fmt 005E                 ??_printf 006C  
               ??_strlen 0073              __pbssCOMMON 007C                ___latbits 0002  
          __pcstackBANK0 0020            __pcstackBANK1 00D3         ___aodiv@dividend 0028  
              __pnvBANK1 00D2                _dtoa$1031 003B                 ?___aodiv 0020  
               ?___aomod 0020         ___aodiv@quotient 0074                 ?___ltdiv 0071  
      __size_of_smt_init 001A        __size_of_vfprintf 002D                 _CLC1GLS0 0F16  
               _CLC1GLS1 0F17                 _CLC1GLS2 0F18                 _CLC1GLS3 0F19  
               _CLC1SEL0 0F12                 _CLC1SEL1 0F13                 _CLC1SEL2 0F14  
               _CLC1SEL3 0F15           __size_of_fputc 0035           __size_of_fputs 0024  
         __size_of_myIsr 0032                 ?_strncmp 0071           __size_of_putch 0007  
              _smt2Value 00A0                 _LATBbits 010D                clear_ram0 06D1  
               _PIE4bits 0093          ___ltdiv@divisor 0071                 _PIR4bits 0013  
        ___ltdiv@counter 007B                _uart_init 06BE                _vfpfcnvrt 018E  
           _SMT1CON0bits 0D98             _SMT1CON1bits 0D99             _SMT2CON0bits 0DAA  
           _SMT2CON1bits 0DAB             _refreshValue 00A4               vfprintf@ap 0060  
             vfprintf@fp 0063               ?_uart_init 0070         __size_of___aodiv 00F3  
       __size_of___aomod 00DC               ?_vfpfcnvrt 004E         __size_of___ltdiv 0044  
        ___aodiv@divisor 0020          ___aodiv@counter 0072               _ANSELAbits 018C  
               _actValue 00A8                 __ptext10 0642                 __ptext11 05E0  
               __ptext12 06CA                 __ptext13 0697                 __ptext14 03BC  
               __ptext15 02C9                 __ptext16 059C         __size_of_strncmp 0052  
          __size_of_main 0069            __size_of_dtoa 0147               _RC1STAbits 019D  
               int$flags 007E                 _smt_init 0666                 _vfprintf 0615  
              printf@fmt 0066         ___aomod@dividend 0028              _OSCTUNEbits 0098  
             _INTCONbits 000B                 intlevel1 0000                strncmp@_l 0071  
              strncmp@_r 0073               _OSCCONbits 0099              ??_uart_init 0071  
               printf@ap 006D          ___aomod@divisor 0020              ??_vfpfcnvrt 0050  
        ___aomod@counter 0072            __pstringtext1 06D7            __pstringtext2 06DC  
          __pstringtext3 06DF            __pstringtext4 0000                 strncmp@l 0078  
               strncmp@n 0075                 strncmp@r 007A               _TX1STAbits 019E  
           ___aodiv@sign 0073           _smt2PendChange 00D2             ___aomod@sign 0073  
