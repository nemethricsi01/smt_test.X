

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Feb 28 02:12:00 2023

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F1619
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2,group=3
    19                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text6,local,class=CODE,merge=1,delta=2,group=3
    22                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text9,local,class=CODE,merge=1,delta=2,group=3
    25                           	psect	text10,local,class=CODE,merge=1,delta=2,group=3
    26                           	psect	text11,local,class=CODE,merge=1,delta=2,group=3
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2,group=3
    29                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	intentry,global,class=CODE,delta=2
    32                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    33                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    34                           	dabs	1,0x7E,2
    35  0000                     
    36                           ; Version 2.40
    37                           ; Generated 17/11/2021 GMT
    38                           ; 
    39                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution. Publication is not required when
    53                           ;        this file is used in an embedded application.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC16F1619 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71  0000                     	;# 
    72  0001                     	;# 
    73  0002                     	;# 
    74  0003                     	;# 
    75  0004                     	;# 
    76  0005                     	;# 
    77  0006                     	;# 
    78  0007                     	;# 
    79  0008                     	;# 
    80  0009                     	;# 
    81  000A                     	;# 
    82  000B                     	;# 
    83  000C                     	;# 
    84  000D                     	;# 
    85  000E                     	;# 
    86  0010                     	;# 
    87  0011                     	;# 
    88  0012                     	;# 
    89  0013                     	;# 
    90  0014                     	;# 
    91  0015                     	;# 
    92  0016                     	;# 
    93  0016                     	;# 
    94  0017                     	;# 
    95  0018                     	;# 
    96  0019                     	;# 
    97  001A                     	;# 
    98  001A                     	;# 
    99  001B                     	;# 
   100  001B                     	;# 
   101  001C                     	;# 
   102  001D                     	;# 
   103  001E                     	;# 
   104  001F                     	;# 
   105  008C                     	;# 
   106  008D                     	;# 
   107  008E                     	;# 
   108  0090                     	;# 
   109  0091                     	;# 
   110  0092                     	;# 
   111  0093                     	;# 
   112  0094                     	;# 
   113  0095                     	;# 
   114  0096                     	;# 
   115  0098                     	;# 
   116  0099                     	;# 
   117  009A                     	;# 
   118  009B                     	;# 
   119  009B                     	;# 
   120  009C                     	;# 
   121  009D                     	;# 
   122  009E                     	;# 
   123  009F                     	;# 
   124  010C                     	;# 
   125  010D                     	;# 
   126  010E                     	;# 
   127  0111                     	;# 
   128  0112                     	;# 
   129  0113                     	;# 
   130  0114                     	;# 
   131  0115                     	;# 
   132  0116                     	;# 
   133  0117                     	;# 
   134  0118                     	;# 
   135  0119                     	;# 
   136  011C                     	;# 
   137  018C                     	;# 
   138  018D                     	;# 
   139  018E                     	;# 
   140  0191                     	;# 
   141  0191                     	;# 
   142  0192                     	;# 
   143  0193                     	;# 
   144  0193                     	;# 
   145  0194                     	;# 
   146  0195                     	;# 
   147  0196                     	;# 
   148  0197                     	;# 
   149  0199                     	;# 
   150  0199                     	;# 
   151  0199                     	;# 
   152  019A                     	;# 
   153  019A                     	;# 
   154  019A                     	;# 
   155  019B                     	;# 
   156  019B                     	;# 
   157  019B                     	;# 
   158  019B                     	;# 
   159  019B                     	;# 
   160  019C                     	;# 
   161  019C                     	;# 
   162  019C                     	;# 
   163  019D                     	;# 
   164  019D                     	;# 
   165  019D                     	;# 
   166  019E                     	;# 
   167  019E                     	;# 
   168  019E                     	;# 
   169  019F                     	;# 
   170  019F                     	;# 
   171  019F                     	;# 
   172  019F                     	;# 
   173  019F                     	;# 
   174  020C                     	;# 
   175  020D                     	;# 
   176  020E                     	;# 
   177  0211                     	;# 
   178  0211                     	;# 
   179  0212                     	;# 
   180  0212                     	;# 
   181  0213                     	;# 
   182  0213                     	;# 
   183  0214                     	;# 
   184  0214                     	;# 
   185  0215                     	;# 
   186  0215                     	;# 
   187  0215                     	;# 
   188  0215                     	;# 
   189  0216                     	;# 
   190  0216                     	;# 
   191  0217                     	;# 
   192  0217                     	;# 
   193  028C                     	;# 
   194  028D                     	;# 
   195  028E                     	;# 
   196  0291                     	;# 
   197  0291                     	;# 
   198  0292                     	;# 
   199  0293                     	;# 
   200  0294                     	;# 
   201  0298                     	;# 
   202  0298                     	;# 
   203  0299                     	;# 
   204  029A                     	;# 
   205  029B                     	;# 
   206  029E                     	;# 
   207  030C                     	;# 
   208  030D                     	;# 
   209  030E                     	;# 
   210  038C                     	;# 
   211  038D                     	;# 
   212  038E                     	;# 
   213  0391                     	;# 
   214  0392                     	;# 
   215  0393                     	;# 
   216  0394                     	;# 
   217  0395                     	;# 
   218  0396                     	;# 
   219  0397                     	;# 
   220  0398                     	;# 
   221  0399                     	;# 
   222  040E                     	;# 
   223  0413                     	;# 
   224  0413                     	;# 
   225  0414                     	;# 
   226  0414                     	;# 
   227  0415                     	;# 
   228  0416                     	;# 
   229  0417                     	;# 
   230  0418                     	;# 
   231  041A                     	;# 
   232  041A                     	;# 
   233  041B                     	;# 
   234  041B                     	;# 
   235  041C                     	;# 
   236  041D                     	;# 
   237  041E                     	;# 
   238  041F                     	;# 
   239  0493                     	;# 
   240  0494                     	;# 
   241  0495                     	;# 
   242  0496                     	;# 
   243  049A                     	;# 
   244  049B                     	;# 
   245  049C                     	;# 
   246  049D                     	;# 
   247  058C                     	;# 
   248  058C                     	;# 
   249  058D                     	;# 
   250  058E                     	;# 
   251  058E                     	;# 
   252  058F                     	;# 
   253  0590                     	;# 
   254  0590                     	;# 
   255  0591                     	;# 
   256  0592                     	;# 
   257  0592                     	;# 
   258  0593                     	;# 
   259  0594                     	;# 
   260  0594                     	;# 
   261  0595                     	;# 
   262  0596                     	;# 
   263  0596                     	;# 
   264  0597                     	;# 
   265  0598                     	;# 
   266  0599                     	;# 
   267  059A                     	;# 
   268  059B                     	;# 
   269  059B                     	;# 
   270  059C                     	;# 
   271  059D                     	;# 
   272  060C                     	;# 
   273  060C                     	;# 
   274  060D                     	;# 
   275  060E                     	;# 
   276  060F                     	;# 
   277  060F                     	;# 
   278  0610                     	;# 
   279  0611                     	;# 
   280  0612                     	;# 
   281  0613                     	;# 
   282  0614                     	;# 
   283  0617                     	;# 
   284  0617                     	;# 
   285  0618                     	;# 
   286  0619                     	;# 
   287  061A                     	;# 
   288  061A                     	;# 
   289  061B                     	;# 
   290  061C                     	;# 
   291  0691                     	;# 
   292  0692                     	;# 
   293  0693                     	;# 
   294  0694                     	;# 
   295  0695                     	;# 
   296  0696                     	;# 
   297  0697                     	;# 
   298  0699                     	;# 
   299  069A                     	;# 
   300  0711                     	;# 
   301  0712                     	;# 
   302  0713                     	;# 
   303  0714                     	;# 
   304  0715                     	;# 
   305  0718                     	;# 
   306  0718                     	;# 
   307  0719                     	;# 
   308  071A                     	;# 
   309  071A                     	;# 
   310  071B                     	;# 
   311  071C                     	;# 
   312  071D                     	;# 
   313  0791                     	;# 
   314  0791                     	;# 
   315  0792                     	;# 
   316  0793                     	;# 
   317  0793                     	;# 
   318  0794                     	;# 
   319  0795                     	;# 
   320  0795                     	;# 
   321  0796                     	;# 
   322  0797                     	;# 
   323  0797                     	;# 
   324  0798                     	;# 
   325  0799                     	;# 
   326  079A                     	;# 
   327  080C                     	;# 
   328  080C                     	;# 
   329  080D                     	;# 
   330  080E                     	;# 
   331  080E                     	;# 
   332  080F                     	;# 
   333  0810                     	;# 
   334  0810                     	;# 
   335  0811                     	;# 
   336  0812                     	;# 
   337  0812                     	;# 
   338  0813                     	;# 
   339  0814                     	;# 
   340  0815                     	;# 
   341  0816                     	;# 
   342  0817                     	;# 
   343  0818                     	;# 
   344  0819                     	;# 
   345  081A                     	;# 
   346  081A                     	;# 
   347  081B                     	;# 
   348  081C                     	;# 
   349  081C                     	;# 
   350  081D                     	;# 
   351  088C                     	;# 
   352  088D                     	;# 
   353  088E                     	;# 
   354  088F                     	;# 
   355  088F                     	;# 
   356  0890                     	;# 
   357  0891                     	;# 
   358  0892                     	;# 
   359  0893                     	;# 
   360  0893                     	;# 
   361  0894                     	;# 
   362  0895                     	;# 
   363  0896                     	;# 
   364  0897                     	;# 
   365  0897                     	;# 
   366  0898                     	;# 
   367  0899                     	;# 
   368  0D8C                     	;# 
   369  0D8C                     	;# 
   370  0D8D                     	;# 
   371  0D8E                     	;# 
   372  0D8F                     	;# 
   373  0D8F                     	;# 
   374  0D90                     	;# 
   375  0D91                     	;# 
   376  0D92                     	;# 
   377  0D92                     	;# 
   378  0D93                     	;# 
   379  0D94                     	;# 
   380  0D95                     	;# 
   381  0D95                     	;# 
   382  0D96                     	;# 
   383  0D97                     	;# 
   384  0D98                     	;# 
   385  0D99                     	;# 
   386  0D9A                     	;# 
   387  0D9B                     	;# 
   388  0D9C                     	;# 
   389  0D9D                     	;# 
   390  0D9E                     	;# 
   391  0D9E                     	;# 
   392  0D9F                     	;# 
   393  0DA0                     	;# 
   394  0DA1                     	;# 
   395  0DA1                     	;# 
   396  0DA2                     	;# 
   397  0DA3                     	;# 
   398  0DA4                     	;# 
   399  0DA4                     	;# 
   400  0DA5                     	;# 
   401  0DA6                     	;# 
   402  0DA7                     	;# 
   403  0DA7                     	;# 
   404  0DA8                     	;# 
   405  0DA9                     	;# 
   406  0DAA                     	;# 
   407  0DAB                     	;# 
   408  0DAC                     	;# 
   409  0DAD                     	;# 
   410  0DAE                     	;# 
   411  0DAF                     	;# 
   412  0E0F                     	;# 
   413  0E10                     	;# 
   414  0E11                     	;# 
   415  0E12                     	;# 
   416  0E13                     	;# 
   417  0E14                     	;# 
   418  0E15                     	;# 
   419  0E16                     	;# 
   420  0E17                     	;# 
   421  0E18                     	;# 
   422  0E19                     	;# 
   423  0E1A                     	;# 
   424  0E1B                     	;# 
   425  0E1C                     	;# 
   426  0E1D                     	;# 
   427  0E1E                     	;# 
   428  0E1F                     	;# 
   429  0E20                     	;# 
   430  0E21                     	;# 
   431  0E22                     	;# 
   432  0E23                     	;# 
   433  0E24                     	;# 
   434  0E25                     	;# 
   435  0E26                     	;# 
   436  0E27                     	;# 
   437  0E28                     	;# 
   438  0E29                     	;# 
   439  0E2A                     	;# 
   440  0E2B                     	;# 
   441  0E2C                     	;# 
   442  0E2D                     	;# 
   443  0E2E                     	;# 
   444  0E90                     	;# 
   445  0E91                     	;# 
   446  0E92                     	;# 
   447  0E94                     	;# 
   448  0E95                     	;# 
   449  0E9C                     	;# 
   450  0E9D                     	;# 
   451  0E9E                     	;# 
   452  0E9F                     	;# 
   453  0EA0                     	;# 
   454  0EA1                     	;# 
   455  0EA2                     	;# 
   456  0EA3                     	;# 
   457  0EA4                     	;# 
   458  0EA5                     	;# 
   459  0EA6                     	;# 
   460  0EA7                     	;# 
   461  0F0F                     	;# 
   462  0F10                     	;# 
   463  0F11                     	;# 
   464  0F12                     	;# 
   465  0F13                     	;# 
   466  0F14                     	;# 
   467  0F15                     	;# 
   468  0F16                     	;# 
   469  0F17                     	;# 
   470  0F18                     	;# 
   471  0F19                     	;# 
   472  0F1A                     	;# 
   473  0F1B                     	;# 
   474  0F1C                     	;# 
   475  0F1D                     	;# 
   476  0F1E                     	;# 
   477  0F1F                     	;# 
   478  0F20                     	;# 
   479  0F21                     	;# 
   480  0F22                     	;# 
   481  0F23                     	;# 
   482  0F24                     	;# 
   483  0F25                     	;# 
   484  0F26                     	;# 
   485  0F27                     	;# 
   486  0F28                     	;# 
   487  0F29                     	;# 
   488  0F2A                     	;# 
   489  0F2B                     	;# 
   490  0F2C                     	;# 
   491  0F2D                     	;# 
   492  0F2E                     	;# 
   493  0F2F                     	;# 
   494  0F30                     	;# 
   495  0F31                     	;# 
   496  0F32                     	;# 
   497  0F33                     	;# 
   498  0F34                     	;# 
   499  0F35                     	;# 
   500  0F36                     	;# 
   501  0F37                     	;# 
   502  0FE4                     	;# 
   503  0FE5                     	;# 
   504  0FE6                     	;# 
   505  0FE7                     	;# 
   506  0FE8                     	;# 
   507  0FE9                     	;# 
   508  0FEA                     	;# 
   509  0FEB                     	;# 
   510  0FED                     	;# 
   511  0FEE                     	;# 
   512  0FEF                     	;# 
   513  0013                     _PIR4bits	set	19
   514  000B                     _INTCONbits	set	11
   515  0093                     _PIE4bits	set	147
   516  0099                     _OSCCONbits	set	153
   517  008E                     _TRISCbits	set	142
   518  008C                     _TRISAbits	set	140
   519  008D                     _TRISBbits	set	141
   520  010D                     _LATBbits	set	269
   521  019A                     _TX1REG	set	410
   522  019B                     _SPBRGL	set	411
   523  019C                     _SPBRGH	set	412
   524  019F                     _BAUD1CONbits	set	415
   525  019D                     _RC1STAbits	set	413
   526  019E                     _TX1STAbits	set	414
   527  0D8F                     _SMT1CPR	set	3471
   528  0D98                     _SMT1CON0bits	set	3480
   529  0D9B                     _SMT1CLKbits	set	3483
   530  0D99                     _SMT1CON1bits	set	3481
   531  0EA7                     _RC7PPS	set	3751
   532                           
   533                           	psect	stringtext1
   534  06CE                     __pstringtext1:
   535  06CE                     STR_1:
   536  06CE  3453               	retlw	83	;'S'
   537  06CF  344D               	retlw	77	;'M'
   538  06D0  3454               	retlw	84	;'T'
   539  06D1  3431               	retlw	49	;'1'
   540  06D2  3443               	retlw	67	;'C'
   541  06D3  3450               	retlw	80	;'P'
   542  06D4  3452               	retlw	82	;'R'
   543  06D5  343A               	retlw	58	;':'
   544  06D6  3420               	retlw	32	;' '
   545  06D7  3425               	retlw	37	;'%'
   546  06D8  346C               	retlw	108	;'l'
   547  06D9  3464               	retlw	100	;'d'
   548  06DA  340A               	retlw	10
   549  06DB  3400               	retlw	0
   550                           
   551                           	psect	stringtext2
   552  0702                     __pstringtext2:
   553  0702                     STR_2:
   554  0702  346C               	retlw	108	;'l'
   555  0703  3464               	retlw	100	;'d'
   556  0704  3400               	retlw	0
   557                           
   558                           	psect	stringtext3
   559  0705                     __pstringtext3:
   560  0705                     STR_6:
   561  0705  346C               	retlw	108	;'l'
   562  0706  3469               	retlw	105	;'i'
   563  0707  3400               	retlw	0
   564                           
   565                           	psect	stringtext4
   566  0000                     __pstringtext4:
   567  0702                     
   568                           	psect	cinit
   569  0048                     start_initialization:	
   570                           ; #config settings
   571                           
   572  0048                     __initialization:
   573                           
   574                           ; Clear objects allocated to COMMON
   575  0048  01F6               	clrf	__pbssCOMMON& (0+127)
   576  0049  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   577  004A  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   578  004B  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   579                           
   580                           ; Clear objects allocated to BANK1
   581  004C  30A0               	movlw	low __pbssBANK1
   582  004D  0084               	movwf	4
   583  004E  3000               	movlw	high __pbssBANK1
   584  004F  0085               	movwf	5
   585  0050  302D               	movlw	45
   586  0051  3186  26FC  3180   	fcall	clear_ram0
   587  0054                     end_of_initialization:	
   588                           ;End of C runtime variable initialization code
   589                           
   590  0054                     __end_of__initialization:
   591  0054  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   592  0055  0020               	movlb	0
   593  0056  3185  2DEC         	ljmp	_main	;jump to C main() function
   594                           
   595                           	psect	bssCOMMON
   596  0076                     __pbssCOMMON:
   597  0076                     _prec:
   598  0076                     	ds	2
   599  0078                     _flags:
   600  0078                     	ds	2
   601                           
   602                           	psect	bssBANK1
   603  00A0                     __pbssBANK1:
   604  00A0                     _actValue:
   605  00A0                     	ds	4
   606  00A4                     _lastValue:
   607  00A4                     	ds	4
   608  00A8                     _nout:
   609  00A8                     	ds	2
   610  00AA                     _width:
   611  00AA                     	ds	2
   612  00AC                     _dataAvailable:
   613  00AC                     	ds	1
   614  00AD                     _dbuf:
   615  00AD                     	ds	32
   616                           
   617                           	psect	clrtext
   618  06FC                     clear_ram0:	
   619                           ;	Called with FSR0 containing the base address, and
   620                           ;	WREG with the size to clear
   621                           
   622  06FC  0064               	clrwdt	;clear the watchdog before getting into this loop
   623  06FD                     clrloop0:
   624  06FD  0180               	clrf	0	;clear RAM location pointed to by FSR
   625  06FE  3101               	addfsr 0,1
   626  06FF  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   627  0700  2EFD               	goto	clrloop0	;have we reached the end yet?
   628  0701  3400               	retlw	0	;all done for this memory range, return
   629                           
   630                           	psect	cstackBANK1
   631  00CD                     __pcstackBANK1:
   632  00CD                     ?_printf:
   633  00CD                     printf@fmt:	
   634                           ; 2 bytes @ 0x0
   635                           
   636                           
   637                           ; 2 bytes @ 0x0
   638  00CD                     	ds	6
   639  00D3                     ??_printf:
   640                           
   641                           ; 1 bytes @ 0x6
   642  00D3                     	ds	1
   643  00D4                     printf@ap:
   644                           
   645                           ; 1 bytes @ 0x7
   646  00D4                     	ds	1
   647  00D5                     ??_main:
   648                           
   649                           ; 1 bytes @ 0x8
   650  00D5                     	ds	2
   651                           
   652                           	psect	cstackCOMMON
   653  0070                     __pcstackCOMMON:
   654  0070                     ?_smt_init:
   655  0070                     ?_uart_init:	
   656                           ; 1 bytes @ 0x0
   657                           
   658  0070                     ?_main:	
   659                           ; 1 bytes @ 0x0
   660                           
   661  0070                     ?_myIsr:	
   662                           ; 1 bytes @ 0x0
   663                           
   664  0070                     ??_myIsr:	
   665                           ; 1 bytes @ 0x0
   666                           
   667  0070                     ?_putch:	
   668                           ; 1 bytes @ 0x0
   669                           
   670                           
   671                           ; 1 bytes @ 0x0
   672  0070                     	ds	4
   673  0074                     ??_strncmp:
   674  0074                     ??_smt_init:	
   675                           ; 1 bytes @ 0x4
   676                           
   677  0074                     ??_uart_init:	
   678                           ; 1 bytes @ 0x4
   679                           
   680  0074                     ??_putch:	
   681                           ; 1 bytes @ 0x4
   682                           
   683  0074                     ??___aodiv:	
   684                           ; 1 bytes @ 0x4
   685                           
   686  0074                     ??___aomod:	
   687                           ; 1 bytes @ 0x4
   688                           
   689  0074                     ?_strlen:	
   690                           ; 1 bytes @ 0x4
   691                           
   692  0074                     putch@c:	
   693                           ; 2 bytes @ 0x4
   694                           
   695                           
   696                           ; 1 bytes @ 0x4
   697  0074                     	ds	1
   698  0075                     ?_fputs:
   699  0075                     fputs@fp:	
   700                           ; 2 bytes @ 0x5
   701                           
   702                           
   703                           ; 1 bytes @ 0x5
   704  0075                     	ds	1
   705                           
   706                           	psect	cstackBANK0
   707  0020                     __pcstackBANK0:
   708  0020                     ??_strlen:
   709  0020                     ?_fputc:	
   710                           ; 1 bytes @ 0x0
   711                           
   712  0020                     ?_strncmp:	
   713                           ; 2 bytes @ 0x0
   714                           
   715  0020                     ?___aodiv:	
   716                           ; 2 bytes @ 0x0
   717                           
   718  0020                     ?___aomod:	
   719                           ; 8 bytes @ 0x0
   720                           
   721  0020                     fputc@c:	
   722                           ; 8 bytes @ 0x0
   723                           
   724  0020                     strncmp@_l:	
   725                           ; 2 bytes @ 0x0
   726                           
   727  0020                     ___aodiv@divisor:	
   728                           ; 2 bytes @ 0x0
   729                           
   730  0020                     ___aomod@divisor:	
   731                           ; 8 bytes @ 0x0
   732                           
   733                           
   734                           ; 8 bytes @ 0x0
   735  0020                     	ds	1
   736  0021                     strlen@a:
   737                           
   738                           ; 1 bytes @ 0x1
   739  0021                     	ds	1
   740  0022                     fputc@fp:
   741  0022                     strlen@s:	
   742                           ; 1 bytes @ 0x2
   743                           
   744  0022                     strncmp@_r:	
   745                           ; 1 bytes @ 0x2
   746                           
   747                           
   748                           ; 2 bytes @ 0x2
   749  0022                     	ds	1
   750  0023                     ??_fputc:
   751                           
   752                           ; 1 bytes @ 0x3
   753  0023                     	ds	1
   754  0024                     strncmp@n:
   755                           
   756                           ; 2 bytes @ 0x4
   757  0024                     	ds	2
   758  0026                     strncmp@l:
   759                           
   760                           ; 2 bytes @ 0x6
   761  0026                     	ds	2
   762  0028                     ??_fputs:
   763  0028                     strncmp@r:	
   764                           ; 1 bytes @ 0x8
   765                           
   766  0028                     ___aodiv@dividend:	
   767                           ; 2 bytes @ 0x8
   768                           
   769  0028                     ___aomod@dividend:	
   770                           ; 8 bytes @ 0x8
   771                           
   772                           
   773                           ; 8 bytes @ 0x8
   774  0028                     	ds	3
   775  002B                     fputs@c:
   776                           
   777                           ; 1 bytes @ 0xB
   778  002B                     	ds	1
   779  002C                     fputs@i:
   780                           
   781                           ; 2 bytes @ 0xC
   782  002C                     	ds	2
   783  002E                     fputs@s:
   784                           
   785                           ; 1 bytes @ 0xE
   786  002E                     	ds	1
   787  002F                     ?_pad:
   788  002F                     pad@buf:	
   789                           ; 2 bytes @ 0xF
   790                           
   791                           
   792                           ; 1 bytes @ 0xF
   793  002F                     	ds	1
   794  0030                     ___aodiv@counter:
   795  0030                     ___aomod@counter:	
   796                           ; 1 bytes @ 0x10
   797                           
   798  0030                     pad@p:	
   799                           ; 1 bytes @ 0x10
   800                           
   801                           
   802                           ; 2 bytes @ 0x10
   803  0030                     	ds	1
   804  0031                     ___aodiv@sign:
   805  0031                     ___aomod@sign:	
   806                           ; 1 bytes @ 0x11
   807                           
   808                           
   809                           ; 1 bytes @ 0x11
   810  0031                     	ds	1
   811  0032                     ??_pad:
   812  0032                     ?_abs:	
   813                           ; 1 bytes @ 0x12
   814                           
   815  0032                     abs@a:	
   816                           ; 2 bytes @ 0x12
   817                           
   818  0032                     ___aodiv@quotient:	
   819                           ; 2 bytes @ 0x12
   820                           
   821                           
   822                           ; 8 bytes @ 0x12
   823  0032                     	ds	1
   824  0033                     pad@i:
   825                           
   826                           ; 2 bytes @ 0x13
   827  0033                     	ds	1
   828  0034                     ??_abs:
   829                           
   830                           ; 1 bytes @ 0x14
   831  0034                     	ds	1
   832  0035                     pad@w:
   833                           
   834                           ; 2 bytes @ 0x15
   835  0035                     	ds	2
   836  0037                     pad@fp:
   837                           
   838                           ; 1 bytes @ 0x17
   839  0037                     	ds	3
   840  003A                     ?_dtoa:
   841  003A                     dtoa@d:	
   842                           ; 2 bytes @ 0x1A
   843                           
   844                           
   845                           ; 8 bytes @ 0x1A
   846  003A                     	ds	8
   847  0042                     ??_dtoa:
   848                           
   849                           ; 1 bytes @ 0x22
   850  0042                     	ds	3
   851  0045                     _dtoa$872:
   852                           
   853                           ; 2 bytes @ 0x25
   854  0045                     	ds	2
   855  0047                     dtoa@p:
   856                           
   857                           ; 2 bytes @ 0x27
   858  0047                     	ds	2
   859  0049                     dtoa@fp:
   860                           
   861                           ; 1 bytes @ 0x29
   862  0049                     	ds	1
   863  004A                     dtoa@w:
   864                           
   865                           ; 2 bytes @ 0x2A
   866  004A                     	ds	2
   867  004C                     dtoa@s:
   868                           
   869                           ; 2 bytes @ 0x2C
   870  004C                     	ds	2
   871  004E                     dtoa@n:
   872                           
   873                           ; 8 bytes @ 0x2E
   874  004E                     	ds	8
   875  0056                     dtoa@i:
   876                           
   877                           ; 2 bytes @ 0x36
   878  0056                     	ds	2
   879  0058                     ?_vfpfcnvrt:
   880  0058                     vfpfcnvrt@fmt:	
   881                           ; 2 bytes @ 0x38
   882                           
   883                           
   884                           ; 1 bytes @ 0x38
   885  0058                     	ds	1
   886  0059                     vfpfcnvrt@ap:
   887                           
   888                           ; 1 bytes @ 0x39
   889  0059                     	ds	1
   890  005A                     ??_vfpfcnvrt:
   891                           
   892                           ; 1 bytes @ 0x3A
   893  005A                     	ds	5
   894  005F                     vfpfcnvrt@ll:
   895                           
   896                           ; 8 bytes @ 0x3F
   897  005F                     	ds	8
   898  0067                     vfpfcnvrt@fp:
   899                           
   900                           ; 1 bytes @ 0x47
   901  0067                     	ds	1
   902  0068                     ?_vfprintf:
   903  0068                     vfprintf@fmt:	
   904                           ; 2 bytes @ 0x48
   905                           
   906                           
   907                           ; 2 bytes @ 0x48
   908  0068                     	ds	2
   909  006A                     vfprintf@ap:
   910                           
   911                           ; 1 bytes @ 0x4A
   912  006A                     	ds	1
   913  006B                     ??_vfprintf:
   914                           
   915                           ; 1 bytes @ 0x4B
   916  006B                     	ds	2
   917  006D                     vfprintf@fp:
   918                           
   919                           ; 1 bytes @ 0x4D
   920  006D                     	ds	1
   921  006E                     vfprintf@cfmt:
   922                           
   923                           ; 2 bytes @ 0x4E
   924  006E                     	ds	2
   925                           
   926                           	psect	maintext
   927  05EC                     __pmaintext:	
   928 ;;
   929 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   930 ;;
   931 ;; *************** function _main *****************
   932 ;; Defined at:
   933 ;;		line 69 in file "smt_main.c"
   934 ;; Parameters:    Size  Location     Type
   935 ;;		None
   936 ;; Auto vars:     Size  Location     Type
   937 ;;		None
   938 ;; Return value:  Size  Location     Type
   939 ;;                  1    wreg      void 
   940 ;; Registers used:
   941 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   942 ;; Tracked objects:
   943 ;;		On entry : B1F/0
   944 ;;		On exit  : 0/0
   945 ;;		Unchanged: 0/0
   946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   949 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
   950 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
   951 ;;Total ram usage:        2 bytes
   952 ;; Hardware stack levels required when called: 9
   953 ;; This function calls:
   954 ;;		_printf
   955 ;;		_smt_init
   956 ;;		_uart_init
   957 ;; This function is called by:
   958 ;;		Startup code after reset
   959 ;; This function uses a non-reentrant model
   960 ;;
   961                           
   962                           
   963                           ;psect for function _main
   964  05EC                     _main:
   965  05EC                     l1645:	
   966                           ;incstack = 0
   967                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   968                           
   969                           
   970                           ;smt_main.c: 70:     TRISBbits.TRISB7 = 0;
   971  05EC  0021               	movlb	1	; select bank1
   972  05ED  138D               	bcf	13,7	;volatile
   973                           
   974                           ;smt_main.c: 71:     TRISAbits.TRISA5 = 1;
   975  05EE  168C               	bsf	12,5	;volatile
   976                           
   977                           ;smt_main.c: 73:     TRISCbits.TRISC7 = 1;
   978  05EF  178E               	bsf	14,7	;volatile
   979  05F0                     l1647:
   980                           
   981                           ;smt_main.c: 74:     OSCCONbits.SCS = 0;
   982  05F0  30FC               	movlw	-4
   983  05F1  0599               	andwf	25,f	;volatile
   984                           
   985                           ;smt_main.c: 75:     OSCCONbits.IRCF = 0b1111;
   986  05F2  3078               	movlw	120
   987  05F3  0499               	iorwf	25,f	;volatile
   988  05F4                     l1649:
   989                           
   990                           ;smt_main.c: 76:     __nop();
   991  05F4  0000               	nop
   992  05F5                     l1651:
   993                           
   994                           ;smt_main.c: 77:     __nop();
   995  05F5  0000               	nop
   996  05F6                     l1653:
   997                           
   998                           ;smt_main.c: 78:     __nop();
   999  05F6  0000               	nop
  1000  05F7                     l1655:
  1001                           
  1002                           ;smt_main.c: 79:     __nop();
  1003  05F7  0000               	nop
  1004  05F8                     l1657:
  1005                           
  1006                           ;smt_main.c: 81:     INTCONbits.GIE = 1;
  1007  05F8  178B               	bsf	11,7	;volatile
  1008  05F9                     l1659:
  1009                           
  1010                           ;smt_main.c: 82:     INTCONbits.PEIE = 1;
  1011  05F9  170B               	bsf	11,6	;volatile
  1012  05FA                     l1661:
  1013                           
  1014                           ;smt_main.c: 83:     PIE4bits.SMT1PRAIE = 1;
  1015  05FA  0021               	movlb	1	; select bank1
  1016  05FB  1493               	bsf	19,1	;volatile
  1017  05FC                     l1663:
  1018                           
  1019                           ;smt_main.c: 84:     smt_init();
  1020  05FC  3186  26E8  3185   	fcall	_smt_init
  1021  05FF                     l1665:
  1022                           
  1023                           ;smt_main.c: 85:     uart_init();
  1024  05FF  3186  26DC  3185   	fcall	_uart_init
  1025  0602                     l61:	
  1026                           ;smt_main.c: 86:     while(1)
  1027                           
  1028                           
  1029                           ;smt_main.c: 87:     {;smt_main.c: 89:         if(dataAvailable)
  1030  0602  0021               	movlb	1	; select bank1
  1031  0603  082C               	movf	_dataAvailable^(0+128),w
  1032  0604  1903               	btfsc	3,2
  1033  0605  2E07               	goto	u1761
  1034  0606  2E08               	goto	u1760
  1035  0607                     u1761:
  1036  0607  2E02               	goto	l61
  1037  0608                     u1760:
  1038  0608                     l1667:
  1039                           
  1040                           ;smt_main.c: 90:         {;smt_main.c: 91:         printf("SMT1CPR: %ld\n",actValue);
  1041  0608  30CE               	movlw	low (STR_1| (0+32768))
  1042  0609  00CD               	movwf	printf@fmt^(0+128)
  1043  060A  3086               	movlw	high (STR_1| (0+32768))
  1044  060B  00CE               	movwf	(printf@fmt^(0+128)+1)
  1045  060C  0823               	movf	(_actValue+3)^(0+128),w
  1046  060D  00D2               	movwf	((?_printf+3)^(0+128)+2)
  1047  060E  0822               	movf	(_actValue+2)^(0+128),w
  1048  060F  00D1               	movwf	((?_printf+2)^(0+128)+2)
  1049  0610  0821               	movf	(_actValue+1)^(0+128),w
  1050  0611  00D0               	movwf	((?_printf+1)^(0+128)+2)
  1051  0612  0820               	movf	_actValue^(0+128),w
  1052  0613  00CF               	movwf	(?_printf^(0+128)+2)
  1053  0614  3186  26B7  3185   	fcall	_printf
  1054  0617                     l1669:
  1055                           
  1056                           ;smt_main.c: 92:         _delay((unsigned long)((50)*(32000000/4000.0)));
  1057  0617  3003               	movlw	3
  1058  0618  0021               	movlb	1	; select bank1
  1059  0619  00D6               	movwf	(??_main^(0+128)+1)
  1060  061A  3008               	movlw	8
  1061  061B  00D5               	movwf	??_main^(0+128)
  1062  061C  3077               	movlw	119
  1063  061D                     u1777:
  1064  061D  0B89               	decfsz	9,f
  1065  061E  2E1D               	goto	u1777
  1066  061F  0BD5               	decfsz	??_main^(0+128),f
  1067  0620  2E1D               	goto	u1777
  1068  0621  0BD6               	decfsz	(??_main^(0+128)+1),f
  1069  0622  2E1D               	goto	u1777
  1070  0623                     l1671:
  1071                           
  1072                           ;smt_main.c: 93:         dataAvailable = 0;
  1073  0623  0021               	movlb	1	; select bank1
  1074  0624  01AC               	clrf	_dataAvailable^(0+128)
  1075  0625  2E02               	goto	l61
  1076  0626  3180  2846         	ljmp	start
  1077  0628                     __end_of_main:
  1078                           
  1079                           	psect	text1
  1080  06DC                     __ptext1:	
  1081 ;; *************** function _uart_init *****************
  1082 ;; Defined at:
  1083 ;;		line 53 in file "smt_main.c"
  1084 ;; Parameters:    Size  Location     Type
  1085 ;;		None
  1086 ;; Auto vars:     Size  Location     Type
  1087 ;;		None
  1088 ;; Return value:  Size  Location     Type
  1089 ;;                  1    wreg      void 
  1090 ;; Registers used:
  1091 ;;		wreg, status,2
  1092 ;; Tracked objects:
  1093 ;;		On entry : 0/0
  1094 ;;		On exit  : 0/0
  1095 ;;		Unchanged: 0/0
  1096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1100 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1101 ;;Total ram usage:        0 bytes
  1102 ;; Hardware stack levels used: 1
  1103 ;; Hardware stack levels required when called: 1
  1104 ;; This function calls:
  1105 ;;		Nothing
  1106 ;; This function is called by:
  1107 ;;		_main
  1108 ;; This function uses a non-reentrant model
  1109 ;;
  1110                           
  1111                           
  1112                           ;psect for function _uart_init
  1113  06DC                     _uart_init:
  1114  06DC                     l1351:	
  1115                           ;incstack = 0
  1116                           ; Regs used in _uart_init: [wreg+status,2]
  1117                           
  1118                           
  1119                           ;smt_main.c: 55:     TX1STAbits.TXEN = 1;
  1120  06DC  0023               	movlb	3	; select bank3
  1121  06DD  169E               	bsf	30,5	;volatile
  1122                           
  1123                           ;smt_main.c: 56:     TX1STAbits.BRGH = 1;
  1124  06DE  151E               	bsf	30,2	;volatile
  1125                           
  1126                           ;smt_main.c: 57:     RC1STAbits.SPEN = 1;
  1127  06DF  179D               	bsf	29,7	;volatile
  1128                           
  1129                           ;smt_main.c: 58:     BAUD1CONbits.BRG16 = 1;
  1130  06E0  159F               	bsf	31,3	;volatile
  1131  06E1                     l1353:
  1132                           
  1133                           ;smt_main.c: 59:     SPBRGH = 0;
  1134  06E1  019C               	clrf	28	;volatile
  1135  06E2                     l1355:
  1136                           
  1137                           ;smt_main.c: 60:     SPBRGL = 70;
  1138  06E2  3046               	movlw	70
  1139  06E3  009B               	movwf	27	;volatile
  1140  06E4                     l1357:
  1141                           
  1142                           ;smt_main.c: 61:     RC7PPS = 0b10010;
  1143  06E4  3012               	movlw	18
  1144  06E5  003D               	movlb	29	; select bank29
  1145  06E6  00A7               	movwf	39	;volatile
  1146  06E7                     l50:
  1147  06E7  0008               	return
  1148  06E8                     __end_of_uart_init:
  1149                           
  1150                           	psect	text2
  1151  06E8                     __ptext2:	
  1152 ;; *************** function _smt_init *****************
  1153 ;; Defined at:
  1154 ;;		line 42 in file "smt_main.c"
  1155 ;; Parameters:    Size  Location     Type
  1156 ;;		None
  1157 ;; Auto vars:     Size  Location     Type
  1158 ;;		None
  1159 ;; Return value:  Size  Location     Type
  1160 ;;                  1    wreg      void 
  1161 ;; Registers used:
  1162 ;;		wreg, status,2, status,0
  1163 ;; Tracked objects:
  1164 ;;		On entry : 0/0
  1165 ;;		On exit  : 0/0
  1166 ;;		Unchanged: 0/0
  1167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1171 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1172 ;;Total ram usage:        0 bytes
  1173 ;; Hardware stack levels used: 1
  1174 ;; Hardware stack levels required when called: 1
  1175 ;; This function calls:
  1176 ;;		Nothing
  1177 ;; This function is called by:
  1178 ;;		_main
  1179 ;; This function uses a non-reentrant model
  1180 ;;
  1181                           
  1182                           
  1183                           ;psect for function _smt_init
  1184  06E8                     _smt_init:
  1185  06E8                     l1341:	
  1186                           ;incstack = 0
  1187                           ; Regs used in _smt_init: [wreg+status,2+status,0]
  1188                           
  1189                           
  1190                           ;smt_main.c: 45:     SMT1CON1bits.MODE = 0b0111;
  1191  06E8  003B               	movlb	27	; select bank27
  1192  06E9  0819               	movf	25,w	;volatile
  1193  06EA  39F0               	andlw	-16
  1194  06EB  3807               	iorlw	7
  1195  06EC  0099               	movwf	25	;volatile
  1196  06ED                     l1343:
  1197                           
  1198                           ;smt_main.c: 46:     SMT1CON1bits.SMT1GO = 1;
  1199  06ED  1799               	bsf	25,7	;volatile
  1200  06EE                     l1345:
  1201                           
  1202                           ;smt_main.c: 47:     SMT1CON1bits.REPEAT =1;
  1203  06EE  1719               	bsf	25,6	;volatile
  1204  06EF                     l1347:
  1205                           
  1206                           ;smt_main.c: 48:     SMT1CLKbits.CSEL = 1;
  1207  06EF  3001               	movlw	1
  1208  06F0  009B               	movwf	27	;volatile
  1209  06F1                     l1349:
  1210                           
  1211                           ;smt_main.c: 50:     SMT1CON0bits.EN = 1;
  1212  06F1  1798               	bsf	24,7	;volatile
  1213  06F2                     l47:
  1214  06F2  0008               	return
  1215  06F3                     __end_of_smt_init:
  1216                           
  1217                           	psect	text3
  1218  06B7                     __ptext3:	
  1219 ;; *************** function _printf *****************
  1220 ;; Defined at:
  1221 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\printf.c"
  1222 ;; Parameters:    Size  Location     Type
  1223 ;;  fmt             2    0[BANK1 ] PTR const unsigned char 
  1224 ;;		 -> STR_1(14), 
  1225 ;; Auto vars:     Size  Location     Type
  1226 ;;  ret             2    0        int 
  1227 ;;  ap              1    7[BANK1 ] PTR void [1]
  1228 ;;		 -> ?_printf(2), 
  1229 ;; Return value:  Size  Location     Type
  1230 ;;                  2    0[BANK1 ] int 
  1231 ;; Registers used:
  1232 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1233 ;; Tracked objects:
  1234 ;;		On entry : 0/0
  1235 ;;		On exit  : 0/0
  1236 ;;		Unchanged: 0/0
  1237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1238 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  1239 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  1240 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  1241 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  1242 ;;Total ram usage:        8 bytes
  1243 ;; Hardware stack levels used: 1
  1244 ;; Hardware stack levels required when called: 8
  1245 ;; This function calls:
  1246 ;;		_vfprintf
  1247 ;; This function is called by:
  1248 ;;		_main
  1249 ;; This function uses a non-reentrant model
  1250 ;;
  1251                           
  1252                           
  1253                           ;psect for function _printf
  1254  06B7                     _printf:
  1255  06B7                     l1639:	
  1256                           ;incstack = 0
  1257                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1258                           
  1259  06B7  30CF               	movlw	(low ((?_printf| 0+2)))& (0+255)
  1260  06B8  0021               	movlb	1	; select bank1
  1261  06B9  00D3               	movwf	??_printf^(0+128)
  1262  06BA  0853               	movf	??_printf^(0+128),w
  1263  06BB  00D4               	movwf	printf@ap^(0+128)
  1264  06BC                     l1641:
  1265  06BC  084E               	movf	(printf@fmt+1)^(0+128),w
  1266  06BD  0020               	movlb	0	; select bank0
  1267  06BE  00E9               	movwf	vfprintf@fmt+1
  1268  06BF  0021               	movlb	1	; select bank1
  1269  06C0  084D               	movf	printf@fmt^(0+128),w
  1270  06C1  0020               	movlb	0	; select bank0
  1271  06C2  00E8               	movwf	vfprintf@fmt
  1272  06C3  30D4               	movlw	(low (printf@ap| 0))& (0+255)
  1273  06C4  0021               	movlb	1	; select bank1
  1274  06C5  00D3               	movwf	??_printf^(0+128)
  1275  06C6  0853               	movf	??_printf^(0+128),w
  1276  06C7  0020               	movlb	0	; select bank0
  1277  06C8  00EA               	movwf	vfprintf@ap
  1278  06C9  3000               	movlw	0
  1279  06CA  3186  2628  3186   	fcall	_vfprintf
  1280  06CD                     l608:
  1281  06CD  0008               	return
  1282  06CE                     __end_of_printf:
  1283                           
  1284                           	psect	text4
  1285  0628                     __ptext4:	
  1286 ;; *************** function _vfprintf *****************
  1287 ;; Defined at:
  1288 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1289 ;; Parameters:    Size  Location     Type
  1290 ;;  fp              1    wreg     PTR struct _IO_FILE
  1291 ;;		 -> NULL(0), 
  1292 ;;  fmt             2   72[BANK0 ] PTR const unsigned char 
  1293 ;;		 -> STR_1(14), 
  1294 ;;  ap              1   74[BANK0 ] PTR PTR void 
  1295 ;;		 -> printf@ap(1), 
  1296 ;; Auto vars:     Size  Location     Type
  1297 ;;  fp              1   77[BANK0 ] PTR struct _IO_FILE
  1298 ;;		 -> NULL(0), 
  1299 ;;  cfmt            2   78[BANK0 ] PTR unsigned char 
  1300 ;;		 -> STR_1(14), 
  1301 ;; Return value:  Size  Location     Type
  1302 ;;                  2   72[BANK0 ] int 
  1303 ;; Registers used:
  1304 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1305 ;; Tracked objects:
  1306 ;;		On entry : 0/0
  1307 ;;		On exit  : 0/0
  1308 ;;		Unchanged: 0/0
  1309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1310 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1311 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1312 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1313 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1314 ;;Total ram usage:        8 bytes
  1315 ;; Hardware stack levels used: 1
  1316 ;; Hardware stack levels required when called: 7
  1317 ;; This function calls:
  1318 ;;		_vfpfcnvrt
  1319 ;; This function is called by:
  1320 ;;		_printf
  1321 ;; This function uses a non-reentrant model
  1322 ;;
  1323                           
  1324                           
  1325                           ;psect for function _vfprintf
  1326  0628                     _vfprintf:
  1327                           
  1328                           ;incstack = 0
  1329                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1330                           ;vfprintf@fp stored from wreg
  1331  0628  0020               	movlb	0	; select bank0
  1332  0629  00ED               	movwf	vfprintf@fp
  1333  062A                     l1627:
  1334                           
  1335                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1336  062A  0869               	movf	vfprintf@fmt+1,w
  1337  062B  00EF               	movwf	vfprintf@cfmt+1
  1338  062C  0868               	movf	vfprintf@fmt,w
  1339  062D  00EE               	movwf	vfprintf@cfmt
  1340  062E                     l1629:
  1341                           
  1342                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1343  062E  0021               	movlb	1	; select bank1
  1344  062F  01A8               	clrf	_nout^(0+128)
  1345  0630  01A9               	clrf	(_nout+1)^(0+128)
  1346                           
  1347                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1348  0631  2E46               	goto	l1633
  1349  0632                     l1631:
  1350                           
  1351                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1352  0632  306E               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  1353  0633  00EB               	movwf	??_vfprintf
  1354  0634  086B               	movf	??_vfprintf,w
  1355  0635  00D8               	movwf	vfpfcnvrt@fmt
  1356  0636  086A               	movf	vfprintf@ap,w
  1357  0637  00EC               	movwf	??_vfprintf+1
  1358  0638  086C               	movf	??_vfprintf+1,w
  1359  0639  00D9               	movwf	vfpfcnvrt@ap
  1360  063A  086D               	movf	vfprintf@fp,w
  1361  063B  3181  21BA  3186   	fcall	_vfpfcnvrt
  1362  063E  0020               	movlb	0	; select bank0
  1363  063F  0858               	movf	?_vfpfcnvrt,w
  1364  0640  0021               	movlb	1	; select bank1
  1365  0641  07A8               	addwf	_nout^(0+128),f
  1366  0642  0020               	movlb	0	; select bank0
  1367  0643  0859               	movf	?_vfpfcnvrt+1,w
  1368  0644  0021               	movlb	1	; select bank1
  1369  0645  3DA9               	addwfc	(_nout+1)^(0+128),f
  1370  0646                     l1633:
  1371                           
  1372                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1373  0646  0020               	movlb	0	; select bank0
  1374  0647  086E               	movf	vfprintf@cfmt,w
  1375  0648  0084               	movwf	4
  1376  0649  086F               	movf	vfprintf@cfmt+1,w
  1377  064A  0085               	movwf	5
  1378  064B  0012               	moviw fsr0++
  1379  064C  1D03               	btfss	3,2
  1380  064D  2E4F               	goto	u1751
  1381  064E  2E50               	goto	u1750
  1382  064F                     u1751:
  1383  064F  2E32               	goto	l1631
  1384  0650                     u1750:
  1385  0650                     l1635:
  1386                           
  1387                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1388  0650  0021               	movlb	1	; select bank1
  1389  0651  0829               	movf	(_nout+1)^(0+128),w
  1390  0652  0020               	movlb	0	; select bank0
  1391  0653  00E9               	movwf	?_vfprintf+1
  1392  0654  0021               	movlb	1	; select bank1
  1393  0655  0828               	movf	_nout^(0+128),w
  1394  0656  0020               	movlb	0	; select bank0
  1395  0657  00E8               	movwf	?_vfprintf
  1396  0658                     l685:
  1397  0658  0008               	return
  1398  0659                     __end_of_vfprintf:
  1399                           
  1400                           	psect	text5
  1401  01BA                     __ptext5:	
  1402 ;; *************** function _vfpfcnvrt *****************
  1403 ;; Defined at:
  1404 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1405 ;; Parameters:    Size  Location     Type
  1406 ;;  fp              1    wreg     PTR struct _IO_FILE
  1407 ;;		 -> NULL(0), 
  1408 ;;  fmt             1   56[BANK0 ] PTR PTR unsigned char 
  1409 ;;		 -> vfprintf@cfmt(2), 
  1410 ;;  ap              1   57[BANK0 ] PTR PTR void 
  1411 ;;		 -> printf@ap(1), 
  1412 ;; Auto vars:     Size  Location     Type
  1413 ;;  fp              1   71[BANK0 ] PTR struct _IO_FILE
  1414 ;;		 -> NULL(0), 
  1415 ;;  ll              8   63[BANK0 ] long long 
  1416 ;;  llu             8    0        unsigned long long 
  1417 ;;  f               4    0        unsigned long long 
  1418 ;;  ct              3    0        unsigned char [3]
  1419 ;;  vp              2    0        PTR void 
  1420 ;;  i               2    0        int 
  1421 ;;  done            2    0        int 
  1422 ;;  cp              2    0        PTR unsigned char 
  1423 ;;  c               1    0        unsigned char 
  1424 ;; Return value:  Size  Location     Type
  1425 ;;                  2   56[BANK0 ] int 
  1426 ;; Registers used:
  1427 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1428 ;; Tracked objects:
  1429 ;;		On entry : 0/0
  1430 ;;		On exit  : 0/0
  1431 ;;		Unchanged: 0/0
  1432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1433 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1434 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1435 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1436 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1437 ;;Total ram usage:       16 bytes
  1438 ;; Hardware stack levels used: 1
  1439 ;; Hardware stack levels required when called: 6
  1440 ;; This function calls:
  1441 ;;		_dtoa
  1442 ;;		_fputc
  1443 ;;		_strncmp
  1444 ;; This function is called by:
  1445 ;;		_vfprintf
  1446 ;; This function uses a non-reentrant model
  1447 ;;
  1448                           
  1449                           
  1450                           ;psect for function _vfpfcnvrt
  1451  01BA                     _vfpfcnvrt:
  1452                           
  1453                           ;incstack = 0
  1454                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1455                           ;vfpfcnvrt@fp stored from wreg
  1456  01BA  0020               	movlb	0	; select bank0
  1457  01BB  00E7               	movwf	vfpfcnvrt@fp
  1458  01BC                     l1571:
  1459                           
  1460                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1461  01BC  0858               	movf	vfpfcnvrt@fmt,w
  1462  01BD  0086               	movwf	6
  1463  01BE  0187               	clrf	7
  1464  01BF  3F40               	moviw [0]fsr1
  1465  01C0  00DA               	movwf	??_vfpfcnvrt
  1466  01C1  3F41               	moviw [1]fsr1
  1467  01C2  00DB               	movwf	??_vfpfcnvrt+1
  1468  01C3  085A               	movf	??_vfpfcnvrt,w
  1469  01C4  0084               	movwf	4
  1470  01C5  085B               	movf	??_vfpfcnvrt+1,w
  1471  01C6  0085               	movwf	5
  1472  01C7  0012               	moviw fsr0++
  1473  01C8  3A25               	xorlw	37
  1474  01C9  1D03               	btfss	3,2
  1475  01CA  29CC               	goto	u1691
  1476  01CB  29CD               	goto	u1690
  1477  01CC                     u1691:
  1478  01CC  2AE4               	goto	l1619
  1479  01CD                     u1690:
  1480  01CD                     l1573:
  1481                           
  1482                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1483  01CD  0858               	movf	vfpfcnvrt@fmt,w
  1484  01CE  0086               	movwf	6
  1485  01CF  0187               	clrf	7
  1486  01D0  3001               	movlw	1
  1487  01D1  0781               	addwf	1,f
  1488  01D2  3141               	addfsr 1,1
  1489  01D3  1803               	skipnc
  1490  01D4  0A81               	incf	1,f
  1491  01D5                     l1575:
  1492                           
  1493                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1494  01D5  0021               	movlb	1	; select bank1
  1495  01D6  01AA               	clrf	_width^(0+128)
  1496  01D7  01AB               	clrf	(_width+1)^(0+128)
  1497  01D8  01F8               	clrf	_flags
  1498  01D9  01F9               	clrf	_flags+1
  1499  01DA                     l1577:
  1500                           
  1501                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1502  01DA  30FF               	movlw	255
  1503  01DB  00F6               	movwf	_prec
  1504  01DC  30FF               	movlw	255
  1505  01DD  00F7               	movwf	_prec+1
  1506  01DE                     l1579:
  1507                           
  1508                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  1509  01DE  0020               	movlb	0	; select bank0
  1510  01DF  0858               	movf	vfpfcnvrt@fmt,w
  1511  01E0  0086               	movwf	6
  1512  01E1  0187               	clrf	7
  1513  01E2  3F40               	moviw [0]fsr1
  1514  01E3  00DA               	movwf	??_vfpfcnvrt
  1515  01E4  3F41               	moviw [1]fsr1
  1516  01E5  00DB               	movwf	??_vfpfcnvrt+1
  1517  01E6  085A               	movf	??_vfpfcnvrt,w
  1518  01E7  0084               	movwf	4
  1519  01E8  085B               	movf	??_vfpfcnvrt+1,w
  1520  01E9  0085               	movwf	5
  1521  01EA  0012               	moviw fsr0++
  1522  01EB  3A64               	xorlw	100
  1523  01EC  1903               	btfsc	3,2
  1524  01ED  29EF               	goto	u1701
  1525  01EE  29F0               	goto	u1700
  1526  01EF                     u1701:
  1527  01EF  2A01               	goto	l1583
  1528  01F0                     u1700:
  1529  01F0                     l1581:
  1530  01F0  0858               	movf	vfpfcnvrt@fmt,w
  1531  01F1  0086               	movwf	6
  1532  01F2  0187               	clrf	7
  1533  01F3  3F40               	moviw [0]fsr1
  1534  01F4  00DA               	movwf	??_vfpfcnvrt
  1535  01F5  3F41               	moviw [1]fsr1
  1536  01F6  00DB               	movwf	??_vfpfcnvrt+1
  1537  01F7  085A               	movf	??_vfpfcnvrt,w
  1538  01F8  0084               	movwf	4
  1539  01F9  085B               	movf	??_vfpfcnvrt+1,w
  1540  01FA  0085               	movwf	5
  1541  01FB  0012               	moviw fsr0++
  1542  01FC  3A69               	xorlw	105
  1543  01FD  1D03               	btfss	3,2
  1544  01FE  2A00               	goto	u1711
  1545  01FF  2A01               	goto	u1710
  1546  0200                     u1711:
  1547  0200  2A3C               	goto	l1591
  1548  0201                     u1710:
  1549  0201                     l1583:
  1550                           
  1551                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  1552  0201  0858               	movf	vfpfcnvrt@fmt,w
  1553  0202  0086               	movwf	6
  1554  0203  0187               	clrf	7
  1555  0204  3001               	movlw	1
  1556  0205  0781               	addwf	1,f
  1557  0206  3141               	addfsr 1,1
  1558  0207  1803               	skipnc
  1559  0208  0A81               	incf	1,f
  1560  0209                     l1585:
  1561                           
  1562                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  1563  0209  0859               	movf	vfpfcnvrt@ap,w
  1564  020A  0086               	movwf	6
  1565  020B  0187               	clrf	7
  1566  020C  0801               	movf	1,w
  1567  020D  0084               	movwf	4
  1568  020E  0185               	clrf	5
  1569  020F  3002               	movlw	2
  1570  0210  0781               	addwf	1,f
  1571  0211  3F00               	moviw [0]fsr0
  1572  0212  00DA               	movwf	??_vfpfcnvrt
  1573  0213  3F01               	moviw [1]fsr0
  1574  0214  00DB               	movwf	??_vfpfcnvrt+1
  1575  0215  085A               	movf	??_vfpfcnvrt,w
  1576  0216  00DF               	movwf	vfpfcnvrt@ll
  1577  0217  085B               	movf	??_vfpfcnvrt+1,w
  1578  0218  00E0               	movwf	vfpfcnvrt@ll+1
  1579  0219  0D89               	rlf	9,f
  1580  021A  3B89               	subwfb	9,f
  1581  021B  0989               	comf	9,f
  1582  021C  00E1               	movwf	vfpfcnvrt@ll+2
  1583  021D  00E2               	movwf	vfpfcnvrt@ll+3
  1584  021E  00E3               	movwf	vfpfcnvrt@ll+4
  1585  021F  00E4               	movwf	vfpfcnvrt@ll+5
  1586  0220  00E5               	movwf	vfpfcnvrt@ll+6
  1587  0221  00E6               	movwf	vfpfcnvrt@ll+7
  1588  0222                     l1587:
  1589                           
  1590                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  1591  0222  085F               	movf	vfpfcnvrt@ll,w
  1592  0223  00BA               	movwf	dtoa@d
  1593  0224  0860               	movf	vfpfcnvrt@ll+1,w
  1594  0225  00BB               	movwf	dtoa@d+1
  1595  0226  0861               	movf	vfpfcnvrt@ll+2,w
  1596  0227  00BC               	movwf	dtoa@d+2
  1597  0228  0862               	movf	vfpfcnvrt@ll+3,w
  1598  0229  00BD               	movwf	dtoa@d+3
  1599  022A  0863               	movf	vfpfcnvrt@ll+4,w
  1600  022B  00BE               	movwf	dtoa@d+4
  1601  022C  0864               	movf	vfpfcnvrt@ll+5,w
  1602  022D  00BF               	movwf	dtoa@d+5
  1603  022E  0865               	movf	vfpfcnvrt@ll+6,w
  1604  022F  00C0               	movwf	dtoa@d+6
  1605  0230  0866               	movf	vfpfcnvrt@ll+7,w
  1606  0231  00C1               	movwf	dtoa@d+7
  1607  0232  0867               	movf	vfpfcnvrt@fp,w
  1608  0233  3180  2058  3181   	fcall	_dtoa
  1609  0236  0020               	movlb	0	; select bank0
  1610  0237  083B               	movf	?_dtoa+1,w
  1611  0238  00D9               	movwf	?_vfpfcnvrt+1
  1612  0239  083A               	movf	?_dtoa,w
  1613  023A  00D8               	movwf	?_vfpfcnvrt
  1614  023B  2B07               	goto	l675
  1615  023C                     l1591:
  1616                           
  1617                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 857:         if (
      +                          !strncmp(*fmt, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeo
      +                          f("li")/sizeof("li"[0]))-1))) {
  1618  023C  0858               	movf	vfpfcnvrt@fmt,w
  1619  023D  0086               	movwf	6
  1620  023E  0187               	clrf	7
  1621  023F  3F40               	moviw [0]fsr1
  1622  0240  00A0               	movwf	strncmp@_l
  1623  0241  3F41               	moviw [1]fsr1
  1624  0242  00A1               	movwf	strncmp@_l+1
  1625  0243  3002               	movlw	low (STR_2| (0+32768))
  1626  0244  00A2               	movwf	strncmp@_r
  1627  0245  3087               	movlw	high (STR_2| (0+32768))
  1628  0246  00A3               	movwf	strncmp@_r+1
  1629  0247  3002               	movlw	2
  1630  0248  00A4               	movwf	strncmp@n
  1631  0249  3000               	movlw	0
  1632  024A  00A5               	movwf	strncmp@n+1
  1633  024B  3184  24F8  3181   	fcall	_strncmp
  1634  024E  0020               	movlb	0	; select bank0
  1635  024F  0820               	movf	?_strncmp,w
  1636  0250  0421               	iorwf	?_strncmp+1,w
  1637  0251  1903               	btfsc	3,2
  1638  0252  2A54               	goto	u1721
  1639  0253  2A55               	goto	u1720
  1640  0254                     u1721:
  1641  0254  2A6E               	goto	l1595
  1642  0255                     u1720:
  1643  0255                     l1593:
  1644  0255  0858               	movf	vfpfcnvrt@fmt,w
  1645  0256  0086               	movwf	6
  1646  0257  0187               	clrf	7
  1647  0258  3F40               	moviw [0]fsr1
  1648  0259  00A0               	movwf	strncmp@_l
  1649  025A  3F41               	moviw [1]fsr1
  1650  025B  00A1               	movwf	strncmp@_l+1
  1651  025C  3005               	movlw	low (STR_6| (0+32768))
  1652  025D  00A2               	movwf	strncmp@_r
  1653  025E  3087               	movlw	high (STR_6| (0+32768))
  1654  025F  00A3               	movwf	strncmp@_r+1
  1655  0260  3002               	movlw	2
  1656  0261  00A4               	movwf	strncmp@n
  1657  0262  3000               	movlw	0
  1658  0263  00A5               	movwf	strncmp@n+1
  1659  0264  3184  24F8  3181   	fcall	_strncmp
  1660  0267  0020               	movlb	0	; select bank0
  1661  0268  0820               	movf	?_strncmp,w
  1662  0269  0421               	iorwf	?_strncmp+1,w
  1663  026A  1D03               	btfss	3,2
  1664  026B  2A6D               	goto	u1731
  1665  026C  2A6E               	goto	u1730
  1666  026D                     u1731:
  1667  026D  2AAF               	goto	l1603
  1668  026E                     u1730:
  1669  026E                     l1595:
  1670                           
  1671                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 858: ;C:\Program 
      +                          Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 860:             *fmt += ((si
      +                          zeof("ld")/sizeof("ld"[0]))-1);
  1672  026E  0858               	movf	vfpfcnvrt@fmt,w
  1673  026F  0086               	movwf	6
  1674  0270  0187               	clrf	7
  1675  0271  3002               	movlw	2
  1676  0272  0781               	addwf	1,f
  1677  0273  3141               	addfsr 1,1
  1678  0274  1803               	skipnc
  1679  0275  0A81               	incf	1,f
  1680  0276                     l1597:
  1681                           
  1682                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 861:             
      +                          ll = (long long)(*(long *)__va_arg(*(long **)ap, (long)0));
  1683  0276  0859               	movf	vfpfcnvrt@ap,w
  1684  0277  0086               	movwf	6
  1685  0278  0187               	clrf	7
  1686  0279  0801               	movf	1,w
  1687  027A  0084               	movwf	4
  1688  027B  0185               	clrf	5
  1689  027C  3004               	movlw	4
  1690  027D  0781               	addwf	1,f
  1691  027E  3F00               	moviw [0]fsr0
  1692  027F  00DA               	movwf	??_vfpfcnvrt
  1693  0280  3F01               	moviw [1]fsr0
  1694  0281  00DB               	movwf	??_vfpfcnvrt+1
  1695  0282  3F02               	moviw [2]fsr0
  1696  0283  00DC               	movwf	??_vfpfcnvrt+2
  1697  0284  3F03               	moviw [3]fsr0
  1698  0285  00DD               	movwf	??_vfpfcnvrt+3
  1699  0286  085A               	movf	??_vfpfcnvrt,w
  1700  0287  00DF               	movwf	vfpfcnvrt@ll
  1701  0288  085B               	movf	??_vfpfcnvrt+1,w
  1702  0289  00E0               	movwf	vfpfcnvrt@ll+1
  1703  028A  085C               	movf	??_vfpfcnvrt+2,w
  1704  028B  00E1               	movwf	vfpfcnvrt@ll+2
  1705  028C  085D               	movf	??_vfpfcnvrt+3,w
  1706  028D  00E2               	movwf	vfpfcnvrt@ll+3
  1707  028E  3000               	movlw	0
  1708  028F  1BE2               	btfsc	vfpfcnvrt@ll+3,7
  1709  0290  30FF               	movlw	255
  1710  0291  00E3               	movwf	vfpfcnvrt@ll+4
  1711  0292  00E4               	movwf	vfpfcnvrt@ll+5
  1712  0293  00E5               	movwf	vfpfcnvrt@ll+6
  1713  0294  00E6               	movwf	vfpfcnvrt@ll+7
  1714  0295                     l1599:
  1715                           
  1716                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 863:             
      +                          return dtoa(fp, ll);
  1717  0295  085F               	movf	vfpfcnvrt@ll,w
  1718  0296  00BA               	movwf	dtoa@d
  1719  0297  0860               	movf	vfpfcnvrt@ll+1,w
  1720  0298  00BB               	movwf	dtoa@d+1
  1721  0299  0861               	movf	vfpfcnvrt@ll+2,w
  1722  029A  00BC               	movwf	dtoa@d+2
  1723  029B  0862               	movf	vfpfcnvrt@ll+3,w
  1724  029C  00BD               	movwf	dtoa@d+3
  1725  029D  0863               	movf	vfpfcnvrt@ll+4,w
  1726  029E  00BE               	movwf	dtoa@d+4
  1727  029F  0864               	movf	vfpfcnvrt@ll+5,w
  1728  02A0  00BF               	movwf	dtoa@d+5
  1729  02A1  0865               	movf	vfpfcnvrt@ll+6,w
  1730  02A2  00C0               	movwf	dtoa@d+6
  1731  02A3  0866               	movf	vfpfcnvrt@ll+7,w
  1732  02A4  00C1               	movwf	dtoa@d+7
  1733  02A5  0867               	movf	vfpfcnvrt@fp,w
  1734  02A6  3180  2058  3181   	fcall	_dtoa
  1735  02A9  0020               	movlb	0	; select bank0
  1736  02AA  083B               	movf	?_dtoa+1,w
  1737  02AB  00D9               	movwf	?_vfpfcnvrt+1
  1738  02AC  083A               	movf	?_dtoa,w
  1739  02AD  00D8               	movwf	?_vfpfcnvrt
  1740  02AE  2B07               	goto	l675
  1741  02AF                     l1603:
  1742                           
  1743                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  1744  02AF  0858               	movf	vfpfcnvrt@fmt,w
  1745  02B0  0086               	movwf	6
  1746  02B1  0187               	clrf	7
  1747  02B2  3F40               	moviw [0]fsr1
  1748  02B3  00DA               	movwf	??_vfpfcnvrt
  1749  02B4  3F41               	moviw [1]fsr1
  1750  02B5  00DB               	movwf	??_vfpfcnvrt+1
  1751  02B6  085A               	movf	??_vfpfcnvrt,w
  1752  02B7  0084               	movwf	4
  1753  02B8  085B               	movf	??_vfpfcnvrt+1,w
  1754  02B9  0085               	movwf	5
  1755  02BA  0012               	moviw fsr0++
  1756  02BB  3A25               	xorlw	37
  1757  02BC  1D03               	btfss	3,2
  1758  02BD  2ABF               	goto	u1741
  1759  02BE  2AC0               	goto	u1740
  1760  02BF                     u1741:
  1761  02BF  2AD9               	goto	l1613
  1762  02C0                     u1740:
  1763  02C0                     l1605:
  1764                           
  1765                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  1766  02C0  0858               	movf	vfpfcnvrt@fmt,w
  1767  02C1  0086               	movwf	6
  1768  02C2  0187               	clrf	7
  1769  02C3  3001               	movlw	1
  1770  02C4  0781               	addwf	1,f
  1771  02C5  3141               	addfsr 1,1
  1772  02C6  1803               	skipnc
  1773  02C7  0A81               	incf	1,f
  1774  02C8                     l1607:
  1775                           
  1776                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  1777  02C8  3025               	movlw	37
  1778  02C9  00A0               	movwf	fputc@c
  1779  02CA  3000               	movlw	0
  1780  02CB  00A1               	movwf	fputc@c+1
  1781  02CC  0867               	movf	vfpfcnvrt@fp,w
  1782  02CD  00DA               	movwf	??_vfpfcnvrt
  1783  02CE  085A               	movf	??_vfpfcnvrt,w
  1784  02CF  00A2               	movwf	fputc@fp
  1785  02D0  3185  25AB  3181   	fcall	_fputc
  1786  02D3                     l1609:
  1787                           
  1788                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  1789  02D3  3001               	movlw	1
  1790  02D4  0020               	movlb	0	; select bank0
  1791  02D5  00D8               	movwf	?_vfpfcnvrt
  1792  02D6  3000               	movlw	0
  1793  02D7  00D9               	movwf	?_vfpfcnvrt+1
  1794  02D8  2B07               	goto	l675
  1795  02D9                     l1613:
  1796                           
  1797                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  1798  02D9  0858               	movf	vfpfcnvrt@fmt,w
  1799  02DA  0086               	movwf	6
  1800  02DB  0187               	clrf	7
  1801  02DC  3001               	movlw	1
  1802  02DD  0781               	addwf	1,f
  1803  02DE  3141               	addfsr 1,1
  1804  02DF  1803               	skipnc
  1805  02E0  0A81               	incf	1,f
  1806  02E1                     l1615:
  1807                           
  1808                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  1809  02E1  01D8               	clrf	?_vfpfcnvrt
  1810  02E2  01D9               	clrf	?_vfpfcnvrt+1
  1811  02E3  2B07               	goto	l675
  1812  02E4                     l1619:
  1813                           
  1814                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  1815  02E4  0858               	movf	vfpfcnvrt@fmt,w
  1816  02E5  0086               	movwf	6
  1817  02E6  0187               	clrf	7
  1818  02E7  3F40               	moviw [0]fsr1
  1819  02E8  00DA               	movwf	??_vfpfcnvrt
  1820  02E9  3F41               	moviw [1]fsr1
  1821  02EA  00DB               	movwf	??_vfpfcnvrt+1
  1822  02EB  085A               	movf	??_vfpfcnvrt,w
  1823  02EC  0084               	movwf	4
  1824  02ED  085B               	movf	??_vfpfcnvrt+1,w
  1825  02EE  0085               	movwf	5
  1826  02EF  0800               	movf	0,w	;code access
  1827  02F0  00DC               	movwf	??_vfpfcnvrt+2
  1828  02F1  01DD               	clrf	??_vfpfcnvrt+3
  1829  02F2  085C               	movf	??_vfpfcnvrt+2,w
  1830  02F3  00A0               	movwf	fputc@c
  1831  02F4  085D               	movf	??_vfpfcnvrt+3,w
  1832  02F5  00A1               	movwf	fputc@c+1
  1833  02F6  0867               	movf	vfpfcnvrt@fp,w
  1834  02F7  00DE               	movwf	??_vfpfcnvrt+4
  1835  02F8  085E               	movf	??_vfpfcnvrt+4,w
  1836  02F9  00A2               	movwf	fputc@fp
  1837  02FA  3185  25AB  3181   	fcall	_fputc
  1838  02FD                     l1621:
  1839                           
  1840                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  1841  02FD  0020               	movlb	0	; select bank0
  1842  02FE  0858               	movf	vfpfcnvrt@fmt,w
  1843  02FF  0086               	movwf	6
  1844  0300  0187               	clrf	7
  1845  0301  3001               	movlw	1
  1846  0302  0781               	addwf	1,f
  1847  0303  3141               	addfsr 1,1
  1848  0304  1803               	skipnc
  1849  0305  0A81               	incf	1,f
  1850  0306  2AD3               	goto	l1609
  1851  0307                     l675:
  1852  0307  0008               	return
  1853  0308                     __end_of_vfpfcnvrt:
  1854                           
  1855                           	psect	text6
  1856  04F8                     __ptext6:	
  1857 ;; *************** function _strncmp *****************
  1858 ;; Defined at:
  1859 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strncmp.c"
  1860 ;; Parameters:    Size  Location     Type
  1861 ;;  _l              2    0[BANK0 ] PTR const unsigned char 
  1862 ;;		 -> STR_1(14), 
  1863 ;;  _r              2    2[BANK0 ] PTR const unsigned char 
  1864 ;;		 -> STR_8(3), STR_4(3), 
  1865 ;;  n               2    4[BANK0 ] unsigned int 
  1866 ;; Auto vars:     Size  Location     Type
  1867 ;;  r               2    8[BANK0 ] PTR const unsigned char 
  1868 ;;		 -> STR_8(3), STR_4(3), 
  1869 ;;  l               2    6[BANK0 ] PTR const unsigned char 
  1870 ;;		 -> STR_1(14), 
  1871 ;; Return value:  Size  Location     Type
  1872 ;;                  2    0[BANK0 ] int 
  1873 ;; Registers used:
  1874 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  1875 ;; Tracked objects:
  1876 ;;		On entry : 0/0
  1877 ;;		On exit  : 0/0
  1878 ;;		Unchanged: 0/0
  1879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1880 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1881 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1882 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1883 ;;      Totals:         1      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1884 ;;Total ram usage:       11 bytes
  1885 ;; Hardware stack levels used: 1
  1886 ;; Hardware stack levels required when called: 1
  1887 ;; This function calls:
  1888 ;;		Nothing
  1889 ;; This function is called by:
  1890 ;;		_vfpfcnvrt
  1891 ;; This function uses a non-reentrant model
  1892 ;;
  1893                           
  1894                           
  1895                           ;psect for function _strncmp
  1896  04F8                     _strncmp:
  1897  04F8                     l1549:	
  1898                           ;incstack = 0
  1899                           ; Regs used in _strncmp: [wreg-fsr0h+status,2+status,0+pclath]
  1900                           
  1901  04F8  0020               	movlb	0	; select bank0
  1902  04F9  0821               	movf	strncmp@_l+1,w
  1903  04FA  00A7               	movwf	strncmp@l+1
  1904  04FB  0820               	movf	strncmp@_l,w
  1905  04FC  00A6               	movwf	strncmp@l
  1906  04FD  0823               	movf	strncmp@_r+1,w
  1907  04FE  00A9               	movwf	strncmp@r+1
  1908  04FF  0822               	movf	strncmp@_r,w
  1909  0500  00A8               	movwf	strncmp@r
  1910  0501                     l1551:
  1911  0501  3001               	movlw	1
  1912  0502  02A4               	subwf	strncmp@n,f
  1913  0503  3000               	movlw	0
  1914  0504  3BA5               	subwfb	strncmp@n+1,f
  1915  0505  0A24               	incf	strncmp@n,w
  1916  0506  1D03               	skipz
  1917  0507  2D0C               	goto	u1641
  1918  0508  0A25               	incf	strncmp@n+1,w
  1919  0509  1D03               	btfss	3,2
  1920  050A  2D0C               	goto	u1641
  1921  050B  2D0D               	goto	u1640
  1922  050C                     u1641:
  1923  050C  2D1C               	goto	l1559
  1924  050D                     u1640:
  1925  050D                     l1553:
  1926  050D  01A0               	clrf	?_strncmp
  1927  050E  01A1               	clrf	?_strncmp+1
  1928  050F  2D54               	goto	l722
  1929  0510                     l1557:
  1930  0510  3001               	movlw	1
  1931  0511  07A6               	addwf	strncmp@l,f
  1932  0512  3000               	movlw	0
  1933  0513  3DA7               	addwfc	strncmp@l+1,f
  1934  0514  3001               	movlw	1
  1935  0515  07A8               	addwf	strncmp@r,f
  1936  0516  3000               	movlw	0
  1937  0517  3DA9               	addwfc	strncmp@r+1,f
  1938  0518  3001               	movlw	1
  1939  0519  02A4               	subwf	strncmp@n,f
  1940  051A  3000               	movlw	0
  1941  051B  3BA5               	subwfb	strncmp@n+1,f
  1942  051C                     l1559:
  1943  051C  0826               	movf	strncmp@l,w
  1944  051D  0084               	movwf	4
  1945  051E  0827               	movf	strncmp@l+1,w
  1946  051F  0085               	movwf	5
  1947  0520  0012               	moviw fsr0++
  1948  0521  1903               	btfsc	3,2
  1949  0522  2D24               	goto	u1651
  1950  0523  2D25               	goto	u1650
  1951  0524                     u1651:
  1952  0524  2D44               	goto	l1567
  1953  0525                     u1650:
  1954  0525                     l1561:
  1955  0525  0828               	movf	strncmp@r,w
  1956  0526  0084               	movwf	4
  1957  0527  0829               	movf	strncmp@r+1,w
  1958  0528  0085               	movwf	5
  1959  0529  0012               	moviw fsr0++
  1960  052A  1903               	btfsc	3,2
  1961  052B  2D2D               	goto	u1661
  1962  052C  2D2E               	goto	u1660
  1963  052D                     u1661:
  1964  052D  2D44               	goto	l1567
  1965  052E                     u1660:
  1966  052E                     l1563:
  1967  052E  0824               	movf	strncmp@n,w
  1968  052F  0425               	iorwf	strncmp@n+1,w
  1969  0530  1903               	btfsc	3,2
  1970  0531  2D33               	goto	u1671
  1971  0532  2D34               	goto	u1670
  1972  0533                     u1671:
  1973  0533  2D44               	goto	l1567
  1974  0534                     u1670:
  1975  0534                     l1565:
  1976  0534  0828               	movf	strncmp@r,w
  1977  0535  0084               	movwf	4
  1978  0536  0829               	movf	strncmp@r+1,w
  1979  0537  0085               	movwf	5
  1980  0538  0800               	movf	0,w	;code access
  1981  0539  00F4               	movwf	??_strncmp
  1982  053A  0826               	movf	strncmp@l,w
  1983  053B  0084               	movwf	4
  1984  053C  0827               	movf	strncmp@l+1,w
  1985  053D  0085               	movwf	5
  1986  053E  0800               	movf	0,w	;code access
  1987  053F  0674               	xorwf	??_strncmp,w
  1988  0540  1903               	skipnz
  1989  0541  2D43               	goto	u1681
  1990  0542  2D44               	goto	u1680
  1991  0543                     u1681:
  1992  0543  2D10               	goto	l1557
  1993  0544                     u1680:
  1994  0544                     l1567:
  1995  0544  0826               	movf	strncmp@l,w
  1996  0545  0084               	movwf	4
  1997  0546  0827               	movf	strncmp@l+1,w
  1998  0547  0085               	movwf	5
  1999  0548  0800               	movf	0,w	;code access
  2000  0549  00F4               	movwf	??_strncmp
  2001  054A  0828               	movf	strncmp@r,w
  2002  054B  0084               	movwf	4
  2003  054C  0829               	movf	strncmp@r+1,w
  2004  054D  0085               	movwf	5
  2005  054E  0800               	movf	0,w	;code access
  2006  054F  0274               	subwf	??_strncmp,w
  2007  0550  00A0               	movwf	?_strncmp
  2008  0551  01A1               	clrf	?_strncmp+1
  2009  0552  1C03               	skipc
  2010  0553  03A1               	decf	?_strncmp+1,f
  2011  0554                     l722:
  2012  0554  0008               	return
  2013  0555                     __end_of_strncmp:
  2014                           
  2015                           	psect	text7
  2016  0058                     __ptext7:	
  2017 ;; *************** function _dtoa *****************
  2018 ;; Defined at:
  2019 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2020 ;; Parameters:    Size  Location     Type
  2021 ;;  fp              1    wreg     PTR struct _IO_FILE
  2022 ;;		 -> NULL(0), 
  2023 ;;  d               8   26[BANK0 ] long long 
  2024 ;; Auto vars:     Size  Location     Type
  2025 ;;  fp              1   41[BANK0 ] PTR struct _IO_FILE
  2026 ;;		 -> NULL(0), 
  2027 ;;  n               8   46[BANK0 ] long long 
  2028 ;;  i               2   54[BANK0 ] int 
  2029 ;;  s               2   44[BANK0 ] int 
  2030 ;;  w               2   42[BANK0 ] int 
  2031 ;;  p               2   39[BANK0 ] int 
  2032 ;; Return value:  Size  Location     Type
  2033 ;;                  2   26[BANK0 ] int 
  2034 ;; Registers used:
  2035 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2036 ;; Tracked objects:
  2037 ;;		On entry : 0/0
  2038 ;;		On exit  : 0/0
  2039 ;;		Unchanged: 0/0
  2040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2041 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2042 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2043 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2044 ;;      Totals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2045 ;;Total ram usage:       30 bytes
  2046 ;; Hardware stack levels used: 1
  2047 ;; Hardware stack levels required when called: 5
  2048 ;; This function calls:
  2049 ;;		___aodiv
  2050 ;;		___aomod
  2051 ;;		_abs
  2052 ;;		_pad
  2053 ;; This function is called by:
  2054 ;;		_vfpfcnvrt
  2055 ;; This function uses a non-reentrant model
  2056 ;;
  2057                           
  2058                           
  2059                           ;psect for function _dtoa
  2060  0058                     _dtoa:
  2061                           
  2062                           ;incstack = 0
  2063                           ; Regs used in _dtoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2064                           ;dtoa@fp stored from wreg
  2065  0058  0020               	movlb	0	; select bank0
  2066  0059  00C9               	movwf	dtoa@fp
  2067  005A                     l1491:
  2068                           
  2069                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  2070  005A  083A               	movf	dtoa@d,w
  2071  005B  00CE               	movwf	dtoa@n
  2072  005C  083B               	movf	dtoa@d+1,w
  2073  005D  00CF               	movwf	dtoa@n+1
  2074  005E  083C               	movf	dtoa@d+2,w
  2075  005F  00D0               	movwf	dtoa@n+2
  2076  0060  083D               	movf	dtoa@d+3,w
  2077  0061  00D1               	movwf	dtoa@n+3
  2078  0062  083E               	movf	dtoa@d+4,w
  2079  0063  00D2               	movwf	dtoa@n+4
  2080  0064  083F               	movf	dtoa@d+5,w
  2081  0065  00D3               	movwf	dtoa@n+5
  2082  0066  0840               	movf	dtoa@d+6,w
  2083  0067  00D4               	movwf	dtoa@n+6
  2084  0068  0841               	movf	dtoa@d+7,w
  2085  0069  00D5               	movwf	dtoa@n+7
  2086  006A                     l1493:
  2087                           
  2088                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  2089  006A  304E               	movlw	low dtoa@n
  2090  006B  0086               	movwf	6
  2091  006C  3000               	movlw	high dtoa@n
  2092  006D  0087               	movwf	7
  2093  006E  3F47               	moviw [7]fsr1
  2094  006F  00C2               	movwf	??_dtoa
  2095  0070  1BC2               	btfsc	??_dtoa,7
  2096  0071  2873               	goto	u1481
  2097  0072  2875               	goto	u1480
  2098  0073                     u1481:
  2099  0073  3001               	movlw	1
  2100  0074  2876               	goto	u1490
  2101  0075                     u1480:
  2102  0075  3000               	movlw	0
  2103  0076                     u1490:
  2104  0076  0020               	movlb	0	; select bank0
  2105  0077  00C3               	movwf	??_dtoa+1
  2106  0078  01C4               	clrf	??_dtoa+2
  2107  0079  0843               	movf	??_dtoa+1,w
  2108  007A  00CC               	movwf	dtoa@s
  2109  007B  0844               	movf	??_dtoa+2,w
  2110  007C  00CD               	movwf	dtoa@s+1
  2111  007D                     l1495:
  2112                           
  2113                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  2114  007D  084C               	movf	dtoa@s,w
  2115  007E  044D               	iorwf	dtoa@s+1,w
  2116  007F  1903               	btfsc	3,2
  2117  0080  2882               	goto	u1501
  2118  0081  2883               	goto	u1500
  2119  0082                     u1501:
  2120  0082  28A1               	goto	l645
  2121  0083                     u1500:
  2122  0083                     l1497:
  2123                           
  2124                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  2125  0083  09CE               	comf	dtoa@n,f
  2126  0084  09CF               	comf	dtoa@n+1,f
  2127  0085  09D0               	comf	dtoa@n+2,f
  2128  0086  09D1               	comf	dtoa@n+3,f
  2129  0087  09D2               	comf	dtoa@n+4,f
  2130  0088  09D3               	comf	dtoa@n+5,f
  2131  0089  09D4               	comf	dtoa@n+6,f
  2132  008A  09D5               	comf	dtoa@n+7,f
  2133  008B  0ACE               	incf	dtoa@n,f
  2134  008C  1D03               	skipz
  2135  008D  28A1               	goto	u151lld
  2136  008E  0ACF               	incf	dtoa@n+1,f
  2137  008F  1D03               	skipz
  2138  0090  28A1               	goto	u151lld
  2139  0091  0AD0               	incf	dtoa@n+2,f
  2140  0092  1D03               	skipz
  2141  0093  28A1               	goto	u151lld
  2142  0094  0AD1               	incf	dtoa@n+3,f
  2143  0095  1D03               	skipz
  2144  0096  28A1               	goto	u151lld
  2145  0097  0AD2               	incf	dtoa@n+4,f
  2146  0098  1D03               	skipz
  2147  0099  28A1               	goto	u151lld
  2148  009A  0AD3               	incf	dtoa@n+5,f
  2149  009B  1D03               	skipz
  2150  009C  28A1               	goto	u151lld
  2151  009D  0AD4               	incf	dtoa@n+6,f
  2152  009E  1D03               	skipz
  2153  009F  28A1               	goto	u151lld
  2154  00A0  0AD5               	incf	dtoa@n+7,f
  2155  00A1                     u151lld:
  2156  00A1                     l645:	
  2157                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 297:     }
  2158                           
  2159                           
  2160                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  2161  00A1  1BF7               	btfsc	_prec+1,7
  2162  00A2  28A4               	goto	u1521
  2163  00A3  28A5               	goto	u1520
  2164  00A4                     u1521:
  2165  00A4  28A9               	goto	l646
  2166  00A5                     u1520:
  2167  00A5                     l1499:
  2168                           
  2169                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  2170  00A5  30FD               	movlw	253
  2171  00A6  05F8               	andwf	_flags,f
  2172  00A7  30FF               	movlw	255
  2173  00A8  05F9               	andwf	_flags+1,f
  2174  00A9                     l646:	
  2175                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 302:     }
  2176                           
  2177                           
  2178                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  2179  00A9  0877               	movf	_prec+1,w
  2180  00AA  3A80               	xorlw	128
  2181  00AB  0020               	movlb	0	; select bank0
  2182  00AC  00C2               	movwf	??_dtoa
  2183  00AD  3080               	movlw	128
  2184  00AE  0242               	subwf	??_dtoa,w
  2185  00AF  1D03               	skipz
  2186  00B0  28B3               	goto	u1535
  2187  00B1  3001               	movlw	1
  2188  00B2  0276               	subwf	_prec,w
  2189  00B3                     u1535:
  2190  00B3  1803               	skipnc
  2191  00B4  28B6               	goto	u1531
  2192  00B5  28B7               	goto	u1530
  2193  00B6                     u1531:
  2194  00B6  28BD               	goto	l1503
  2195  00B7                     u1530:
  2196  00B7                     l1501:
  2197  00B7  3001               	movlw	1
  2198  00B8  0020               	movlb	0	; select bank0
  2199  00B9  00C7               	movwf	dtoa@p
  2200  00BA  3000               	movlw	0
  2201  00BB  00C8               	movwf	dtoa@p+1
  2202  00BC  28C2               	goto	l650
  2203  00BD                     l1503:
  2204  00BD  0877               	movf	_prec+1,w
  2205  00BE  0020               	movlb	0	; select bank0
  2206  00BF  00C8               	movwf	dtoa@p+1
  2207  00C0  0876               	movf	_prec,w
  2208  00C1  00C7               	movwf	dtoa@p
  2209  00C2                     l650:
  2210                           
  2211                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  2212  00C2  0021               	movlb	1	; select bank1
  2213  00C3  082B               	movf	(_width+1)^(0+128),w
  2214  00C4  0020               	movlb	0	; select bank0
  2215  00C5  00CB               	movwf	dtoa@w+1
  2216  00C6  0021               	movlb	1	; select bank1
  2217  00C7  082A               	movf	_width^(0+128),w
  2218  00C8  0020               	movlb	0	; select bank0
  2219  00C9  00CA               	movwf	dtoa@w
  2220  00CA                     l1505:
  2221                           
  2222                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  2223  00CA  084C               	movf	dtoa@s,w
  2224  00CB  044D               	iorwf	dtoa@s+1,w
  2225  00CC  1D03               	btfss	3,2
  2226  00CD  28CF               	goto	u1541
  2227  00CE  28D0               	goto	u1540
  2228  00CF                     u1541:
  2229  00CF  28D4               	goto	l1509
  2230  00D0                     u1540:
  2231  00D0                     l1507:
  2232  00D0  1D78               	btfss	_flags,2
  2233  00D1  28D3               	goto	u1551
  2234  00D2  28D4               	goto	u1550
  2235  00D3                     u1551:
  2236  00D3  28D8               	goto	l651
  2237  00D4                     u1550:
  2238  00D4                     l1509:
  2239                           
  2240                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  2241  00D4  30FF               	movlw	255
  2242  00D5  07CA               	addwf	dtoa@w,f
  2243  00D6  30FF               	movlw	255
  2244  00D7  3DCB               	addwfc	dtoa@w+1,f
  2245  00D8                     l651:	
  2246                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 307:     }
  2247                           
  2248                           
  2249                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  2250  00D8  301F               	movlw	31
  2251  00D9  00D6               	movwf	dtoa@i
  2252  00DA  3000               	movlw	0
  2253  00DB  00D7               	movwf	dtoa@i+1
  2254  00DC                     l1511:
  2255                           
  2256                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  2257  00DC  0021               	movlb	1	; select bank1
  2258  00DD  01CC               	clrf	(_dbuf^(0+128)+31)
  2259                           
  2260                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2261  00DE  2947               	goto	l654
  2262  00DF                     l1513:
  2263                           
  2264                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  2265  00DF  30FF               	movlw	255
  2266  00E0  0020               	movlb	0	; select bank0
  2267  00E1  07D6               	addwf	dtoa@i,f
  2268  00E2  30FF               	movlw	255
  2269  00E3  3DD7               	addwfc	dtoa@i+1,f
  2270  00E4                     l1515:
  2271                           
  2272                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  2273  00E4  300A               	movlw	10
  2274  00E5  00A0               	movwf	___aomod@divisor
  2275  00E6  01A1               	clrf	___aomod@divisor+1
  2276  00E7  01A2               	clrf	___aomod@divisor+2
  2277  00E8  01A3               	clrf	___aomod@divisor+3
  2278  00E9  01A4               	clrf	___aomod@divisor+4
  2279  00EA  01A5               	clrf	___aomod@divisor+5
  2280  00EB  01A6               	clrf	___aomod@divisor+6
  2281  00EC  01A7               	clrf	___aomod@divisor+7
  2282  00ED  084E               	movf	dtoa@n,w
  2283  00EE  00A8               	movwf	___aomod@dividend
  2284  00EF  084F               	movf	dtoa@n+1,w
  2285  00F0  00A9               	movwf	___aomod@dividend+1
  2286  00F1  0850               	movf	dtoa@n+2,w
  2287  00F2  00AA               	movwf	___aomod@dividend+2
  2288  00F3  0851               	movf	dtoa@n+3,w
  2289  00F4  00AB               	movwf	___aomod@dividend+3
  2290  00F5  0852               	movf	dtoa@n+4,w
  2291  00F6  00AC               	movwf	___aomod@dividend+4
  2292  00F7  0853               	movf	dtoa@n+5,w
  2293  00F8  00AD               	movwf	___aomod@dividend+5
  2294  00F9  0854               	movf	dtoa@n+6,w
  2295  00FA  00AE               	movwf	___aomod@dividend+6
  2296  00FB  0855               	movf	dtoa@n+7,w
  2297  00FC  00AF               	movwf	___aomod@dividend+7
  2298  00FD  3184  240C  3180   	fcall	___aomod
  2299  0100  0020               	movlb	0	; select bank0
  2300  0101  0821               	movf	?___aomod+1,w
  2301  0102  00B3               	movwf	abs@a+1
  2302  0103  0820               	movf	?___aomod,w
  2303  0104  00B2               	movwf	abs@a
  2304  0105  3186  2681  3180   	fcall	_abs
  2305  0108  0020               	movlb	0	; select bank0
  2306  0109  0832               	movf	?_abs,w
  2307  010A  3E30               	addlw	48
  2308  010B  00C2               	movwf	??_dtoa
  2309  010C  0856               	movf	dtoa@i,w
  2310  010D  3EAD               	addlw	(low (_dbuf| 0))& (0+255)
  2311  010E  0086               	movwf	6
  2312  010F  0187               	clrf	7
  2313  0110  0842               	movf	??_dtoa,w
  2314  0111  0081               	movwf	1
  2315  0112                     l1517:
  2316                           
  2317                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  2318  0112  30FF               	movlw	255
  2319  0113  07C7               	addwf	dtoa@p,f
  2320  0114  30FF               	movlw	255
  2321  0115  3DC8               	addwfc	dtoa@p+1,f
  2322  0116                     l1519:
  2323                           
  2324                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  2325  0116  30FF               	movlw	255
  2326  0117  07CA               	addwf	dtoa@w,f
  2327  0118  30FF               	movlw	255
  2328  0119  3DCB               	addwfc	dtoa@w+1,f
  2329  011A                     l1521:
  2330                           
  2331                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  2332  011A  300A               	movlw	10
  2333  011B  00A0               	movwf	___aodiv@divisor
  2334  011C  01A1               	clrf	___aodiv@divisor+1
  2335  011D  01A2               	clrf	___aodiv@divisor+2
  2336  011E  01A3               	clrf	___aodiv@divisor+3
  2337  011F  01A4               	clrf	___aodiv@divisor+4
  2338  0120  01A5               	clrf	___aodiv@divisor+5
  2339  0121  01A6               	clrf	___aodiv@divisor+6
  2340  0122  01A7               	clrf	___aodiv@divisor+7
  2341  0123  084E               	movf	dtoa@n,w
  2342  0124  00A8               	movwf	___aodiv@dividend
  2343  0125  084F               	movf	dtoa@n+1,w
  2344  0126  00A9               	movwf	___aodiv@dividend+1
  2345  0127  0850               	movf	dtoa@n+2,w
  2346  0128  00AA               	movwf	___aodiv@dividend+2
  2347  0129  0851               	movf	dtoa@n+3,w
  2348  012A  00AB               	movwf	___aodiv@dividend+3
  2349  012B  0852               	movf	dtoa@n+4,w
  2350  012C  00AC               	movwf	___aodiv@dividend+4
  2351  012D  0853               	movf	dtoa@n+5,w
  2352  012E  00AD               	movwf	___aodiv@dividend+5
  2353  012F  0854               	movf	dtoa@n+6,w
  2354  0130  00AE               	movwf	___aodiv@dividend+6
  2355  0131  0855               	movf	dtoa@n+7,w
  2356  0132  00AF               	movwf	___aodiv@dividend+7
  2357  0133  3183  2308  3180   	fcall	___aodiv
  2358  0136  0020               	movlb	0	; select bank0
  2359  0137  0820               	movf	?___aodiv,w
  2360  0138  00CE               	movwf	dtoa@n
  2361  0139  0821               	movf	?___aodiv+1,w
  2362  013A  00CF               	movwf	dtoa@n+1
  2363  013B  0822               	movf	?___aodiv+2,w
  2364  013C  00D0               	movwf	dtoa@n+2
  2365  013D  0823               	movf	?___aodiv+3,w
  2366  013E  00D1               	movwf	dtoa@n+3
  2367  013F  0824               	movf	?___aodiv+4,w
  2368  0140  00D2               	movwf	dtoa@n+4
  2369  0141  0825               	movf	?___aodiv+5,w
  2370  0142  00D3               	movwf	dtoa@n+5
  2371  0143  0826               	movf	?___aodiv+6,w
  2372  0144  00D4               	movwf	dtoa@n+6
  2373  0145  0827               	movf	?___aodiv+7,w
  2374  0146  00D5               	movwf	dtoa@n+7
  2375  0147                     l654:	
  2376                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 318:     }
  2377                           
  2378                           
  2379                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2380  0147  0020               	movlb	0	; select bank0
  2381  0148  0857               	movf	dtoa@i+1,w
  2382  0149  3A80               	xorlw	128
  2383  014A  00C2               	movwf	??_dtoa
  2384  014B  3080               	movlw	128
  2385  014C  0242               	subwf	??_dtoa,w
  2386  014D  1D03               	skipz
  2387  014E  2951               	goto	u1565
  2388  014F  3001               	movlw	1
  2389  0150  0256               	subwf	dtoa@i,w
  2390  0151                     u1565:
  2391  0151  1C03               	skipc
  2392  0152  2954               	goto	u1561
  2393  0153  2955               	goto	u1560
  2394  0154                     u1561:
  2395  0154  2981               	goto	l1531
  2396  0155                     u1560:
  2397  0155                     l1523:
  2398  0155  0020               	movlb	0	; select bank0
  2399  0156  084E               	movf	dtoa@n,w
  2400  0157  044F               	iorwf	dtoa@n+1,w
  2401  0158  0450               	iorwf	dtoa@n+2,w
  2402  0159  0451               	iorwf	dtoa@n+3,w
  2403  015A  0452               	iorwf	dtoa@n+4,w
  2404  015B  0453               	iorwf	dtoa@n+5,w
  2405  015C  0454               	iorwf	dtoa@n+6,w
  2406  015D  0455               	iorwf	dtoa@n+7,w
  2407  015E  1D03               	skipz
  2408  015F  2961               	goto	u1571
  2409  0160  2962               	goto	u1570
  2410  0161                     u1571:
  2411  0161  28DF               	goto	l1513
  2412  0162                     u1570:
  2413  0162                     l1525:
  2414  0162  0848               	movf	dtoa@p+1,w
  2415  0163  3A80               	xorlw	128
  2416  0164  00C2               	movwf	??_dtoa
  2417  0165  3080               	movlw	128
  2418  0166  0242               	subwf	??_dtoa,w
  2419  0167  1D03               	skipz
  2420  0168  296B               	goto	u1585
  2421  0169  3001               	movlw	1
  2422  016A  0247               	subwf	dtoa@p,w
  2423  016B                     u1585:
  2424  016B  1803               	skipnc
  2425  016C  296E               	goto	u1581
  2426  016D  296F               	goto	u1580
  2427  016E                     u1581:
  2428  016E  28DF               	goto	l1513
  2429  016F                     u1580:
  2430  016F                     l1527:
  2431  016F  0020               	movlb	0	; select bank0
  2432  0170  084B               	movf	dtoa@w+1,w
  2433  0171  3A80               	xorlw	128
  2434  0172  00C2               	movwf	??_dtoa
  2435  0173  3080               	movlw	128
  2436  0174  0242               	subwf	??_dtoa,w
  2437  0175  1D03               	skipz
  2438  0176  2979               	goto	u1595
  2439  0177  3001               	movlw	1
  2440  0178  024A               	subwf	dtoa@w,w
  2441  0179                     u1595:
  2442  0179  1C03               	skipc
  2443  017A  297C               	goto	u1591
  2444  017B  297D               	goto	u1590
  2445  017C                     u1591:
  2446  017C  2981               	goto	l1531
  2447  017D                     u1590:
  2448  017D                     l1529:
  2449  017D  18F8               	btfsc	_flags,1
  2450  017E  2980               	goto	u1601
  2451  017F  2981               	goto	u1600
  2452  0180                     u1601:
  2453  0180  28DF               	goto	l1513
  2454  0181                     u1600:
  2455  0181                     l1531:
  2456                           
  2457                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  2458  0181  0020               	movlb	0	; select bank0
  2459  0182  084C               	movf	dtoa@s,w
  2460  0183  044D               	iorwf	dtoa@s+1,w
  2461  0184  1D03               	btfss	3,2
  2462  0185  2987               	goto	u1611
  2463  0186  2988               	goto	u1610
  2464  0187                     u1611:
  2465  0187  298C               	goto	l1535
  2466  0188                     u1610:
  2467  0188                     l1533:
  2468  0188  1D78               	btfss	_flags,2
  2469  0189  298B               	goto	u1621
  2470  018A  298C               	goto	u1620
  2471  018B                     u1621:
  2472  018B  29A7               	goto	l1545
  2473  018C                     u1620:
  2474  018C                     l1535:
  2475                           
  2476                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  2477  018C  30FF               	movlw	255
  2478  018D  07D6               	addwf	dtoa@i,f
  2479  018E  30FF               	movlw	255
  2480  018F  3DD7               	addwfc	dtoa@i+1,f
  2481  0190                     l1537:
  2482                           
  2483                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  2484  0190  084C               	movf	dtoa@s,w
  2485  0191  044D               	iorwf	dtoa@s+1,w
  2486  0192  1D03               	btfss	3,2
  2487  0193  2995               	goto	u1631
  2488  0194  2996               	goto	u1630
  2489  0195                     u1631:
  2490  0195  299B               	goto	l1541
  2491  0196                     u1630:
  2492  0196                     l1539:
  2493  0196  302B               	movlw	43
  2494  0197  00C5               	movwf	_dtoa$872
  2495  0198  3000               	movlw	0
  2496  0199  00C6               	movwf	_dtoa$872+1
  2497  019A  299F               	goto	l1543
  2498  019B                     l1541:
  2499  019B  302D               	movlw	45
  2500  019C  00C5               	movwf	_dtoa$872
  2501  019D  3000               	movlw	0
  2502  019E  00C6               	movwf	_dtoa$872+1
  2503  019F                     l1543:
  2504  019F  0845               	movf	_dtoa$872,w
  2505  01A0  00C2               	movwf	??_dtoa
  2506  01A1  0856               	movf	dtoa@i,w
  2507  01A2  3EAD               	addlw	(low (_dbuf| 0))& (0+255)
  2508  01A3  0086               	movwf	6
  2509  01A4  0187               	clrf	7
  2510  01A5  0842               	movf	??_dtoa,w
  2511  01A6  0081               	movwf	1
  2512  01A7                     l1545:
  2513                           
  2514                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  2515  01A7  0856               	movf	dtoa@i,w
  2516  01A8  3EAD               	addlw	(low (_dbuf| 0))& (0+255)
  2517  01A9  00C2               	movwf	??_dtoa
  2518  01AA  0842               	movf	??_dtoa,w
  2519  01AB  00AF               	movwf	pad@buf
  2520  01AC  084B               	movf	dtoa@w+1,w
  2521  01AD  00B1               	movwf	pad@p+1
  2522  01AE  084A               	movf	dtoa@w,w
  2523  01AF  00B0               	movwf	pad@p
  2524  01B0  0849               	movf	dtoa@fp,w
  2525  01B1  3185  2555  3180   	fcall	_pad
  2526  01B4  0020               	movlb	0	; select bank0
  2527  01B5  0830               	movf	?_pad+1,w
  2528  01B6  00BB               	movwf	?_dtoa+1
  2529  01B7  082F               	movf	?_pad,w
  2530  01B8  00BA               	movwf	?_dtoa
  2531  01B9                     l668:
  2532  01B9  0008               	return
  2533  01BA                     __end_of_dtoa:
  2534                           
  2535                           	psect	text8
  2536  0555                     __ptext8:	
  2537 ;; *************** function _pad *****************
  2538 ;; Defined at:
  2539 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2540 ;; Parameters:    Size  Location     Type
  2541 ;;  fp              1    wreg     PTR struct _IO_FILE
  2542 ;;		 -> NULL(0), 
  2543 ;;  buf             1   15[BANK0 ] PTR unsigned char 
  2544 ;;		 -> dbuf(32), 
  2545 ;;  p               2   16[BANK0 ] int 
  2546 ;; Auto vars:     Size  Location     Type
  2547 ;;  fp              1   23[BANK0 ] PTR struct _IO_FILE
  2548 ;;		 -> NULL(0), 
  2549 ;;  w               2   21[BANK0 ] int 
  2550 ;;  i               2   19[BANK0 ] int 
  2551 ;; Return value:  Size  Location     Type
  2552 ;;                  2   15[BANK0 ] int 
  2553 ;; Registers used:
  2554 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2555 ;; Tracked objects:
  2556 ;;		On entry : 0/0
  2557 ;;		On exit  : 0/0
  2558 ;;		Unchanged: 0/0
  2559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2560 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2561 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2562 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2563 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2564 ;;Total ram usage:        9 bytes
  2565 ;; Hardware stack levels used: 1
  2566 ;; Hardware stack levels required when called: 4
  2567 ;; This function calls:
  2568 ;;		_fputc
  2569 ;;		_fputs
  2570 ;;		_strlen
  2571 ;; This function is called by:
  2572 ;;		_dtoa
  2573 ;; This function uses a non-reentrant model
  2574 ;;
  2575                           
  2576                           
  2577                           ;psect for function _pad
  2578  0555                     _pad:
  2579                           
  2580                           ;incstack = 0
  2581                           ; Regs used in _pad: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2582                           ;pad@fp stored from wreg
  2583  0555  0020               	movlb	0	; select bank0
  2584  0556  00B7               	movwf	pad@fp
  2585  0557                     l1467:
  2586                           
  2587                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  2588  0557  1C78               	btfss	_flags,0
  2589  0558  2D5A               	goto	u1431
  2590  0559  2D5B               	goto	u1430
  2591  055A                     u1431:
  2592  055A  2D63               	goto	l1471
  2593  055B                     u1430:
  2594  055B                     l1469:
  2595                           
  2596                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  2597  055B  0837               	movf	pad@fp,w
  2598  055C  00B2               	movwf	??_pad
  2599  055D  0832               	movf	??_pad,w
  2600  055E  00F5               	movwf	fputs@fp
  2601  055F  082F               	movf	pad@buf,w
  2602  0560  3186  2659  3185   	fcall	_fputs
  2603  0563                     l1471:
  2604                           
  2605                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  2606  0563  0020               	movlb	0	; select bank0
  2607  0564  1BB1               	btfsc	pad@p+1,7
  2608  0565  2D67               	goto	u1441
  2609  0566  2D68               	goto	u1440
  2610  0567                     u1441:
  2611  0567  2D6D               	goto	l1475
  2612  0568                     u1440:
  2613  0568                     l1473:
  2614  0568  0831               	movf	pad@p+1,w
  2615  0569  00B6               	movwf	pad@w+1
  2616  056A  0830               	movf	pad@p,w
  2617  056B  00B5               	movwf	pad@w
  2618  056C  2D6F               	goto	l637
  2619  056D                     l1475:
  2620  056D  01B5               	clrf	pad@w
  2621  056E  01B6               	clrf	pad@w+1
  2622  056F                     l637:
  2623                           
  2624                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  2625  056F  01B3               	clrf	pad@i
  2626  0570  01B4               	clrf	pad@i+1
  2627                           
  2628                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2629  0571  2D83               	goto	l1481
  2630  0572                     l1477:
  2631                           
  2632                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  2633  0572  3020               	movlw	32
  2634  0573  0020               	movlb	0	; select bank0
  2635  0574  00A0               	movwf	fputc@c
  2636  0575  3000               	movlw	0
  2637  0576  00A1               	movwf	fputc@c+1
  2638  0577  0837               	movf	pad@fp,w
  2639  0578  00B2               	movwf	??_pad
  2640  0579  0832               	movf	??_pad,w
  2641  057A  00A2               	movwf	fputc@fp
  2642  057B  3185  25AB  3185   	fcall	_fputc
  2643  057E                     l1479:
  2644                           
  2645                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  2646  057E  3001               	movlw	1
  2647  057F  0020               	movlb	0	; select bank0
  2648  0580  07B3               	addwf	pad@i,f
  2649  0581  3000               	movlw	0
  2650  0582  3DB4               	addwfc	pad@i+1,f
  2651  0583                     l1481:
  2652                           
  2653                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2654  0583  0834               	movf	pad@i+1,w
  2655  0584  3A80               	xorlw	128
  2656  0585  00B2               	movwf	??_pad
  2657  0586  0836               	movf	pad@w+1,w
  2658  0587  3A80               	xorlw	128
  2659  0588  0232               	subwf	??_pad,w
  2660  0589  1D03               	skipz
  2661  058A  2D8D               	goto	u1455
  2662  058B  0835               	movf	pad@w,w
  2663  058C  0233               	subwf	pad@i,w
  2664  058D                     u1455:
  2665  058D  1C03               	skipc
  2666  058E  2D90               	goto	u1451
  2667  058F  2D91               	goto	u1450
  2668  0590                     u1451:
  2669  0590  2D72               	goto	l1477
  2670  0591                     u1450:
  2671  0591                     l640:
  2672                           
  2673                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  2674  0591  1878               	btfsc	_flags,0
  2675  0592  2D94               	goto	u1461
  2676  0593  2D95               	goto	u1460
  2677  0594                     u1461:
  2678  0594  2D9E               	goto	l641
  2679  0595                     u1460:
  2680  0595                     l1483:
  2681                           
  2682                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  2683  0595  0020               	movlb	0	; select bank0
  2684  0596  0837               	movf	pad@fp,w
  2685  0597  00B2               	movwf	??_pad
  2686  0598  0832               	movf	??_pad,w
  2687  0599  00F5               	movwf	fputs@fp
  2688  059A  082F               	movf	pad@buf,w
  2689  059B  3186  2659  3185   	fcall	_fputs
  2690  059E                     l641:	
  2691                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 92:     }
  2692                           
  2693                           
  2694                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  2695  059E  0020               	movlb	0	; select bank0
  2696  059F  082F               	movf	pad@buf,w
  2697  05A0  3186  269D  3185   	fcall	_strlen
  2698  05A3  0020               	movlb	0	; select bank0
  2699  05A4  0835               	movf	pad@w,w
  2700  05A5  0774               	addwf	?_strlen,w
  2701  05A6  00AF               	movwf	?_pad
  2702  05A7  0836               	movf	pad@w+1,w
  2703  05A8  3D75               	addwfc	?_strlen+1,w
  2704  05A9  00B0               	movwf	?_pad+1
  2705  05AA                     l642:
  2706  05AA  0008               	return
  2707  05AB                     __end_of_pad:
  2708                           
  2709                           	psect	text9
  2710  069D                     __ptext9:	
  2711 ;; *************** function _strlen *****************
  2712 ;; Defined at:
  2713 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  2714 ;; Parameters:    Size  Location     Type
  2715 ;;  s               1    wreg     PTR const unsigned char 
  2716 ;;		 -> dbuf(32), 
  2717 ;; Auto vars:     Size  Location     Type
  2718 ;;  s               1    2[BANK0 ] PTR const unsigned char 
  2719 ;;		 -> dbuf(32), 
  2720 ;;  a               1    1[BANK0 ] PTR const unsigned char 
  2721 ;;		 -> dbuf(32), 
  2722 ;; Return value:  Size  Location     Type
  2723 ;;                  2    4[COMMON] unsigned int 
  2724 ;; Registers used:
  2725 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2726 ;; Tracked objects:
  2727 ;;		On entry : 0/0
  2728 ;;		On exit  : 0/0
  2729 ;;		Unchanged: 0/0
  2730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2731 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2732 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2733 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2734 ;;      Totals:         2       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2735 ;;Total ram usage:        5 bytes
  2736 ;; Hardware stack levels used: 1
  2737 ;; Hardware stack levels required when called: 1
  2738 ;; This function calls:
  2739 ;;		Nothing
  2740 ;; This function is called by:
  2741 ;;		_pad
  2742 ;; This function uses a non-reentrant model
  2743 ;;
  2744                           
  2745                           
  2746                           ;psect for function _strlen
  2747  069D                     _strlen:
  2748                           
  2749                           ;incstack = 0
  2750                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  2751                           ;strlen@s stored from wreg
  2752  069D  0020               	movlb	0	; select bank0
  2753  069E  00A2               	movwf	strlen@s
  2754  069F                     l1427:
  2755  069F  0822               	movf	strlen@s,w
  2756  06A0  00A0               	movwf	??_strlen
  2757  06A1  0820               	movf	??_strlen,w
  2758  06A2  00A1               	movwf	strlen@a
  2759  06A3  2EA8               	goto	l1431
  2760  06A4                     l1429:
  2761  06A4  3001               	movlw	1
  2762  06A5  00A0               	movwf	??_strlen
  2763  06A6  0820               	movf	??_strlen,w
  2764  06A7  07A2               	addwf	strlen@s,f
  2765  06A8                     l1431:
  2766  06A8  0822               	movf	strlen@s,w
  2767  06A9  0086               	movwf	6
  2768  06AA  0187               	clrf	7
  2769  06AB  0801               	movf	1,w
  2770  06AC  1D03               	btfss	3,2
  2771  06AD  2EAF               	goto	u1321
  2772  06AE  2EB0               	goto	u1320
  2773  06AF                     u1321:
  2774  06AF  2EA4               	goto	l1429
  2775  06B0                     u1320:
  2776  06B0                     l1433:
  2777  06B0  0821               	movf	strlen@a,w
  2778  06B1  0222               	subwf	strlen@s,w
  2779  06B2  00F4               	movwf	?_strlen
  2780  06B3  01F5               	clrf	?_strlen+1
  2781  06B4  1BF4               	btfsc	?_strlen,7
  2782  06B5  03F5               	decf	?_strlen+1,f
  2783  06B6                     l718:
  2784  06B6  0008               	return
  2785  06B7                     __end_of_strlen:
  2786                           
  2787                           	psect	text10
  2788  0659                     __ptext10:	
  2789 ;; *************** function _fputs *****************
  2790 ;; Defined at:
  2791 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  2792 ;; Parameters:    Size  Location     Type
  2793 ;;  s               1    wreg     PTR const unsigned char 
  2794 ;;		 -> dbuf(32), 
  2795 ;;  fp              1    5[COMMON] PTR struct _IO_FILE
  2796 ;;		 -> NULL(0), 
  2797 ;; Auto vars:     Size  Location     Type
  2798 ;;  s               1   14[BANK0 ] PTR const unsigned char 
  2799 ;;		 -> dbuf(32), 
  2800 ;;  i               2   12[BANK0 ] int 
  2801 ;;  c               1   11[BANK0 ] unsigned char 
  2802 ;; Return value:  Size  Location     Type
  2803 ;;                  2    5[COMMON] int 
  2804 ;; Registers used:
  2805 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2806 ;; Tracked objects:
  2807 ;;		On entry : 0/0
  2808 ;;		On exit  : 0/0
  2809 ;;		Unchanged: 0/0
  2810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2811 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2812 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2813 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2814 ;;      Totals:         1       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2815 ;;Total ram usage:        8 bytes
  2816 ;; Hardware stack levels used: 1
  2817 ;; Hardware stack levels required when called: 3
  2818 ;; This function calls:
  2819 ;;		_fputc
  2820 ;; This function is called by:
  2821 ;;		_pad
  2822 ;; This function uses a non-reentrant model
  2823 ;;
  2824                           
  2825                           
  2826                           ;psect for function _fputs
  2827  0659                     _fputs:
  2828                           
  2829                           ;incstack = 0
  2830                           ; Regs used in _fputs: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2831                           ;fputs@s stored from wreg
  2832  0659  0020               	movlb	0	; select bank0
  2833  065A  00AE               	movwf	fputs@s
  2834  065B                     l1419:
  2835  065B  01AC               	clrf	fputs@i
  2836  065C  01AD               	clrf	fputs@i+1
  2837  065D  2E71               	goto	l1425
  2838  065E                     l1421:
  2839  065E  082B               	movf	fputs@c,w
  2840  065F  00A8               	movwf	??_fputs
  2841  0660  01A9               	clrf	??_fputs+1
  2842  0661  0828               	movf	??_fputs,w
  2843  0662  00A0               	movwf	fputc@c
  2844  0663  0829               	movf	??_fputs+1,w
  2845  0664  00A1               	movwf	fputc@c+1
  2846  0665  0875               	movf	fputs@fp,w
  2847  0666  00AA               	movwf	??_fputs+2
  2848  0667  082A               	movf	??_fputs+2,w
  2849  0668  00A2               	movwf	fputc@fp
  2850  0669  3185  25AB  3186   	fcall	_fputc
  2851  066C                     l1423:
  2852  066C  3001               	movlw	1
  2853  066D  0020               	movlb	0	; select bank0
  2854  066E  07AC               	addwf	fputs@i,f
  2855  066F  3000               	movlw	0
  2856  0670  3DAD               	addwfc	fputs@i+1,f
  2857  0671                     l1425:
  2858  0671  082C               	movf	fputs@i,w
  2859  0672  072E               	addwf	fputs@s,w
  2860  0673  00A8               	movwf	??_fputs
  2861  0674  0828               	movf	??_fputs,w
  2862  0675  0086               	movwf	6
  2863  0676  0187               	clrf	7
  2864  0677  0801               	movf	1,w
  2865  0678  00A9               	movwf	??_fputs+1
  2866  0679  0829               	movf	??_fputs+1,w
  2867  067A  00AB               	movwf	fputs@c
  2868  067B  082B               	movf	fputs@c,w
  2869  067C  1D03               	btfss	3,2
  2870  067D  2E7F               	goto	u1311
  2871  067E  2E80               	goto	u1310
  2872  067F                     u1311:
  2873  067F  2E5E               	goto	l1421
  2874  0680                     u1310:
  2875  0680                     l712:
  2876  0680  0008               	return
  2877  0681                     __end_of_fputs:
  2878                           
  2879                           	psect	text11
  2880  05AB                     __ptext11:	
  2881 ;; *************** function _fputc *****************
  2882 ;; Defined at:
  2883 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  2884 ;; Parameters:    Size  Location     Type
  2885 ;;  c               2    0[BANK0 ] int 
  2886 ;;  fp              1    2[BANK0 ] PTR struct _IO_FILE
  2887 ;;		 -> NULL(0), 
  2888 ;; Auto vars:     Size  Location     Type
  2889 ;;		None
  2890 ;; Return value:  Size  Location     Type
  2891 ;;                  2    0[BANK0 ] int 
  2892 ;; Registers used:
  2893 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2894 ;; Tracked objects:
  2895 ;;		On entry : 0/0
  2896 ;;		On exit  : 0/0
  2897 ;;		Unchanged: 0/0
  2898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2899 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2901 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2902 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2903 ;;Total ram usage:        8 bytes
  2904 ;; Hardware stack levels used: 1
  2905 ;; Hardware stack levels required when called: 2
  2906 ;; This function calls:
  2907 ;;		_putch
  2908 ;; This function is called by:
  2909 ;;		_pad
  2910 ;;		_vfpfcnvrt
  2911 ;;		_fputs
  2912 ;; This function uses a non-reentrant model
  2913 ;;
  2914                           
  2915                           
  2916                           ;psect for function _fputc
  2917  05AB                     _fputc:
  2918  05AB                     l1405:	
  2919                           ;incstack = 0
  2920                           ; Regs used in _fputc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2921                           
  2922  05AB  0020               	movlb	0	; select bank0
  2923  05AC  0822               	movf	fputc@fp,w
  2924  05AD  1903               	btfsc	3,2
  2925  05AE  2DB0               	goto	u1271
  2926  05AF  2DB1               	goto	u1270
  2927  05B0                     u1271:
  2928  05B0  2DB6               	goto	l1409
  2929  05B1                     u1270:
  2930  05B1                     l1407:
  2931  05B1  0822               	movf	fputc@fp,w
  2932  05B2  1D03               	btfss	3,2
  2933  05B3  2DB5               	goto	u1281
  2934  05B4  2DB6               	goto	u1280
  2935  05B5                     u1281:
  2936  05B5  2DBB               	goto	l1411
  2937  05B6                     u1280:
  2938  05B6                     l1409:
  2939  05B6  0820               	movf	fputc@c,w
  2940  05B7  3186  26F3  3185   	fcall	_putch
  2941  05BA  2DEB               	goto	l704
  2942  05BB                     l1411:
  2943  05BB  0822               	movf	fputc@fp,w
  2944  05BC  3E03               	addlw	3
  2945  05BD  0086               	movwf	6
  2946  05BE  0187               	clrf	7
  2947  05BF  0016               	moviw fsr1++
  2948  05C0  0401               	iorwf	1,w
  2949  05C1  1903               	btfsc	3,2
  2950  05C2  2DC4               	goto	u1291
  2951  05C3  2DC5               	goto	u1290
  2952  05C4                     u1291:
  2953  05C4  2DE2               	goto	l1415
  2954  05C5                     u1290:
  2955  05C5                     l1413:
  2956  05C5  0822               	movf	fputc@fp,w
  2957  05C6  3E03               	addlw	3
  2958  05C7  0086               	movwf	6
  2959  05C8  0187               	clrf	7
  2960  05C9  3F40               	moviw [0]fsr1
  2961  05CA  00A3               	movwf	??_fputc
  2962  05CB  3F41               	moviw [1]fsr1
  2963  05CC  00A4               	movwf	??_fputc+1
  2964  05CD  0A22               	incf	fputc@fp,w
  2965  05CE  0086               	movwf	6
  2966  05CF  0187               	clrf	7
  2967  05D0  3F40               	moviw [0]fsr1
  2968  05D1  00A5               	movwf	??_fputc+2
  2969  05D2  3F41               	moviw [1]fsr1
  2970  05D3  00A6               	movwf	??_fputc+3
  2971  05D4  0826               	movf	??_fputc+3,w
  2972  05D5  3A80               	xorlw	128
  2973  05D6  00A7               	movwf	??_fputc+4
  2974  05D7  0824               	movf	??_fputc+1,w
  2975  05D8  3A80               	xorlw	128
  2976  05D9  0227               	subwf	??_fputc+4,w
  2977  05DA  1D03               	skipz
  2978  05DB  2DDE               	goto	u1305
  2979  05DC  0823               	movf	??_fputc,w
  2980  05DD  0225               	subwf	??_fputc+2,w
  2981  05DE                     u1305:
  2982  05DE  1803               	skipnc
  2983  05DF  2DE1               	goto	u1301
  2984  05E0  2DE2               	goto	u1300
  2985  05E1                     u1301:
  2986  05E1  2DEB               	goto	l704
  2987  05E2                     u1300:
  2988  05E2                     l1415:
  2989  05E2  0020               	movlb	0	; select bank0
  2990  05E3  0A22               	incf	fputc@fp,w
  2991  05E4  0086               	movwf	6
  2992  05E5  0187               	clrf	7
  2993  05E6  3001               	movlw	1
  2994  05E7  0781               	addwf	1,f
  2995  05E8  3141               	addfsr 1,1
  2996  05E9  1803               	skipnc
  2997  05EA  0A81               	incf	1,f
  2998  05EB                     l704:
  2999  05EB  0008               	return
  3000  05EC                     __end_of_fputc:
  3001                           
  3002                           	psect	text12
  3003  06F3                     __ptext12:	
  3004 ;; *************** function _putch *****************
  3005 ;; Defined at:
  3006 ;;		line 110 in file "smt_main.c"
  3007 ;; Parameters:    Size  Location     Type
  3008 ;;  c               1    wreg     unsigned char 
  3009 ;; Auto vars:     Size  Location     Type
  3010 ;;  c               1    4[COMMON] unsigned char 
  3011 ;; Return value:  Size  Location     Type
  3012 ;;                  1    wreg      void 
  3013 ;; Registers used:
  3014 ;;		wreg
  3015 ;; Tracked objects:
  3016 ;;		On entry : 0/0
  3017 ;;		On exit  : 0/0
  3018 ;;		Unchanged: 0/0
  3019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3021 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3023 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3024 ;;Total ram usage:        1 bytes
  3025 ;; Hardware stack levels used: 1
  3026 ;; Hardware stack levels required when called: 1
  3027 ;; This function calls:
  3028 ;;		Nothing
  3029 ;; This function is called by:
  3030 ;;		_fputc
  3031 ;; This function uses a non-reentrant model
  3032 ;;
  3033                           
  3034                           
  3035                           ;psect for function _putch
  3036  06F3                     _putch:
  3037                           
  3038                           ;incstack = 0
  3039                           ; Regs used in _putch: [wreg]
  3040                           ;putch@c stored from wreg
  3041  06F3  00F4               	movwf	putch@c
  3042  06F4                     l1067:
  3043                           
  3044                           ;smt_main.c: 110: void putch(char c);smt_main.c: 111: {;smt_main.c: 112:        TX1REG =
      +                           c;
  3045  06F4  0874               	movf	putch@c,w
  3046  06F5  0023               	movlb	3	; select bank3
  3047  06F6  009A               	movwf	26	;volatile
  3048  06F7                     l74:	
  3049                           ;smt_main.c: 113:        while(TX1STAbits.TRMT != 1);
  3050                           
  3051  06F7  1C9E               	btfss	30,1	;volatile
  3052  06F8  2EFA               	goto	u641
  3053  06F9  2EFB               	goto	u640
  3054  06FA                     u641:
  3055  06FA  2EF7               	goto	l74
  3056  06FB                     u640:
  3057  06FB                     l77:
  3058  06FB  0008               	return
  3059  06FC                     __end_of_putch:
  3060                           
  3061                           	psect	text13
  3062  0681                     __ptext13:	
  3063 ;; *************** function _abs *****************
  3064 ;; Defined at:
  3065 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
  3066 ;; Parameters:    Size  Location     Type
  3067 ;;  a               2   18[BANK0 ] int 
  3068 ;; Auto vars:     Size  Location     Type
  3069 ;;		None
  3070 ;; Return value:  Size  Location     Type
  3071 ;;                  2   18[BANK0 ] int 
  3072 ;; Registers used:
  3073 ;;		wreg, status,2, status,0
  3074 ;; Tracked objects:
  3075 ;;		On entry : 0/0
  3076 ;;		On exit  : 0/0
  3077 ;;		Unchanged: 0/0
  3078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3079 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3081 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3082 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3083 ;;Total ram usage:        4 bytes
  3084 ;; Hardware stack levels used: 1
  3085 ;; Hardware stack levels required when called: 1
  3086 ;; This function calls:
  3087 ;;		Nothing
  3088 ;; This function is called by:
  3089 ;;		_dtoa
  3090 ;; This function uses a non-reentrant model
  3091 ;;
  3092                           
  3093                           
  3094                           ;psect for function _abs
  3095  0681                     _abs:
  3096  0681                     l1487:	
  3097                           ;incstack = 0
  3098                           ; Regs used in _abs: [wreg+status,2+status,0]
  3099                           
  3100  0681  0020               	movlb	0	; select bank0
  3101  0682  0833               	movf	abs@a+1,w
  3102  0683  3A80               	xorlw	128
  3103  0684  00B4               	movwf	??_abs
  3104  0685  3080               	movlw	128
  3105  0686  0234               	subwf	??_abs,w
  3106  0687  1D03               	skipz
  3107  0688  2E8B               	goto	u1475
  3108  0689  3001               	movlw	1
  3109  068A  0232               	subwf	abs@a,w
  3110  068B                     u1475:
  3111  068B  1803               	skipnc
  3112  068C  2E8E               	goto	u1471
  3113  068D  2E8F               	goto	u1470
  3114  068E                     u1471:
  3115  068E  2E9C               	goto	l689
  3116  068F                     u1470:
  3117  068F                     l1489:
  3118  068F  0020               	movlb	0	; select bank0
  3119  0690  0932               	comf	abs@a,w
  3120  0691  00B4               	movwf	??_abs
  3121  0692  0933               	comf	abs@a+1,w
  3122  0693  00B5               	movwf	??_abs+1
  3123  0694  0AB4               	incf	??_abs,f
  3124  0695  1903               	skipnz
  3125  0696  0AB5               	incf	??_abs+1,f
  3126  0697  0834               	movf	??_abs,w
  3127  0698  00B2               	movwf	?_abs
  3128  0699  0835               	movf	??_abs+1,w
  3129  069A  00B3               	movwf	?_abs+1
  3130  069B  2E9C               	goto	l692
  3131  069C                     l689:
  3132  069C                     l692:
  3133  069C  0008               	return
  3134  069D                     __end_of_abs:
  3135                           
  3136                           	psect	text14
  3137  040C                     __ptext14:	
  3138 ;; *************** function ___aomod *****************
  3139 ;; Defined at:
  3140 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
  3141 ;; Parameters:    Size  Location     Type
  3142 ;;  divisor         8    0[BANK0 ] long long 
  3143 ;;  dividend        8    8[BANK0 ] long long 
  3144 ;; Auto vars:     Size  Location     Type
  3145 ;;  sign            1   17[BANK0 ] unsigned char 
  3146 ;;  counter         1   16[BANK0 ] unsigned char 
  3147 ;; Return value:  Size  Location     Type
  3148 ;;                  8    0[BANK0 ] long long 
  3149 ;; Registers used:
  3150 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3151 ;; Tracked objects:
  3152 ;;		On entry : 0/0
  3153 ;;		On exit  : 0/0
  3154 ;;		Unchanged: 0/0
  3155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3156 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3157 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3158 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3159 ;;      Totals:         1      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3160 ;;Total ram usage:       19 bytes
  3161 ;; Hardware stack levels used: 1
  3162 ;; Hardware stack levels required when called: 1
  3163 ;; This function calls:
  3164 ;;		Nothing
  3165 ;; This function is called by:
  3166 ;;		_dtoa
  3167 ;; This function uses a non-reentrant model
  3168 ;;
  3169                           
  3170                           
  3171                           ;psect for function ___aomod
  3172  040C                     ___aomod:
  3173  040C                     l1437:	
  3174                           ;incstack = 0
  3175                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  3176                           
  3177  040C  0020               	movlb	0	; select bank0
  3178  040D  01B1               	clrf	___aomod@sign
  3179  040E                     l1439:
  3180  040E  3028               	movlw	low ___aomod@dividend
  3181  040F  0086               	movwf	6
  3182  0410  3000               	movlw	high ___aomod@dividend
  3183  0411  0087               	movwf	7
  3184  0412  3F47               	moviw [7]fsr1
  3185  0413  00F4               	movwf	??___aomod
  3186  0414  1FF4               	btfss	??___aomod,7
  3187  0415  2C17               	goto	u1331
  3188  0416  2C18               	goto	u1330
  3189  0417                     u1331:
  3190  0417  2C3A               	goto	l1443
  3191  0418                     u1330:
  3192  0418                     l1441:
  3193  0418  0020               	movlb	0	; select bank0
  3194  0419  09A8               	comf	___aomod@dividend,f
  3195  041A  09A9               	comf	___aomod@dividend+1,f
  3196  041B  09AA               	comf	___aomod@dividend+2,f
  3197  041C  09AB               	comf	___aomod@dividend+3,f
  3198  041D  09AC               	comf	___aomod@dividend+4,f
  3199  041E  09AD               	comf	___aomod@dividend+5,f
  3200  041F  09AE               	comf	___aomod@dividend+6,f
  3201  0420  09AF               	comf	___aomod@dividend+7,f
  3202  0421  0AA8               	incf	___aomod@dividend,f
  3203  0422  1D03               	skipz
  3204  0423  2C37               	goto	u134lld
  3205  0424  0AA9               	incf	___aomod@dividend+1,f
  3206  0425  1D03               	skipz
  3207  0426  2C37               	goto	u134lld
  3208  0427  0AAA               	incf	___aomod@dividend+2,f
  3209  0428  1D03               	skipz
  3210  0429  2C37               	goto	u134lld
  3211  042A  0AAB               	incf	___aomod@dividend+3,f
  3212  042B  1D03               	skipz
  3213  042C  2C37               	goto	u134lld
  3214  042D  0AAC               	incf	___aomod@dividend+4,f
  3215  042E  1D03               	skipz
  3216  042F  2C37               	goto	u134lld
  3217  0430  0AAD               	incf	___aomod@dividend+5,f
  3218  0431  1D03               	skipz
  3219  0432  2C37               	goto	u134lld
  3220  0433  0AAE               	incf	___aomod@dividend+6,f
  3221  0434  1D03               	skipz
  3222  0435  2C37               	goto	u134lld
  3223  0436  0AAF               	incf	___aomod@dividend+7,f
  3224  0437                     u134lld:
  3225  0437  0020               	movlb	0	; select bank0
  3226  0438  01B1               	clrf	___aomod@sign
  3227  0439  0AB1               	incf	___aomod@sign,f
  3228  043A                     l1443:
  3229  043A  3020               	movlw	low ___aomod@divisor
  3230  043B  0086               	movwf	6
  3231  043C  3000               	movlw	high ___aomod@divisor
  3232  043D  0087               	movwf	7
  3233  043E  3F47               	moviw [7]fsr1
  3234  043F  00F4               	movwf	??___aomod
  3235  0440  1FF4               	btfss	??___aomod,7
  3236  0441  2C43               	goto	u1351
  3237  0442  2C44               	goto	u1350
  3238  0443                     u1351:
  3239  0443  2C63               	goto	l1447
  3240  0444                     u1350:
  3241  0444                     l1445:
  3242  0444  0020               	movlb	0	; select bank0
  3243  0445  09A0               	comf	___aomod@divisor,f
  3244  0446  09A1               	comf	___aomod@divisor+1,f
  3245  0447  09A2               	comf	___aomod@divisor+2,f
  3246  0448  09A3               	comf	___aomod@divisor+3,f
  3247  0449  09A4               	comf	___aomod@divisor+4,f
  3248  044A  09A5               	comf	___aomod@divisor+5,f
  3249  044B  09A6               	comf	___aomod@divisor+6,f
  3250  044C  09A7               	comf	___aomod@divisor+7,f
  3251  044D  0AA0               	incf	___aomod@divisor,f
  3252  044E  1D03               	skipz
  3253  044F  2C63               	goto	u136lld
  3254  0450  0AA1               	incf	___aomod@divisor+1,f
  3255  0451  1D03               	skipz
  3256  0452  2C63               	goto	u136lld
  3257  0453  0AA2               	incf	___aomod@divisor+2,f
  3258  0454  1D03               	skipz
  3259  0455  2C63               	goto	u136lld
  3260  0456  0AA3               	incf	___aomod@divisor+3,f
  3261  0457  1D03               	skipz
  3262  0458  2C63               	goto	u136lld
  3263  0459  0AA4               	incf	___aomod@divisor+4,f
  3264  045A  1D03               	skipz
  3265  045B  2C63               	goto	u136lld
  3266  045C  0AA5               	incf	___aomod@divisor+5,f
  3267  045D  1D03               	skipz
  3268  045E  2C63               	goto	u136lld
  3269  045F  0AA6               	incf	___aomod@divisor+6,f
  3270  0460  1D03               	skipz
  3271  0461  2C63               	goto	u136lld
  3272  0462  0AA7               	incf	___aomod@divisor+7,f
  3273  0463                     u136lld:
  3274  0463                     l1447:
  3275  0463  0020               	movlb	0	; select bank0
  3276  0464  0820               	movf	___aomod@divisor,w
  3277  0465  0421               	iorwf	___aomod@divisor+1,w
  3278  0466  0422               	iorwf	___aomod@divisor+2,w
  3279  0467  0423               	iorwf	___aomod@divisor+3,w
  3280  0468  0424               	iorwf	___aomod@divisor+4,w
  3281  0469  0425               	iorwf	___aomod@divisor+5,w
  3282  046A  0426               	iorwf	___aomod@divisor+6,w
  3283  046B  0427               	iorwf	___aomod@divisor+7,w
  3284  046C  1903               	skipnz
  3285  046D  2C6F               	goto	u1371
  3286  046E  2C70               	goto	u1370
  3287  046F                     u1371:
  3288  046F  2CC3               	goto	l1463
  3289  0470                     u1370:
  3290  0470                     l1449:
  3291  0470  01B0               	clrf	___aomod@counter
  3292  0471  0AB0               	incf	___aomod@counter,f
  3293  0472  2C7F               	goto	l1455
  3294  0473                     l1451:
  3295  0473  35A0               	lslf	___aomod@divisor,f
  3296  0474  0DA1               	rlf	___aomod@divisor+1,f
  3297  0475  0DA2               	rlf	___aomod@divisor+2,f
  3298  0476  0DA3               	rlf	___aomod@divisor+3,f
  3299  0477  0DA4               	rlf	___aomod@divisor+4,f
  3300  0478  0DA5               	rlf	___aomod@divisor+5,f
  3301  0479  0DA6               	rlf	___aomod@divisor+6,f
  3302  047A  0DA7               	rlf	___aomod@divisor+7,f
  3303  047B                     l1453:
  3304  047B  3001               	movlw	1
  3305  047C  00F4               	movwf	??___aomod
  3306  047D  0874               	movf	??___aomod,w
  3307  047E  07B0               	addwf	___aomod@counter,f
  3308  047F                     l1455:
  3309  047F  1FA7               	btfss	___aomod@divisor+7,7
  3310  0480  2C82               	goto	u1381
  3311  0481  2C83               	goto	u1380
  3312  0482                     u1381:
  3313  0482  2C73               	goto	l1451
  3314  0483                     u1380:
  3315  0483                     l1457:
  3316  0483  0827               	movf	___aomod@divisor+7,w
  3317  0484  022F               	subwf	___aomod@dividend+7,w
  3318  0485  1D03               	skipz
  3319  0486  2CA1               	goto	u1395
  3320  0487  0826               	movf	___aomod@divisor+6,w
  3321  0488  022E               	subwf	___aomod@dividend+6,w
  3322  0489  1D03               	skipz
  3323  048A  2CA1               	goto	u1395
  3324  048B  0825               	movf	___aomod@divisor+5,w
  3325  048C  022D               	subwf	___aomod@dividend+5,w
  3326  048D  1D03               	skipz
  3327  048E  2CA1               	goto	u1395
  3328  048F  0824               	movf	___aomod@divisor+4,w
  3329  0490  022C               	subwf	___aomod@dividend+4,w
  3330  0491  1D03               	skipz
  3331  0492  2CA1               	goto	u1395
  3332  0493  0823               	movf	___aomod@divisor+3,w
  3333  0494  022B               	subwf	___aomod@dividend+3,w
  3334  0495  1D03               	skipz
  3335  0496  2CA1               	goto	u1395
  3336  0497  0822               	movf	___aomod@divisor+2,w
  3337  0498  022A               	subwf	___aomod@dividend+2,w
  3338  0499  1D03               	skipz
  3339  049A  2CA1               	goto	u1395
  3340  049B  0821               	movf	___aomod@divisor+1,w
  3341  049C  0229               	subwf	___aomod@dividend+1,w
  3342  049D  1D03               	skipz
  3343  049E  2CA1               	goto	u1395
  3344  049F  0820               	movf	___aomod@divisor,w
  3345  04A0  0228               	subwf	___aomod@dividend,w
  3346  04A1                     u1395:
  3347  04A1  1C03               	skipc
  3348  04A2  2CA4               	goto	u1391
  3349  04A3  2CA5               	goto	u1390
  3350  04A4                     u1391:
  3351  04A4  2CB5               	goto	l1461
  3352  04A5                     u1390:
  3353  04A5                     l1459:
  3354  04A5  0820               	movf	___aomod@divisor,w
  3355  04A6  02A8               	subwf	___aomod@dividend,f
  3356  04A7  0821               	movf	___aomod@divisor+1,w
  3357  04A8  3BA9               	subwfb	___aomod@dividend+1,f
  3358  04A9  0822               	movf	___aomod@divisor+2,w
  3359  04AA  3BAA               	subwfb	___aomod@dividend+2,f
  3360  04AB  0823               	movf	___aomod@divisor+3,w
  3361  04AC  3BAB               	subwfb	___aomod@dividend+3,f
  3362  04AD  0824               	movf	___aomod@divisor+4,w
  3363  04AE  3BAC               	subwfb	___aomod@dividend+4,f
  3364  04AF  0825               	movf	___aomod@divisor+5,w
  3365  04B0  3BAD               	subwfb	___aomod@dividend+5,f
  3366  04B1  0826               	movf	___aomod@divisor+6,w
  3367  04B2  3BAE               	subwfb	___aomod@dividend+6,f
  3368  04B3  0827               	movf	___aomod@divisor+7,w
  3369  04B4  3BAF               	subwfb	___aomod@dividend+7,f
  3370  04B5                     l1461:
  3371  04B5  36A7               	lsrf	___aomod@divisor+7,f
  3372  04B6  0CA6               	rrf	___aomod@divisor+6,f
  3373  04B7  0CA5               	rrf	___aomod@divisor+5,f
  3374  04B8  0CA4               	rrf	___aomod@divisor+4,f
  3375  04B9  0CA3               	rrf	___aomod@divisor+3,f
  3376  04BA  0CA2               	rrf	___aomod@divisor+2,f
  3377  04BB  0CA1               	rrf	___aomod@divisor+1,f
  3378  04BC  0CA0               	rrf	___aomod@divisor,f
  3379  04BD  3001               	movlw	1
  3380  04BE  02B0               	subwf	___aomod@counter,f
  3381  04BF  1D03               	btfss	3,2
  3382  04C0  2CC2               	goto	u1401
  3383  04C1  2CC3               	goto	u1400
  3384  04C2                     u1401:
  3385  04C2  2C83               	goto	l1457
  3386  04C3                     u1400:
  3387  04C3                     l1463:
  3388  04C3  0831               	movf	___aomod@sign,w
  3389  04C4  1903               	btfsc	3,2
  3390  04C5  2CC7               	goto	u1411
  3391  04C6  2CC8               	goto	u1410
  3392  04C7                     u1411:
  3393  04C7  2CE6               	goto	l258
  3394  04C8                     u1410:
  3395  04C8                     l1465:
  3396  04C8  09A8               	comf	___aomod@dividend,f
  3397  04C9  09A9               	comf	___aomod@dividend+1,f
  3398  04CA  09AA               	comf	___aomod@dividend+2,f
  3399  04CB  09AB               	comf	___aomod@dividend+3,f
  3400  04CC  09AC               	comf	___aomod@dividend+4,f
  3401  04CD  09AD               	comf	___aomod@dividend+5,f
  3402  04CE  09AE               	comf	___aomod@dividend+6,f
  3403  04CF  09AF               	comf	___aomod@dividend+7,f
  3404  04D0  0AA8               	incf	___aomod@dividend,f
  3405  04D1  1D03               	skipz
  3406  04D2  2CE6               	goto	u142lld
  3407  04D3  0AA9               	incf	___aomod@dividend+1,f
  3408  04D4  1D03               	skipz
  3409  04D5  2CE6               	goto	u142lld
  3410  04D6  0AAA               	incf	___aomod@dividend+2,f
  3411  04D7  1D03               	skipz
  3412  04D8  2CE6               	goto	u142lld
  3413  04D9  0AAB               	incf	___aomod@dividend+3,f
  3414  04DA  1D03               	skipz
  3415  04DB  2CE6               	goto	u142lld
  3416  04DC  0AAC               	incf	___aomod@dividend+4,f
  3417  04DD  1D03               	skipz
  3418  04DE  2CE6               	goto	u142lld
  3419  04DF  0AAD               	incf	___aomod@dividend+5,f
  3420  04E0  1D03               	skipz
  3421  04E1  2CE6               	goto	u142lld
  3422  04E2  0AAE               	incf	___aomod@dividend+6,f
  3423  04E3  1D03               	skipz
  3424  04E4  2CE6               	goto	u142lld
  3425  04E5  0AAF               	incf	___aomod@dividend+7,f
  3426  04E6                     u142lld:
  3427  04E6                     l258:
  3428  04E6  0020               	movlb	0	; select bank0
  3429  04E7  0828               	movf	___aomod@dividend,w
  3430  04E8  00A0               	movwf	?___aomod
  3431  04E9  0829               	movf	___aomod@dividend+1,w
  3432  04EA  00A1               	movwf	?___aomod+1
  3433  04EB  082A               	movf	___aomod@dividend+2,w
  3434  04EC  00A2               	movwf	?___aomod+2
  3435  04ED  082B               	movf	___aomod@dividend+3,w
  3436  04EE  00A3               	movwf	?___aomod+3
  3437  04EF  082C               	movf	___aomod@dividend+4,w
  3438  04F0  00A4               	movwf	?___aomod+4
  3439  04F1  082D               	movf	___aomod@dividend+5,w
  3440  04F2  00A5               	movwf	?___aomod+5
  3441  04F3  082E               	movf	___aomod@dividend+6,w
  3442  04F4  00A6               	movwf	?___aomod+6
  3443  04F5  082F               	movf	___aomod@dividend+7,w
  3444  04F6  00A7               	movwf	?___aomod+7
  3445  04F7                     l259:
  3446  04F7  0008               	return
  3447  04F8                     __end_of___aomod:
  3448                           
  3449                           	psect	text15
  3450  0308                     __ptext15:	
  3451 ;; *************** function ___aodiv *****************
  3452 ;; Defined at:
  3453 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
  3454 ;; Parameters:    Size  Location     Type
  3455 ;;  divisor         8    0[BANK0 ] long long 
  3456 ;;  dividend        8    8[BANK0 ] long long 
  3457 ;; Auto vars:     Size  Location     Type
  3458 ;;  quotient        8   18[BANK0 ] long long 
  3459 ;;  sign            1   17[BANK0 ] unsigned char 
  3460 ;;  counter         1   16[BANK0 ] unsigned char 
  3461 ;; Return value:  Size  Location     Type
  3462 ;;                  8    0[BANK0 ] long long 
  3463 ;; Registers used:
  3464 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3465 ;; Tracked objects:
  3466 ;;		On entry : 0/0
  3467 ;;		On exit  : 0/0
  3468 ;;		Unchanged: 0/0
  3469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3470 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3471 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3472 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3473 ;;      Totals:         1      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3474 ;;Total ram usage:       27 bytes
  3475 ;; Hardware stack levels used: 1
  3476 ;; Hardware stack levels required when called: 1
  3477 ;; This function calls:
  3478 ;;		Nothing
  3479 ;; This function is called by:
  3480 ;;		_dtoa
  3481 ;; This function uses a non-reentrant model
  3482 ;;
  3483                           
  3484                           
  3485                           ;psect for function ___aodiv
  3486  0308                     ___aodiv:
  3487  0308                     l1101:	
  3488                           ;incstack = 0
  3489                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  3490                           
  3491  0308  0020               	movlb	0	; select bank0
  3492  0309  01B1               	clrf	___aodiv@sign
  3493  030A                     l1103:
  3494  030A  3020               	movlw	low ___aodiv@divisor
  3495  030B  0086               	movwf	6
  3496  030C  3000               	movlw	high ___aodiv@divisor
  3497  030D  0087               	movwf	7
  3498  030E  3F47               	moviw [7]fsr1
  3499  030F  00F4               	movwf	??___aodiv
  3500  0310  1FF4               	btfss	??___aodiv,7
  3501  0311  2B13               	goto	u711
  3502  0312  2B14               	goto	u710
  3503  0313                     u711:
  3504  0313  2B36               	goto	l1107
  3505  0314                     u710:
  3506  0314                     l1105:
  3507  0314  0020               	movlb	0	; select bank0
  3508  0315  09A0               	comf	___aodiv@divisor,f
  3509  0316  09A1               	comf	___aodiv@divisor+1,f
  3510  0317  09A2               	comf	___aodiv@divisor+2,f
  3511  0318  09A3               	comf	___aodiv@divisor+3,f
  3512  0319  09A4               	comf	___aodiv@divisor+4,f
  3513  031A  09A5               	comf	___aodiv@divisor+5,f
  3514  031B  09A6               	comf	___aodiv@divisor+6,f
  3515  031C  09A7               	comf	___aodiv@divisor+7,f
  3516  031D  0AA0               	incf	___aodiv@divisor,f
  3517  031E  1D03               	skipz
  3518  031F  2B33               	goto	u72lld
  3519  0320  0AA1               	incf	___aodiv@divisor+1,f
  3520  0321  1D03               	skipz
  3521  0322  2B33               	goto	u72lld
  3522  0323  0AA2               	incf	___aodiv@divisor+2,f
  3523  0324  1D03               	skipz
  3524  0325  2B33               	goto	u72lld
  3525  0326  0AA3               	incf	___aodiv@divisor+3,f
  3526  0327  1D03               	skipz
  3527  0328  2B33               	goto	u72lld
  3528  0329  0AA4               	incf	___aodiv@divisor+4,f
  3529  032A  1D03               	skipz
  3530  032B  2B33               	goto	u72lld
  3531  032C  0AA5               	incf	___aodiv@divisor+5,f
  3532  032D  1D03               	skipz
  3533  032E  2B33               	goto	u72lld
  3534  032F  0AA6               	incf	___aodiv@divisor+6,f
  3535  0330  1D03               	skipz
  3536  0331  2B33               	goto	u72lld
  3537  0332  0AA7               	incf	___aodiv@divisor+7,f
  3538  0333                     u72lld:
  3539  0333  0020               	movlb	0	; select bank0
  3540  0334  01B1               	clrf	___aodiv@sign
  3541  0335  0AB1               	incf	___aodiv@sign,f
  3542  0336                     l1107:
  3543  0336  3028               	movlw	low ___aodiv@dividend
  3544  0337  0086               	movwf	6
  3545  0338  3000               	movlw	high ___aodiv@dividend
  3546  0339  0087               	movwf	7
  3547  033A  3F47               	moviw [7]fsr1
  3548  033B  00F4               	movwf	??___aodiv
  3549  033C  1FF4               	btfss	??___aodiv,7
  3550  033D  2B3F               	goto	u731
  3551  033E  2B40               	goto	u730
  3552  033F                     u731:
  3553  033F  2B64               	goto	l1113
  3554  0340                     u730:
  3555  0340                     l1109:
  3556  0340  0020               	movlb	0	; select bank0
  3557  0341  09A8               	comf	___aodiv@dividend,f
  3558  0342  09A9               	comf	___aodiv@dividend+1,f
  3559  0343  09AA               	comf	___aodiv@dividend+2,f
  3560  0344  09AB               	comf	___aodiv@dividend+3,f
  3561  0345  09AC               	comf	___aodiv@dividend+4,f
  3562  0346  09AD               	comf	___aodiv@dividend+5,f
  3563  0347  09AE               	comf	___aodiv@dividend+6,f
  3564  0348  09AF               	comf	___aodiv@dividend+7,f
  3565  0349  0AA8               	incf	___aodiv@dividend,f
  3566  034A  1D03               	skipz
  3567  034B  2B5F               	goto	u74lld
  3568  034C  0AA9               	incf	___aodiv@dividend+1,f
  3569  034D  1D03               	skipz
  3570  034E  2B5F               	goto	u74lld
  3571  034F  0AAA               	incf	___aodiv@dividend+2,f
  3572  0350  1D03               	skipz
  3573  0351  2B5F               	goto	u74lld
  3574  0352  0AAB               	incf	___aodiv@dividend+3,f
  3575  0353  1D03               	skipz
  3576  0354  2B5F               	goto	u74lld
  3577  0355  0AAC               	incf	___aodiv@dividend+4,f
  3578  0356  1D03               	skipz
  3579  0357  2B5F               	goto	u74lld
  3580  0358  0AAD               	incf	___aodiv@dividend+5,f
  3581  0359  1D03               	skipz
  3582  035A  2B5F               	goto	u74lld
  3583  035B  0AAE               	incf	___aodiv@dividend+6,f
  3584  035C  1D03               	skipz
  3585  035D  2B5F               	goto	u74lld
  3586  035E  0AAF               	incf	___aodiv@dividend+7,f
  3587  035F                     u74lld:
  3588  035F                     l1111:
  3589  035F  3001               	movlw	1
  3590  0360  00F4               	movwf	??___aodiv
  3591  0361  0874               	movf	??___aodiv,w
  3592  0362  0020               	movlb	0	; select bank0
  3593  0363  06B1               	xorwf	___aodiv@sign,f
  3594  0364                     l1113:
  3595  0364  3032               	movlw	low ___aodiv@quotient
  3596  0365  0086               	movwf	6
  3597  0366  3000               	movlw	high ___aodiv@quotient
  3598  0367  0087               	movwf	7
  3599  0368  3008               	movlw	8
  3600  0369  00F4               	movwf	??___aodiv
  3601  036A  3000               	movlw	0
  3602  036B                     u750:
  3603  036B  001E               	movwi fsr1++
  3604  036C  0BF4               	decfsz	??___aodiv,f
  3605  036D  2B6B               	goto	u750
  3606  036E                     l1115:
  3607  036E  0020               	movlb	0	; select bank0
  3608  036F  0820               	movf	___aodiv@divisor,w
  3609  0370  0421               	iorwf	___aodiv@divisor+1,w
  3610  0371  0422               	iorwf	___aodiv@divisor+2,w
  3611  0372  0423               	iorwf	___aodiv@divisor+3,w
  3612  0373  0424               	iorwf	___aodiv@divisor+4,w
  3613  0374  0425               	iorwf	___aodiv@divisor+5,w
  3614  0375  0426               	iorwf	___aodiv@divisor+6,w
  3615  0376  0427               	iorwf	___aodiv@divisor+7,w
  3616  0377  1903               	skipnz
  3617  0378  2B7A               	goto	u761
  3618  0379  2B7B               	goto	u760
  3619  037A                     u761:
  3620  037A  2BD7               	goto	l1135
  3621  037B                     u760:
  3622  037B                     l1117:
  3623  037B  01B0               	clrf	___aodiv@counter
  3624  037C  0AB0               	incf	___aodiv@counter,f
  3625  037D  2B8A               	goto	l1123
  3626  037E                     l1119:
  3627  037E  35A0               	lslf	___aodiv@divisor,f
  3628  037F  0DA1               	rlf	___aodiv@divisor+1,f
  3629  0380  0DA2               	rlf	___aodiv@divisor+2,f
  3630  0381  0DA3               	rlf	___aodiv@divisor+3,f
  3631  0382  0DA4               	rlf	___aodiv@divisor+4,f
  3632  0383  0DA5               	rlf	___aodiv@divisor+5,f
  3633  0384  0DA6               	rlf	___aodiv@divisor+6,f
  3634  0385  0DA7               	rlf	___aodiv@divisor+7,f
  3635  0386                     l1121:
  3636  0386  3001               	movlw	1
  3637  0387  00F4               	movwf	??___aodiv
  3638  0388  0874               	movf	??___aodiv,w
  3639  0389  07B0               	addwf	___aodiv@counter,f
  3640  038A                     l1123:
  3641  038A  1FA7               	btfss	___aodiv@divisor+7,7
  3642  038B  2B8D               	goto	u771
  3643  038C  2B8E               	goto	u770
  3644  038D                     u771:
  3645  038D  2B7E               	goto	l1119
  3646  038E                     u770:
  3647  038E                     l1125:
  3648  038E  35B2               	lslf	___aodiv@quotient,f
  3649  038F  0DB3               	rlf	___aodiv@quotient+1,f
  3650  0390  0DB4               	rlf	___aodiv@quotient+2,f
  3651  0391  0DB5               	rlf	___aodiv@quotient+3,f
  3652  0392  0DB6               	rlf	___aodiv@quotient+4,f
  3653  0393  0DB7               	rlf	___aodiv@quotient+5,f
  3654  0394  0DB8               	rlf	___aodiv@quotient+6,f
  3655  0395  0DB9               	rlf	___aodiv@quotient+7,f
  3656  0396                     l1127:
  3657  0396  0827               	movf	___aodiv@divisor+7,w
  3658  0397  022F               	subwf	___aodiv@dividend+7,w
  3659  0398  1D03               	skipz
  3660  0399  2BB4               	goto	u785
  3661  039A  0826               	movf	___aodiv@divisor+6,w
  3662  039B  022E               	subwf	___aodiv@dividend+6,w
  3663  039C  1D03               	skipz
  3664  039D  2BB4               	goto	u785
  3665  039E  0825               	movf	___aodiv@divisor+5,w
  3666  039F  022D               	subwf	___aodiv@dividend+5,w
  3667  03A0  1D03               	skipz
  3668  03A1  2BB4               	goto	u785
  3669  03A2  0824               	movf	___aodiv@divisor+4,w
  3670  03A3  022C               	subwf	___aodiv@dividend+4,w
  3671  03A4  1D03               	skipz
  3672  03A5  2BB4               	goto	u785
  3673  03A6  0823               	movf	___aodiv@divisor+3,w
  3674  03A7  022B               	subwf	___aodiv@dividend+3,w
  3675  03A8  1D03               	skipz
  3676  03A9  2BB4               	goto	u785
  3677  03AA  0822               	movf	___aodiv@divisor+2,w
  3678  03AB  022A               	subwf	___aodiv@dividend+2,w
  3679  03AC  1D03               	skipz
  3680  03AD  2BB4               	goto	u785
  3681  03AE  0821               	movf	___aodiv@divisor+1,w
  3682  03AF  0229               	subwf	___aodiv@dividend+1,w
  3683  03B0  1D03               	skipz
  3684  03B1  2BB4               	goto	u785
  3685  03B2  0820               	movf	___aodiv@divisor,w
  3686  03B3  0228               	subwf	___aodiv@dividend,w
  3687  03B4                     u785:
  3688  03B4  1C03               	skipc
  3689  03B5  2BB7               	goto	u781
  3690  03B6  2BB8               	goto	u780
  3691  03B7                     u781:
  3692  03B7  2BC9               	goto	l1133
  3693  03B8                     u780:
  3694  03B8                     l1129:
  3695  03B8  0820               	movf	___aodiv@divisor,w
  3696  03B9  02A8               	subwf	___aodiv@dividend,f
  3697  03BA  0821               	movf	___aodiv@divisor+1,w
  3698  03BB  3BA9               	subwfb	___aodiv@dividend+1,f
  3699  03BC  0822               	movf	___aodiv@divisor+2,w
  3700  03BD  3BAA               	subwfb	___aodiv@dividend+2,f
  3701  03BE  0823               	movf	___aodiv@divisor+3,w
  3702  03BF  3BAB               	subwfb	___aodiv@dividend+3,f
  3703  03C0  0824               	movf	___aodiv@divisor+4,w
  3704  03C1  3BAC               	subwfb	___aodiv@dividend+4,f
  3705  03C2  0825               	movf	___aodiv@divisor+5,w
  3706  03C3  3BAD               	subwfb	___aodiv@dividend+5,f
  3707  03C4  0826               	movf	___aodiv@divisor+6,w
  3708  03C5  3BAE               	subwfb	___aodiv@dividend+6,f
  3709  03C6  0827               	movf	___aodiv@divisor+7,w
  3710  03C7  3BAF               	subwfb	___aodiv@dividend+7,f
  3711  03C8                     l1131:
  3712  03C8  1432               	bsf	___aodiv@quotient,0
  3713  03C9                     l1133:
  3714  03C9  36A7               	lsrf	___aodiv@divisor+7,f
  3715  03CA  0CA6               	rrf	___aodiv@divisor+6,f
  3716  03CB  0CA5               	rrf	___aodiv@divisor+5,f
  3717  03CC  0CA4               	rrf	___aodiv@divisor+4,f
  3718  03CD  0CA3               	rrf	___aodiv@divisor+3,f
  3719  03CE  0CA2               	rrf	___aodiv@divisor+2,f
  3720  03CF  0CA1               	rrf	___aodiv@divisor+1,f
  3721  03D0  0CA0               	rrf	___aodiv@divisor,f
  3722  03D1  3001               	movlw	1
  3723  03D2  02B0               	subwf	___aodiv@counter,f
  3724  03D3  1D03               	btfss	3,2
  3725  03D4  2BD6               	goto	u791
  3726  03D5  2BD7               	goto	u790
  3727  03D6                     u791:
  3728  03D6  2B8E               	goto	l1125
  3729  03D7                     u790:
  3730  03D7                     l1135:
  3731  03D7  0831               	movf	___aodiv@sign,w
  3732  03D8  1903               	btfsc	3,2
  3733  03D9  2BDB               	goto	u801
  3734  03DA  2BDC               	goto	u800
  3735  03DB                     u801:
  3736  03DB  2BFA               	goto	l245
  3737  03DC                     u800:
  3738  03DC                     l1137:
  3739  03DC  09B2               	comf	___aodiv@quotient,f
  3740  03DD  09B3               	comf	___aodiv@quotient+1,f
  3741  03DE  09B4               	comf	___aodiv@quotient+2,f
  3742  03DF  09B5               	comf	___aodiv@quotient+3,f
  3743  03E0  09B6               	comf	___aodiv@quotient+4,f
  3744  03E1  09B7               	comf	___aodiv@quotient+5,f
  3745  03E2  09B8               	comf	___aodiv@quotient+6,f
  3746  03E3  09B9               	comf	___aodiv@quotient+7,f
  3747  03E4  0AB2               	incf	___aodiv@quotient,f
  3748  03E5  1D03               	skipz
  3749  03E6  2BFA               	goto	u81lld
  3750  03E7  0AB3               	incf	___aodiv@quotient+1,f
  3751  03E8  1D03               	skipz
  3752  03E9  2BFA               	goto	u81lld
  3753  03EA  0AB4               	incf	___aodiv@quotient+2,f
  3754  03EB  1D03               	skipz
  3755  03EC  2BFA               	goto	u81lld
  3756  03ED  0AB5               	incf	___aodiv@quotient+3,f
  3757  03EE  1D03               	skipz
  3758  03EF  2BFA               	goto	u81lld
  3759  03F0  0AB6               	incf	___aodiv@quotient+4,f
  3760  03F1  1D03               	skipz
  3761  03F2  2BFA               	goto	u81lld
  3762  03F3  0AB7               	incf	___aodiv@quotient+5,f
  3763  03F4  1D03               	skipz
  3764  03F5  2BFA               	goto	u81lld
  3765  03F6  0AB8               	incf	___aodiv@quotient+6,f
  3766  03F7  1D03               	skipz
  3767  03F8  2BFA               	goto	u81lld
  3768  03F9  0AB9               	incf	___aodiv@quotient+7,f
  3769  03FA                     u81lld:
  3770  03FA                     l245:
  3771  03FA  0020               	movlb	0	; select bank0
  3772  03FB  0832               	movf	___aodiv@quotient,w
  3773  03FC  00A0               	movwf	?___aodiv
  3774  03FD  0833               	movf	___aodiv@quotient+1,w
  3775  03FE  00A1               	movwf	?___aodiv+1
  3776  03FF  0834               	movf	___aodiv@quotient+2,w
  3777  0400  00A2               	movwf	?___aodiv+2
  3778  0401  0835               	movf	___aodiv@quotient+3,w
  3779  0402  00A3               	movwf	?___aodiv+3
  3780  0403  0836               	movf	___aodiv@quotient+4,w
  3781  0404  00A4               	movwf	?___aodiv+4
  3782  0405  0837               	movf	___aodiv@quotient+5,w
  3783  0406  00A5               	movwf	?___aodiv+5
  3784  0407  0838               	movf	___aodiv@quotient+6,w
  3785  0408  00A6               	movwf	?___aodiv+6
  3786  0409  0839               	movf	___aodiv@quotient+7,w
  3787  040A  00A7               	movwf	?___aodiv+7
  3788  040B                     l246:
  3789  040B  0008               	return
  3790  040C                     __end_of___aodiv:
  3791                           
  3792                           	psect	intentry
  3793  0004                     __pintentry:	
  3794 ;; *************** function _myIsr *****************
  3795 ;; Defined at:
  3796 ;;		line 99 in file "smt_main.c"
  3797 ;; Parameters:    Size  Location     Type
  3798 ;;		None
  3799 ;; Auto vars:     Size  Location     Type
  3800 ;;		None
  3801 ;; Return value:  Size  Location     Type
  3802 ;;                  1    wreg      void 
  3803 ;; Registers used:
  3804 ;;		wreg, status,2, status,0
  3805 ;; Tracked objects:
  3806 ;;		On entry : 0/0
  3807 ;;		On exit  : 0/0
  3808 ;;		Unchanged: 0/0
  3809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3812 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3813 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3814 ;;Total ram usage:        4 bytes
  3815 ;; Hardware stack levels used: 1
  3816 ;; This function calls:
  3817 ;;		Nothing
  3818 ;; This function is called by:
  3819 ;;		Interrupt level 1
  3820 ;; This function uses a non-reentrant model
  3821 ;;
  3822                           
  3823  0004                     _myIsr:
  3824                           
  3825                           ;incstack = 0
  3826  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  3827                           
  3828                           ; Regs used in _myIsr: [wreg+status,2+status,0]
  3829  0005  3180               	pagesel	$
  3830  0006                     i1l1393:
  3831                           
  3832                           ;smt_main.c: 101:     if(PIR4bits.SMT1PRAIF)
  3833  0006  0020               	movlb	0	; select bank0
  3834  0007  1C93               	btfss	19,1	;volatile
  3835  0008  280A               	goto	u126_21
  3836  0009  280B               	goto	u126_20
  3837  000A                     u126_21:
  3838  000A  2844               	goto	i1l71
  3839  000B                     u126_20:
  3840  000B                     i1l1395:
  3841                           
  3842                           ;smt_main.c: 102:     {;smt_main.c: 103:         actValue = SMT1CPR-lastValue;
  3843  000B  003B               	movlb	27	; select bank27
  3844  000C  080F               	movf	15,w	;volatile
  3845  000D  00F0               	movwf	??_myIsr
  3846  000E  0810               	movf	16,w	;volatile
  3847  000F  00F1               	movwf	??_myIsr+1
  3848  0010  0811               	movf	17,w	;volatile
  3849  0011  00F2               	movwf	??_myIsr+2
  3850  0012  01F3               	clrf	??_myIsr+3
  3851  0013  0021               	movlb	1	; select bank1
  3852  0014  0824               	movf	_lastValue^(0+128),w
  3853  0015  02F0               	subwf	??_myIsr,f
  3854  0016  0825               	movf	(_lastValue+1)^(0+128),w
  3855  0017  3BF1               	subwfb	??_myIsr+1,f
  3856  0018  0826               	movf	(_lastValue+2)^(0+128),w
  3857  0019  3BF2               	subwfb	??_myIsr+2,f
  3858  001A  0827               	movf	(_lastValue+3)^(0+128),w
  3859  001B  3BF3               	subwfb	??_myIsr+3,f
  3860  001C  0873               	movf	??_myIsr+3,w
  3861  001D  00A3               	movwf	(_actValue+3)^(0+128)
  3862  001E  0872               	movf	??_myIsr+2,w
  3863  001F  00A2               	movwf	(_actValue+2)^(0+128)
  3864  0020  0871               	movf	??_myIsr+1,w
  3865  0021  00A1               	movwf	(_actValue+1)^(0+128)
  3866  0022  0870               	movf	??_myIsr,w
  3867  0023  00A0               	movwf	_actValue^(0+128)
  3868  0024                     i1l1397:
  3869                           
  3870                           ;smt_main.c: 104:     lastValue = SMT1CPR;
  3871  0024  003B               	movlb	27	; select bank27
  3872  0025  080F               	movf	15,w	;volatile
  3873  0026  0021               	movlb	1	; select bank1
  3874  0027  00A4               	movwf	_lastValue^(0+128)
  3875  0028  003B               	movlb	27	; select bank27
  3876  0029  0810               	movf	16,w	;volatile
  3877  002A  0021               	movlb	1	; select bank1
  3878  002B  00A5               	movwf	(_lastValue^(0+128)+1)
  3879  002C  003B               	movlb	27	; select bank27
  3880  002D  0811               	movf	17,w	;volatile
  3881  002E  0021               	movlb	1	; select bank1
  3882  002F  00A6               	movwf	(_lastValue^(0+128)+2)
  3883  0030  01A7               	clrf	(_lastValue^(0+128)+3)
  3884  0031                     i1l1399:
  3885                           
  3886                           ;smt_main.c: 105:     LATBbits.LATB7 ^= 1;
  3887  0031  0022               	movlb	2	; select bank2
  3888  0032  0D0D               	rlf	13,w	;volatile
  3889  0033  0D0D               	rlf	13,w	;volatile
  3890  0034  3901               	andlw	1
  3891  0035  00F0               	movwf	??_myIsr
  3892  0036  3001               	movlw	1
  3893  0037  06F0               	xorwf	??_myIsr,f
  3894  0038  0CF0               	rrf	??_myIsr,f
  3895  0039  0CF0               	rrf	??_myIsr,f
  3896  003A  080D               	movf	13,w	;volatile
  3897  003B  0670               	xorwf	??_myIsr,w
  3898  003C  397F               	andlw	-129
  3899  003D  0670               	xorwf	??_myIsr,w
  3900  003E  008D               	movwf	13	;volatile
  3901  003F                     i1l1401:
  3902                           
  3903                           ;smt_main.c: 106:     dataAvailable = 1;
  3904  003F  0021               	movlb	1	; select bank1
  3905  0040  01AC               	clrf	_dataAvailable^(0+128)
  3906  0041  0AAC               	incf	_dataAvailable^(0+128),f
  3907  0042                     i1l1403:
  3908                           
  3909                           ;smt_main.c: 107:     PIR4bits.SMT1PRAIF = 0;
  3910  0042  0020               	movlb	0	; select bank0
  3911  0043  1093               	bcf	19,1	;volatile
  3912  0044                     i1l71:
  3913  0044  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3914  0045  0009               	retfie
  3915  0046                     __end_of_myIsr:
  3916  007E                     btemp	set	126	;btemp
  3917  007E                     int$flags	set	126
  3918  007E                     wtemp0	set	126
  3919                           
  3920                           	psect	idloc
  3921                           
  3922                           ;Config register IDLOC0 @ 0x8000
  3923                           ;	unspecified, using default values
  3924  8000                     	org	32768
  3925  8000  3FFF               	dw	16383
  3926                           
  3927                           ;Config register IDLOC1 @ 0x8001
  3928                           ;	unspecified, using default values
  3929  8001                     	org	32769
  3930  8001  3FFF               	dw	16383
  3931                           
  3932                           ;Config register IDLOC2 @ 0x8002
  3933                           ;	unspecified, using default values
  3934  8002                     	org	32770
  3935  8002  3FFF               	dw	16383
  3936                           
  3937                           ;Config register IDLOC3 @ 0x8003
  3938                           ;	unspecified, using default values
  3939  8003                     	org	32771
  3940  8003  3FFF               	dw	16383
  3941                           
  3942                           	psect	config
  3943                           
  3944                           ;Config register CONFIG1 @ 0x8007
  3945                           ;	Oscillator Selection Bits
  3946                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  3947                           ;	Power-up Timer Enable
  3948                           ;	PWRTE = OFF, PWRT disabled
  3949                           ;	MCLR Pin Function Select
  3950                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  3951                           ;	Flash Program Memory Code Protection
  3952                           ;	CP = OFF, Program memory code protection is disabled
  3953                           ;	Brown-out Reset Enable
  3954                           ;	BOREN = ON, Brown-out Reset enabled
  3955                           ;	Clock Out Enable
  3956                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  3957                           ;	Internal/External Switch Over
  3958                           ;	IESO = ON, Internal External Switch Over mode is enabled
  3959                           ;	Fail-Safe Clock Monitor Enable
  3960                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  3961  8007                     	org	32775
  3962  8007  3FFC               	dw	16380
  3963                           
  3964                           ;Config register CONFIG2 @ 0x8008
  3965                           ;	Flash Memory Self-Write Protection
  3966                           ;	WRT = OFF, Write protection off
  3967                           ;	Peripheral Pin Select one-way control
  3968                           ;	PPS1WAY = OFF, The PPSLOCK bit can be set and cleared repeatedly by software
  3969                           ;	Zero Cross Detect Disable Bit
  3970                           ;	ZCD = OFF, ZCD disable.  ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  3971                           ;	PLL Enable Bit
  3972                           ;	PLLEN = ON, 4x PLL is always enabled
  3973                           ;	Stack Overflow/Underflow Reset Enable
  3974                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  3975                           ;	Brown-out Reset Voltage Selection
  3976                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  3977                           ;	Low-Power Brown Out Reset
  3978                           ;	LPBOR = OFF, Low-Power BOR is disabled
  3979                           ;	Low-Voltage Programming Enable
  3980                           ;	LVP = ON, Low-voltage programming enabled
  3981  8008                     	org	32776
  3982  8008  3FFB               	dw	16379
  3983                           
  3984                           ;Config register CONFIG3 @ 0x8009
  3985                           ;	WDT Period Select
  3986                           ;	WDTCPS = WDTCPS1F, Software Control (WDTPS)
  3987                           ;	Watchdog Timer Enable
  3988                           ;	WDTE = OFF, WDT disabled
  3989                           ;	WDT Window Select
  3990                           ;	WDTCWS = WDTCWSSW, Software WDT window size control (WDTWS bits)
  3991                           ;	WDT Input Clock Selector
  3992                           ;	WDTCCS = SWC, Software control, controlled by WDTCS bits
  3993  8009                     	org	32777
  3994  8009  3F9F               	dw	16287

Data Sizes:
    Strings     20
    Constant    0
    Data        0
    BSS         49
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     80      80
    BANK1            80     10      55
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_8(CODE[3]), STR_4(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_8(CODE[3]), STR_4(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_1(CODE[14]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_1(CODE[14]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S801_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK1[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_1(CODE[14]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 14
		 -> STR_1(CODE[14]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK1[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_1(CODE[14]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK1[2]), 


Critical Paths under _main in COMMON

    _pad->_fputs
    _pad->_strlen
    _fputc->_putch
    _abs->___aomod

Critical Paths under _myIsr in COMMON

    None.

Critical Paths under _main in BANK0

    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->___aodiv
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod

Critical Paths under _myIsr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_printf

Critical Paths under _myIsr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myIsr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myIsr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _myIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _myIsr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _myIsr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _myIsr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _myIsr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _myIsr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _myIsr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _myIsr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _myIsr in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    8631
                                              8 BANK1      2     2      0
                             _printf
                           _smt_init
                          _uart_init
 ---------------------------------------------------------------------------------
 (1) _uart_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _smt_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _printf                                              10     4      6    8631
                                              0 BANK1      8     2      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3    8454
                                             72 BANK0      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           40    38      2    8004
                                             56 BANK0     16    14      2
                               _dtoa
                              _fputc
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     865
                                              4 COMMON     1     1      0
                                              0 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                30    22      8    5281
                                             26 BANK0     30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    3078
                                             15 BANK0      9     6      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               5     3      2     166
                                              4 COMMON     2     0      2
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (6) _fputs                                                8     7      1    1358
                                              5 COMMON     1     0      1
                                              8 BANK0      7     7      0
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     966
                                              0 BANK0      8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      22
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             18 BANK0      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             19     3     16     613
                                              4 COMMON     1     1      0
                                              0 BANK0     18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             27    11     16     452
                                              4 COMMON     1     1      0
                                              0 BANK0     26    10     16
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _myIsr                                                4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _printf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
             _strlen
         _fputc
         _strncmp
   _smt_init
   _uart_init

 _myIsr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      A      37       7       68.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      91      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      91      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Feb 28 02:12:00 2023

                     l50 06E7                       l61 0602                       l47 06F2  
                     l74 06F7                       l77 06FB                      l245 03FA  
                    l246 040B                      l258 04E6                      l259 04F7  
                    l704 05EB                      l712 0680                      l640 0591  
                    l608 06CD                      l641 059E                      l642 05AA  
                    l650 00C2                      l722 0554                      l651 00D8  
                    l637 056F                      l645 00A1                      l718 06B6  
                    l654 0147                      l646 00A9                      l675 0307  
                    l692 069C                      l668 01B9                      l685 0658  
                    l689 069C                      u710 0314                      u711 0313  
                    u800 03DC                      u640 06FB                      u801 03DB  
                    u641 06FA                      u730 0340                      u731 033F  
                    u750 036B                      u760 037B                      u761 037A  
                    u770 038E                      u771 038D                      u780 03B8  
                    u781 03B7                      u790 03D7                      u791 03D6  
                    u785 03B4                      _abs 0681                      _pad 0555  
                    wreg 0009             _BAUD1CONbits 019F                     l1101 0308  
                   l1111 035F                     l1103 030A                     l1121 0386  
                   l1113 0364                     l1105 0314                     l1131 03C8  
                   l1123 038A                     l1115 036E                     l1107 0336  
                   ?_abs 0032                     l1133 03C9                     l1125 038E  
                   l1117 037B                     l1109 0340                     l1127 0396  
                   l1119 037E                     l1135 03D7                     l1137 03DC  
                   l1129 03B8                     l1067 06F4                     l1411 05BB  
                   l1413 05C5                     l1405 05AB                     l1421 065E  
                   l1501 00B7                     l1341 06E8                     l1415 05E2  
                   l1407 05B1                     l1423 066C                     l1431 06A8  
                   l1511 00DC                     l1503 00BD                     l1343 06ED  
                   l1351 06DC                     l1441 0418                     l1409 05B6  
                   l1425 0671                     l1433 06B0                     l1521 011A  
                   l1513 00DF                     l1505 00CA                     l1345 06EE  
                   l1353 06E1                     l1451 0473                     l1443 043A  
                   l1419 065B                     l1427 069F                     l1523 0155  
                   l1531 0181                     l1515 00E4                     l1507 00D0  
                   l1603 02AF                     l1347 06EF                     l1355 06E2  
                   l1461 04B5                     l1453 047B                     l1445 0444  
                   l1437 040C                     l1429 06A4                     l1541 019B  
                   l1533 0188                     l1525 0162                     l1517 0112  
                   l1509 00D4                     l1621 02FD                     l1605 02C0  
                   l1613 02D9                     l1349 06F1                     l1357 06E4  
                   l1455 047F                     l1463 04C3                     l1447 0463  
                   l1439 040E                     l1471 0563                     l1543 019F  
                   l1535 018C                     l1527 016F                     l1519 0116  
                   l1551 0501                     l1615 02E1                     l1607 02C8  
                   l1631 0632                     l1465 04C8                     l1457 0483  
                   l1449 0470                     l1481 0583                     l1473 0568  
                   l1537 0190                     l1545 01A7                     l1529 017D  
                   l1561 0525                     l1553 050D                     l1609 02D3  
                   l1633 0646                     l1641 06BC                     l1459 04A5  
                   l1483 0595                     l1475 056D                     l1467 0557  
                   l1539 0196                     l1491 005A                     l1563 052E  
                   l1619 02E4                     l1571 01BC                     l1635 0650  
                   l1627 062A                     l1651 05F5                     l1477 0572  
                   l1469 055B                     l1493 006A                     l1565 0534  
                   l1557 0510                     l1549 04F8                     l1581 01F0  
                   l1573 01CD                     l1629 062E                     l1661 05FA  
                   l1653 05F6                     l1645 05EC                     l1487 0681  
                   l1479 057E                     l1495 007D                     l1567 0544  
                   l1559 051C                     l1591 023C                     l1583 0201  
                   l1575 01D5                     l1639 06B7                     l1671 0623  
                   l1663 05FC                     l1655 05F7                     l1647 05F0  
                   l1489 068F                     l1497 0083                     l1593 0255  
                   l1585 0209                     l1577 01DA                     l1665 05FF  
                   l1657 05F8                     l1649 05F4                     l1499 00A5  
                   l1595 026E                     l1587 0222                     l1579 01DE  
                   l1667 0608                     l1659 05F9                     l1597 0276  
                   l1669 0617                     l1599 0295                     ?_pad 002F  
                   STR_1 06CE                     STR_2 0702                     STR_4 0702  
                   STR_6 0705                     STR_8 0705                     u1300 05E2  
                   u1301 05E1                     u1310 0680                     u1311 067F  
                   u1400 04C3                     u1320 06B0                     u1401 04C2  
                   u1305 05DE                     u1321 06AF                     u1410 04C8  
                   u1330 0418                     u1411 04C7                     u1331 0417  
                   u1500 0083                     u1501 0082                     u1350 0444  
                   u1270 05B1                     u1430 055B                     u1351 0443  
                   u1271 05B0                     u1431 055A                     u1280 05B6  
                   u1440 0568                     u1600 0181                     u1520 00A5  
                   u1281 05B5                     u1441 0567                     u1601 0180  
                   u1521 00A4                     u1370 0470                     u1290 05C5  
                   u1450 0591                     u1610 0188                     u1530 00B7  
                   u1371 046F                     u1291 05C4                     u1451 0590  
                   u1611 0187                     u1531 00B6                     u1380 0483  
                   u1460 0595                     u1620 018C                     u1540 00D0  
                   u1700 01F0                     u1381 0482                     u1461 0594  
                   u1621 018B                     u1541 00CF                     u1701 01EF  
                   u1390 04A5                     u1470 068F                     u1630 0196  
                   u1550 00D4                     u1710 0201                     u1391 04A4  
                   u1471 068E                     u1455 058D                     u1631 0195  
                   u1551 00D3                     u1535 00B3                     u1711 0200  
                   u1560 0155                     u1480 0075                     u1640 050D  
                   u1720 0255                     u1561 0154                     u1481 0073  
                   u1641 050C                     u1721 0254                     u1570 0162  
                   u1490 0076                     u1650 0525                     u1730 026E  
                   u1395 04A1                     u1475 068B                     u1571 0161  
                   u1651 0524                     u1731 026D                     u1580 016F  
                   u1660 052E                     u1740 02C0                     u1581 016E  
                   u1565 0151                     u1661 052D                     u1741 02BF  
                   u1590 017D                     u1670 0534                     u1750 0650  
                   u1591 017C                     u1671 0533                     u1751 064F  
                   u1680 0544                     u1760 0608                     u1585 016B  
                   u1681 0543                     u1761 0607                     u1690 01CD  
                   u1595 0179                     u1691 01CC                     u1777 061D  
                   i1l71 0044                     abs@a 0032                     _dbuf 00AD  
                   _main 05EC                     _dtoa 0058                     _prec 0076  
                   _nout 00A8                     pad@i 0033                     pad@p 0030  
                   fsr0h 0005                     fsr1h 0007                     indf0 0000  
                   fsr0l 0004                     indf1 0001                     fsr1l 0006  
                   pad@w 0035                     btemp 007E                     start 0046  
                  ??_abs 0034                    ??_pad 0032          __end_of___aodiv 040C  
                  ?_main 0070                    ?_dtoa 003A          __end_of___aomod 04F8  
           vfpfcnvrt@fmt 0058                    u72lld 0333                    u81lld 03FA  
                  u74lld 035F                    _flags 0078                    _fputc 05AB  
                  _fputs 0659                    _myIsr 0004                    pad@fp 0037  
                  _width 00AA                    _putch 06F3                    dtoa@d 003A  
                  dtoa@i 0056                    dtoa@n 004E                    dtoa@p 0047  
                  dtoa@s 004C                    dtoa@w 004A                    status 0003  
                  wtemp0 007E          __end_of_strncmp 0555          __initialization 0048  
           __end_of_main 0628             __end_of_dtoa 01BA                   ??_main 00D5  
                 ??_dtoa 0042                   ?_fputc 0020                   ?_fputs 0075  
                 ?_myIsr 0070                   ?_putch 0070                   i1l1401 003F  
                 i1l1403 0042                   i1l1393 0006                   i1l1395 000B  
                 _RC7PPS 0EA7                   i1l1397 0024                   i1l1399 0031  
                 u126_20 000B                   u126_21 000A                   u142lld 04E6  
                 u134lld 0437                   u151lld 00A1                   u136lld 0463  
                 _SPBRGH 019C                   _SPBRGL 019B                   _TX1REG 019A  
           vfprintf@cfmt 006E                ??___aodiv 0074                ??___aomod 0074  
                 _printf 06B7                   pad@buf 002F                   dtoa@fp 0049  
                 _strlen 069D                   fputc@c 0020                   fputs@c 002B  
                 fputs@i 002C                   fputs@s 002E         __end_of_smt_init 06F3  
                 putch@c 0074         __end_of_vfprintf 0659                ??_strncmp 0074  
__end_of__initialization 0054           __pcstackCOMMON 0070            __end_of_fputc 05EC  
          __end_of_fputs 0681            __end_of_myIsr 0046            __end_of_putch 06FC  
                ??_fputc 0023                  ??_fputs 0028                  ??_myIsr 0070  
                ??_putch 0074               __pbssBANK1 00A0               __pmaintext 05EC  
             __pintentry 0004                  ?_printf 00CD                  ?_strlen 0074  
     __size_of_uart_init 000C       __size_of_vfpfcnvrt 014E                  _SMT1CPR 0D8F  
                ___aodiv 0308                  ___aomod 040C                ?_smt_init 0070  
              ?_vfprintf 0068                  __ptext1 06DC                  __ptext2 06E8  
                __ptext3 06B7                  __ptext4 0628                  __ptext5 01BA  
                __ptext6 04F8                  __ptext7 0058                  __ptext8 0555  
                __ptext9 069D          __size_of_printf 0017          __size_of_strlen 001A  
           __size_of_abs 001C             __size_of_pad 0056                  clrloop0 06FD  
          _dataAvailable 00AC                  _strncmp 04F8     end_of_initialization 0054  
                fputc@fp 0022                  fputs@fp 0075        __end_of_uart_init 06E8  
      __end_of_vfpfcnvrt 0308               ??_smt_init 0074               ??_vfprintf 006B  
                strlen@a 0021                  strlen@s 0022                _TRISAbits 008C  
              _TRISBbits 008D                _TRISCbits 008E              vfpfcnvrt@ap 0059  
            vfpfcnvrt@fp 0067              vfpfcnvrt@ll 005F           __end_of_printf 06CE  
         __end_of_strlen 06B7      start_initialization 0048              __end_of_abs 069D  
            __end_of_pad 05AB              vfprintf@fmt 0068                 ??_printf 00D3  
               ??_strlen 0020              __pbssCOMMON 0076                ___latbits 0002  
          __pcstackBANK0 0020            __pcstackBANK1 00CD         ___aodiv@dividend 0028  
               ?___aodiv 0020                 ?___aomod 0020         ___aodiv@quotient 0032  
      __size_of_smt_init 000B        __size_of_vfprintf 0031                _lastValue 00A4  
         __size_of_fputc 0041           __size_of_fputs 0028           __size_of_myIsr 0042  
               ?_strncmp 0020           __size_of_putch 0009                 _LATBbits 010D  
              clear_ram0 06FC                 _PIE4bits 0093                 _PIR4bits 0013  
              _uart_init 06DC                _vfpfcnvrt 01BA             _SMT1CON0bits 0D98  
           _SMT1CON1bits 0D99               vfprintf@ap 006A               vfprintf@fp 006D  
             ?_uart_init 0070         __size_of___aodiv 0104         __size_of___aomod 00EC  
             ?_vfpfcnvrt 0058          ___aodiv@divisor 0020          ___aodiv@counter 0030  
               _actValue 00A0                 _dtoa$872 0045                 __ptext10 0659  
               __ptext11 05AB                 __ptext12 06F3                 __ptext13 0681  
               __ptext14 040C                 __ptext15 0308         __size_of_strncmp 005D  
          __size_of_main 003C            __size_of_dtoa 0162               _RC1STAbits 019D  
               int$flags 007E                 _smt_init 06E8                 _vfprintf 0628  
              printf@fmt 00CD         ___aomod@dividend 0028              _SMT1CLKbits 0D9B  
             _INTCONbits 000B                 intlevel1 0000                strncmp@_l 0020  
              strncmp@_r 0022               _OSCCONbits 0099              ??_uart_init 0074  
               printf@ap 00D4          ___aomod@divisor 0020              ??_vfpfcnvrt 005A  
        ___aomod@counter 0030            __pstringtext1 06CE            __pstringtext2 0702  
          __pstringtext3 0705            __pstringtext4 0000                 strncmp@l 0026  
               strncmp@n 0024                 strncmp@r 0028               _TX1STAbits 019E  
           ___aodiv@sign 0031             ___aomod@sign 0031  
