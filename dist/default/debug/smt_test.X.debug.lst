

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Feb 28 01:14:36 2023

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F1619
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=3
    15                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text6,local,class=CODE,merge=1,delta=2,group=3
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	intentry,global,class=CODE,delta=2
    20                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    22                           	dabs	1,0x7E,2
    23  0000                     
    24                           ; Version 2.40
    25                           ; Generated 17/11/2021 GMT
    26                           ; 
    27                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution. Publication is not required when
    41                           ;        this file is used in an embedded application.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC16F1619 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     	;# 
    60  0001                     	;# 
    61  0002                     	;# 
    62  0003                     	;# 
    63  0004                     	;# 
    64  0005                     	;# 
    65  0006                     	;# 
    66  0007                     	;# 
    67  0008                     	;# 
    68  0009                     	;# 
    69  000A                     	;# 
    70  000B                     	;# 
    71  000C                     	;# 
    72  000D                     	;# 
    73  000E                     	;# 
    74  0010                     	;# 
    75  0011                     	;# 
    76  0012                     	;# 
    77  0013                     	;# 
    78  0014                     	;# 
    79  0015                     	;# 
    80  0016                     	;# 
    81  0016                     	;# 
    82  0017                     	;# 
    83  0018                     	;# 
    84  0019                     	;# 
    85  001A                     	;# 
    86  001A                     	;# 
    87  001B                     	;# 
    88  001B                     	;# 
    89  001C                     	;# 
    90  001D                     	;# 
    91  001E                     	;# 
    92  001F                     	;# 
    93  008C                     	;# 
    94  008D                     	;# 
    95  008E                     	;# 
    96  0090                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0094                     	;# 
   101  0095                     	;# 
   102  0096                     	;# 
   103  0098                     	;# 
   104  0099                     	;# 
   105  009A                     	;# 
   106  009B                     	;# 
   107  009B                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  009F                     	;# 
   112  010C                     	;# 
   113  010D                     	;# 
   114  010E                     	;# 
   115  0111                     	;# 
   116  0112                     	;# 
   117  0113                     	;# 
   118  0114                     	;# 
   119  0115                     	;# 
   120  0116                     	;# 
   121  0117                     	;# 
   122  0118                     	;# 
   123  0119                     	;# 
   124  011C                     	;# 
   125  018C                     	;# 
   126  018D                     	;# 
   127  018E                     	;# 
   128  0191                     	;# 
   129  0191                     	;# 
   130  0192                     	;# 
   131  0193                     	;# 
   132  0193                     	;# 
   133  0194                     	;# 
   134  0195                     	;# 
   135  0196                     	;# 
   136  0197                     	;# 
   137  0199                     	;# 
   138  0199                     	;# 
   139  0199                     	;# 
   140  019A                     	;# 
   141  019A                     	;# 
   142  019A                     	;# 
   143  019B                     	;# 
   144  019B                     	;# 
   145  019B                     	;# 
   146  019B                     	;# 
   147  019B                     	;# 
   148  019C                     	;# 
   149  019C                     	;# 
   150  019C                     	;# 
   151  019D                     	;# 
   152  019D                     	;# 
   153  019D                     	;# 
   154  019E                     	;# 
   155  019E                     	;# 
   156  019E                     	;# 
   157  019F                     	;# 
   158  019F                     	;# 
   159  019F                     	;# 
   160  019F                     	;# 
   161  019F                     	;# 
   162  020C                     	;# 
   163  020D                     	;# 
   164  020E                     	;# 
   165  0211                     	;# 
   166  0211                     	;# 
   167  0212                     	;# 
   168  0212                     	;# 
   169  0213                     	;# 
   170  0213                     	;# 
   171  0214                     	;# 
   172  0214                     	;# 
   173  0215                     	;# 
   174  0215                     	;# 
   175  0215                     	;# 
   176  0215                     	;# 
   177  0216                     	;# 
   178  0216                     	;# 
   179  0217                     	;# 
   180  0217                     	;# 
   181  028C                     	;# 
   182  028D                     	;# 
   183  028E                     	;# 
   184  0291                     	;# 
   185  0291                     	;# 
   186  0292                     	;# 
   187  0293                     	;# 
   188  0294                     	;# 
   189  0298                     	;# 
   190  0298                     	;# 
   191  0299                     	;# 
   192  029A                     	;# 
   193  029B                     	;# 
   194  029E                     	;# 
   195  030C                     	;# 
   196  030D                     	;# 
   197  030E                     	;# 
   198  038C                     	;# 
   199  038D                     	;# 
   200  038E                     	;# 
   201  0391                     	;# 
   202  0392                     	;# 
   203  0393                     	;# 
   204  0394                     	;# 
   205  0395                     	;# 
   206  0396                     	;# 
   207  0397                     	;# 
   208  0398                     	;# 
   209  0399                     	;# 
   210  040E                     	;# 
   211  0413                     	;# 
   212  0413                     	;# 
   213  0414                     	;# 
   214  0414                     	;# 
   215  0415                     	;# 
   216  0416                     	;# 
   217  0417                     	;# 
   218  0418                     	;# 
   219  041A                     	;# 
   220  041A                     	;# 
   221  041B                     	;# 
   222  041B                     	;# 
   223  041C                     	;# 
   224  041D                     	;# 
   225  041E                     	;# 
   226  041F                     	;# 
   227  0493                     	;# 
   228  0494                     	;# 
   229  0495                     	;# 
   230  0496                     	;# 
   231  049A                     	;# 
   232  049B                     	;# 
   233  049C                     	;# 
   234  049D                     	;# 
   235  058C                     	;# 
   236  058C                     	;# 
   237  058D                     	;# 
   238  058E                     	;# 
   239  058E                     	;# 
   240  058F                     	;# 
   241  0590                     	;# 
   242  0590                     	;# 
   243  0591                     	;# 
   244  0592                     	;# 
   245  0592                     	;# 
   246  0593                     	;# 
   247  0594                     	;# 
   248  0594                     	;# 
   249  0595                     	;# 
   250  0596                     	;# 
   251  0596                     	;# 
   252  0597                     	;# 
   253  0598                     	;# 
   254  0599                     	;# 
   255  059A                     	;# 
   256  059B                     	;# 
   257  059B                     	;# 
   258  059C                     	;# 
   259  059D                     	;# 
   260  060C                     	;# 
   261  060C                     	;# 
   262  060D                     	;# 
   263  060E                     	;# 
   264  060F                     	;# 
   265  060F                     	;# 
   266  0610                     	;# 
   267  0611                     	;# 
   268  0612                     	;# 
   269  0613                     	;# 
   270  0614                     	;# 
   271  0617                     	;# 
   272  0617                     	;# 
   273  0618                     	;# 
   274  0619                     	;# 
   275  061A                     	;# 
   276  061A                     	;# 
   277  061B                     	;# 
   278  061C                     	;# 
   279  0691                     	;# 
   280  0692                     	;# 
   281  0693                     	;# 
   282  0694                     	;# 
   283  0695                     	;# 
   284  0696                     	;# 
   285  0697                     	;# 
   286  0699                     	;# 
   287  069A                     	;# 
   288  0711                     	;# 
   289  0712                     	;# 
   290  0713                     	;# 
   291  0714                     	;# 
   292  0715                     	;# 
   293  0718                     	;# 
   294  0718                     	;# 
   295  0719                     	;# 
   296  071A                     	;# 
   297  071A                     	;# 
   298  071B                     	;# 
   299  071C                     	;# 
   300  071D                     	;# 
   301  0791                     	;# 
   302  0791                     	;# 
   303  0792                     	;# 
   304  0793                     	;# 
   305  0793                     	;# 
   306  0794                     	;# 
   307  0795                     	;# 
   308  0795                     	;# 
   309  0796                     	;# 
   310  0797                     	;# 
   311  0797                     	;# 
   312  0798                     	;# 
   313  0799                     	;# 
   314  079A                     	;# 
   315  080C                     	;# 
   316  080C                     	;# 
   317  080D                     	;# 
   318  080E                     	;# 
   319  080E                     	;# 
   320  080F                     	;# 
   321  0810                     	;# 
   322  0810                     	;# 
   323  0811                     	;# 
   324  0812                     	;# 
   325  0812                     	;# 
   326  0813                     	;# 
   327  0814                     	;# 
   328  0815                     	;# 
   329  0816                     	;# 
   330  0817                     	;# 
   331  0818                     	;# 
   332  0819                     	;# 
   333  081A                     	;# 
   334  081A                     	;# 
   335  081B                     	;# 
   336  081C                     	;# 
   337  081C                     	;# 
   338  081D                     	;# 
   339  088C                     	;# 
   340  088D                     	;# 
   341  088E                     	;# 
   342  088F                     	;# 
   343  088F                     	;# 
   344  0890                     	;# 
   345  0891                     	;# 
   346  0892                     	;# 
   347  0893                     	;# 
   348  0893                     	;# 
   349  0894                     	;# 
   350  0895                     	;# 
   351  0896                     	;# 
   352  0897                     	;# 
   353  0897                     	;# 
   354  0898                     	;# 
   355  0899                     	;# 
   356  0D8C                     	;# 
   357  0D8C                     	;# 
   358  0D8D                     	;# 
   359  0D8E                     	;# 
   360  0D8F                     	;# 
   361  0D8F                     	;# 
   362  0D90                     	;# 
   363  0D91                     	;# 
   364  0D92                     	;# 
   365  0D92                     	;# 
   366  0D93                     	;# 
   367  0D94                     	;# 
   368  0D95                     	;# 
   369  0D95                     	;# 
   370  0D96                     	;# 
   371  0D97                     	;# 
   372  0D98                     	;# 
   373  0D99                     	;# 
   374  0D9A                     	;# 
   375  0D9B                     	;# 
   376  0D9C                     	;# 
   377  0D9D                     	;# 
   378  0D9E                     	;# 
   379  0D9E                     	;# 
   380  0D9F                     	;# 
   381  0DA0                     	;# 
   382  0DA1                     	;# 
   383  0DA1                     	;# 
   384  0DA2                     	;# 
   385  0DA3                     	;# 
   386  0DA4                     	;# 
   387  0DA4                     	;# 
   388  0DA5                     	;# 
   389  0DA6                     	;# 
   390  0DA7                     	;# 
   391  0DA7                     	;# 
   392  0DA8                     	;# 
   393  0DA9                     	;# 
   394  0DAA                     	;# 
   395  0DAB                     	;# 
   396  0DAC                     	;# 
   397  0DAD                     	;# 
   398  0DAE                     	;# 
   399  0DAF                     	;# 
   400  0E0F                     	;# 
   401  0E10                     	;# 
   402  0E11                     	;# 
   403  0E12                     	;# 
   404  0E13                     	;# 
   405  0E14                     	;# 
   406  0E15                     	;# 
   407  0E16                     	;# 
   408  0E17                     	;# 
   409  0E18                     	;# 
   410  0E19                     	;# 
   411  0E1A                     	;# 
   412  0E1B                     	;# 
   413  0E1C                     	;# 
   414  0E1D                     	;# 
   415  0E1E                     	;# 
   416  0E1F                     	;# 
   417  0E20                     	;# 
   418  0E21                     	;# 
   419  0E22                     	;# 
   420  0E23                     	;# 
   421  0E24                     	;# 
   422  0E25                     	;# 
   423  0E26                     	;# 
   424  0E27                     	;# 
   425  0E28                     	;# 
   426  0E29                     	;# 
   427  0E2A                     	;# 
   428  0E2B                     	;# 
   429  0E2C                     	;# 
   430  0E2D                     	;# 
   431  0E2E                     	;# 
   432  0E90                     	;# 
   433  0E91                     	;# 
   434  0E92                     	;# 
   435  0E94                     	;# 
   436  0E95                     	;# 
   437  0E9C                     	;# 
   438  0E9D                     	;# 
   439  0E9E                     	;# 
   440  0E9F                     	;# 
   441  0EA0                     	;# 
   442  0EA1                     	;# 
   443  0EA2                     	;# 
   444  0EA3                     	;# 
   445  0EA4                     	;# 
   446  0EA5                     	;# 
   447  0EA6                     	;# 
   448  0EA7                     	;# 
   449  0F0F                     	;# 
   450  0F10                     	;# 
   451  0F11                     	;# 
   452  0F12                     	;# 
   453  0F13                     	;# 
   454  0F14                     	;# 
   455  0F15                     	;# 
   456  0F16                     	;# 
   457  0F17                     	;# 
   458  0F18                     	;# 
   459  0F19                     	;# 
   460  0F1A                     	;# 
   461  0F1B                     	;# 
   462  0F1C                     	;# 
   463  0F1D                     	;# 
   464  0F1E                     	;# 
   465  0F1F                     	;# 
   466  0F20                     	;# 
   467  0F21                     	;# 
   468  0F22                     	;# 
   469  0F23                     	;# 
   470  0F24                     	;# 
   471  0F25                     	;# 
   472  0F26                     	;# 
   473  0F27                     	;# 
   474  0F28                     	;# 
   475  0F29                     	;# 
   476  0F2A                     	;# 
   477  0F2B                     	;# 
   478  0F2C                     	;# 
   479  0F2D                     	;# 
   480  0F2E                     	;# 
   481  0F2F                     	;# 
   482  0F30                     	;# 
   483  0F31                     	;# 
   484  0F32                     	;# 
   485  0F33                     	;# 
   486  0F34                     	;# 
   487  0F35                     	;# 
   488  0F36                     	;# 
   489  0F37                     	;# 
   490  0FE4                     	;# 
   491  0FE5                     	;# 
   492  0FE6                     	;# 
   493  0FE7                     	;# 
   494  0FE8                     	;# 
   495  0FE9                     	;# 
   496  0FEA                     	;# 
   497  0FEB                     	;# 
   498  0FED                     	;# 
   499  0FEE                     	;# 
   500  0FEF                     	;# 
   501  0013                     _PIR4bits	set	19
   502  000B                     _INTCON	set	11
   503  0093                     _PIE4bits	set	147
   504  0099                     _OSCCONbits	set	153
   505  008C                     _TRISAbits	set	140
   506  008D                     _TRISBbits	set	141
   507  010D                     _LATBbits	set	269
   508  019A                     _TX1REG	set	410
   509  019B                     _SPBRGL	set	411
   510  019C                     _SPBRGH	set	412
   511  019F                     _BAUD1CONbits	set	415
   512  019D                     _RC1STAbits	set	413
   513  019E                     _TX1STAbits	set	414
   514  0D99                     _SMT1CON1bits	set	3481
   515  0D98                     _SMT1CON0bits	set	3480
   516  0EA7                     _RC7PPS	set	3751
   517                           
   518                           	psect	stringtext1
   519  0153                     __pstringtext1:
   520  0153                     STR_1:
   521  0153  3453               	retlw	83	;'S'
   522  0154  344D               	retlw	77	;'M'
   523  0155  3454               	retlw	84	;'T'
   524  0156  3431               	retlw	49	;'1'
   525  0157  3443               	retlw	67	;'C'
   526  0158  3450               	retlw	80	;'P'
   527  0159  3452               	retlw	82	;'R'
   528  015A  343A               	retlw	58	;':'
   529  015B  3420               	retlw	32	;' '
   530  015C  3400               	retlw	0
   531                           
   532                           	psect	stringtext2
   533  0000                     __pstringtext2:
   534                           
   535                           	psect	cinit
   536  0021                     start_initialization:	
   537                           ; #config settings
   538                           
   539  0021                     __initialization:
   540                           
   541                           ; Clear objects allocated to BANK0
   542  0021  3020               	movlw	low __pbssBANK0
   543  0022  0084               	movwf	4
   544  0023  3000               	movlw	high __pbssBANK0
   545  0024  0085               	movwf	5
   546  0025  3029               	movlw	41
   547  0026  3181  216F  3180   	fcall	clear_ram0
   548  0029                     end_of_initialization:	
   549                           ;End of C runtime variable initialization code
   550                           
   551  0029                     __end_of__initialization:
   552  0029  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   553  002A  0020               	movlb	0
   554  002B  3181  290E         	ljmp	_main	;jump to C main() function
   555                           
   556                           	psect	bssBANK0
   557  0020                     __pbssBANK0:
   558  0020                     _dbuf:
   559  0020                     	ds	32
   560  0040                     _nout:
   561  0040                     	ds	2
   562  0042                     _width:
   563  0042                     	ds	2
   564  0044                     _prec:
   565  0044                     	ds	2
   566  0046                     _flags:
   567  0046                     	ds	2
   568  0048                     _dataAvailable:
   569  0048                     	ds	1
   570                           
   571                           	psect	clrtext
   572  016F                     clear_ram0:	
   573                           ;	Called with FSR0 containing the base address, and
   574                           ;	WREG with the size to clear
   575                           
   576  016F  0064               	clrwdt	;clear the watchdog before getting into this loop
   577  0170                     clrloop0:
   578  0170  0180               	clrf	0	;clear RAM location pointed to by FSR
   579  0171  3101               	addfsr 0,1
   580  0172  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   581  0173  2970               	goto	clrloop0	;have we reached the end yet?
   582  0174  3400               	retlw	0	;all done for this memory range, return
   583                           
   584                           	psect	cstackCOMMON
   585  0070                     __pcstackCOMMON:
   586  0070                     ?_smt_init:
   587  0070                     ?_uart_init:	
   588                           ; 1 bytes @ 0x0
   589                           
   590  0070                     ?_main:	
   591                           ; 1 bytes @ 0x0
   592                           
   593  0070                     ?_myIsr:	
   594                           ; 1 bytes @ 0x0
   595                           
   596  0070                     ??_myIsr:	
   597                           ; 1 bytes @ 0x0
   598                           
   599  0070                     ?_putch:	
   600                           ; 1 bytes @ 0x0
   601                           
   602                           
   603                           ; 1 bytes @ 0x0
   604  0070                     	ds	1
   605  0071                     ??_smt_init:
   606  0071                     ??_uart_init:	
   607                           ; 1 bytes @ 0x1
   608                           
   609  0071                     ??_putch:	
   610                           ; 1 bytes @ 0x1
   611                           
   612  0071                     putch@c:	
   613                           ; 1 bytes @ 0x1
   614                           
   615                           
   616                           ; 1 bytes @ 0x1
   617  0071                     	ds	1
   618  0072                     ?_fputc:
   619  0072                     fputc@c:	
   620                           ; 2 bytes @ 0x2
   621                           
   622                           
   623                           ; 2 bytes @ 0x2
   624  0072                     	ds	2
   625  0074                     fputc@fp:
   626                           
   627                           ; 1 bytes @ 0x4
   628  0074                     	ds	1
   629  0075                     ??_fputc:
   630                           
   631                           ; 1 bytes @ 0x5
   632  0075                     	ds	5
   633  007A                     ?_vfpfcnvrt:
   634  007A                     vfpfcnvrt@fmt:	
   635                           ; 2 bytes @ 0xA
   636                           
   637                           
   638                           ; 1 bytes @ 0xA
   639  007A                     	ds	1
   640  007B                     vfpfcnvrt@ap:
   641                           
   642                           ; 1 bytes @ 0xB
   643  007B                     	ds	1
   644  007C                     vfpfcnvrt@fp:
   645                           
   646                           ; 1 bytes @ 0xC
   647  007C                     	ds	1
   648  007D                     ??_main:
   649                           
   650                           	psect	cstackBANK0
   651  0049                     __pcstackBANK0:	
   652                           ; 1 bytes @ 0xD
   653                           
   654  0049                     ??_vfpfcnvrt:
   655                           
   656                           ; 1 bytes @ 0x0
   657  0049                     	ds	5
   658  004E                     ?_vfprintf:
   659  004E                     vfprintf@fmt:	
   660                           ; 2 bytes @ 0x5
   661                           
   662                           
   663                           ; 2 bytes @ 0x5
   664  004E                     	ds	2
   665  0050                     vfprintf@ap:
   666                           
   667                           ; 1 bytes @ 0x7
   668  0050                     	ds	1
   669  0051                     ??_vfprintf:
   670                           
   671                           ; 1 bytes @ 0x8
   672  0051                     	ds	2
   673  0053                     vfprintf@fp:
   674                           
   675                           ; 1 bytes @ 0xA
   676  0053                     	ds	1
   677  0054                     vfprintf@cfmt:
   678                           
   679                           ; 2 bytes @ 0xB
   680  0054                     	ds	2
   681  0056                     ?_printf:
   682  0056                     printf@fmt:	
   683                           ; 2 bytes @ 0xD
   684                           
   685                           
   686                           ; 2 bytes @ 0xD
   687  0056                     	ds	2
   688  0058                     ??_printf:
   689                           
   690                           ; 1 bytes @ 0xF
   691  0058                     	ds	1
   692  0059                     printf@ap:
   693                           
   694                           ; 1 bytes @ 0x10
   695  0059                     	ds	1
   696                           
   697                           	psect	maintext
   698  010E                     __pmaintext:	
   699 ;;
   700 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   701 ;;
   702 ;; *************** function _main *****************
   703 ;; Defined at:
   704 ;;		line 66 in file "smt_main.c"
   705 ;; Parameters:    Size  Location     Type
   706 ;;		None
   707 ;; Auto vars:     Size  Location     Type
   708 ;;		None
   709 ;; Return value:  Size  Location     Type
   710 ;;                  1    wreg      void 
   711 ;; Registers used:
   712 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   713 ;; Tracked objects:
   714 ;;		On entry : B1F/0
   715 ;;		On exit  : 0/0
   716 ;;		Unchanged: 0/0
   717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   721 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   722 ;;Total ram usage:        0 bytes
   723 ;; Hardware stack levels required when called: 6
   724 ;; This function calls:
   725 ;;		_printf
   726 ;;		_smt_init
   727 ;;		_uart_init
   728 ;; This function is called by:
   729 ;;		Startup code after reset
   730 ;; This function uses a non-reentrant model
   731 ;;
   732                           
   733                           
   734                           ;psect for function _main
   735  010E                     _main:
   736  010E                     l861:	
   737                           ;incstack = 0
   738                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   739                           
   740                           
   741                           ;smt_main.c: 67:     TRISBbits.TRISB7 = 0;
   742  010E  0021               	movlb	1	; select bank1
   743  010F  138D               	bcf	13,7	;volatile
   744                           
   745                           ;smt_main.c: 68:     TRISAbits.TRISA5 = 1;
   746  0110  168C               	bsf	12,5	;volatile
   747  0111                     l863:
   748                           
   749                           ;smt_main.c: 71:     OSCCONbits.SCS = 0;
   750  0111  30FC               	movlw	-4
   751  0112  0599               	andwf	25,f	;volatile
   752                           
   753                           ;smt_main.c: 72:     OSCCONbits.IRCF = 0b1111;
   754  0113  3078               	movlw	120
   755  0114  0499               	iorwf	25,f	;volatile
   756  0115                     l865:
   757                           
   758                           ;smt_main.c: 73:     __nop();
   759  0115  0000               	nop
   760  0116                     l867:
   761                           
   762                           ;smt_main.c: 74:     __nop();
   763  0116  0000               	nop
   764  0117                     l869:
   765                           
   766                           ;smt_main.c: 75:     __nop();
   767  0117  0000               	nop
   768  0118                     l871:
   769                           
   770                           ;smt_main.c: 76:     __nop();
   771  0118  0000               	nop
   772  0119                     l873:
   773                           
   774                           ;smt_main.c: 80:     INTCON = 0b11000000;
   775  0119  30C0               	movlw	192
   776  011A  008B               	movwf	11	;volatile
   777  011B                     l875:
   778                           
   779                           ;smt_main.c: 81:     PIE4bits.SMT1PRAIE = 1;
   780  011B  0021               	movlb	1	; select bank1
   781  011C  1493               	bsf	19,1	;volatile
   782  011D                     l877:
   783                           
   784                           ;smt_main.c: 82:     smt_init();
   785  011D  3181  215D  3181   	fcall	_smt_init
   786  0120                     l879:
   787                           
   788                           ;smt_main.c: 83:     uart_init();
   789  0120  3181  2147  3181   	fcall	_uart_init
   790  0123                     l881:
   791                           
   792                           ;smt_main.c: 85:     {;smt_main.c: 87:         if(dataAvailable)
   793  0123  0020               	movlb	0	; select bank0
   794  0124  0848               	movf	_dataAvailable,w
   795  0125  1903               	btfsc	3,2
   796  0126  2928               	goto	u191
   797  0127  2929               	goto	u190
   798  0128                     u191:
   799  0128  2923               	goto	l881
   800  0129                     u190:
   801  0129                     l883:
   802                           
   803                           ;smt_main.c: 88:         {;smt_main.c: 89:         printf("SMT1CPR: ");
   804  0129  3053               	movlw	low (STR_1| (0+32768))
   805  012A  00D6               	movwf	printf@fmt
   806  012B  3081               	movlw	high (STR_1| (0+32768))
   807  012C  00D7               	movwf	printf@fmt+1
   808  012D  3181  2135  3181   	fcall	_printf
   809  0130                     l885:
   810                           
   811                           ;smt_main.c: 90:         dataAvailable = 0;
   812  0130  0020               	movlb	0	; select bank0
   813  0131  01C8               	clrf	_dataAvailable
   814  0132  2923               	goto	l881
   815  0133  3180  281F         	ljmp	start
   816  0135                     __end_of_main:
   817                           
   818                           	psect	text1
   819  0147                     __ptext1:	
   820 ;; *************** function _uart_init *****************
   821 ;; Defined at:
   822 ;;		line 52 in file "smt_main.c"
   823 ;; Parameters:    Size  Location     Type
   824 ;;		None
   825 ;; Auto vars:     Size  Location     Type
   826 ;;		None
   827 ;; Return value:  Size  Location     Type
   828 ;;                  1    wreg      void 
   829 ;; Registers used:
   830 ;;		wreg, status,2
   831 ;; Tracked objects:
   832 ;;		On entry : 0/0
   833 ;;		On exit  : 0/0
   834 ;;		Unchanged: 0/0
   835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   839 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   840 ;;Total ram usage:        0 bytes
   841 ;; Hardware stack levels used: 1
   842 ;; Hardware stack levels required when called: 1
   843 ;; This function calls:
   844 ;;		Nothing
   845 ;; This function is called by:
   846 ;;		_main
   847 ;; This function uses a non-reentrant model
   848 ;;
   849                           
   850                           
   851                           ;psect for function _uart_init
   852  0147                     _uart_init:
   853  0147                     l847:	
   854                           ;incstack = 0
   855                           ; Regs used in _uart_init: [wreg+status,2]
   856                           
   857                           
   858                           ;smt_main.c: 54:     TX1STAbits.TXEN = 1;
   859  0147  0023               	movlb	3	; select bank3
   860  0148  169E               	bsf	30,5	;volatile
   861                           
   862                           ;smt_main.c: 55:     TX1STAbits.BRGH = 1;
   863  0149  151E               	bsf	30,2	;volatile
   864                           
   865                           ;smt_main.c: 56:     RC1STAbits.SPEN = 1;
   866  014A  179D               	bsf	29,7	;volatile
   867                           
   868                           ;smt_main.c: 57:     BAUD1CONbits.BRG16 = 1;
   869  014B  159F               	bsf	31,3	;volatile
   870  014C                     l849:
   871                           
   872                           ;smt_main.c: 58:     SPBRGH = 0;
   873  014C  019C               	clrf	28	;volatile
   874  014D                     l851:
   875                           
   876                           ;smt_main.c: 59:     SPBRGL = 70;
   877  014D  3046               	movlw	70
   878  014E  009B               	movwf	27	;volatile
   879  014F                     l853:
   880                           
   881                           ;smt_main.c: 60:     RC7PPS = 0b10010;
   882  014F  3012               	movlw	18
   883  0150  003D               	movlb	29	; select bank29
   884  0151  00A7               	movwf	39	;volatile
   885  0152                     l42:
   886  0152  0008               	return
   887  0153                     __end_of_uart_init:
   888                           
   889                           	psect	text2
   890  015D                     __ptext2:	
   891 ;; *************** function _smt_init *****************
   892 ;; Defined at:
   893 ;;		line 42 in file "smt_main.c"
   894 ;; Parameters:    Size  Location     Type
   895 ;;		None
   896 ;; Auto vars:     Size  Location     Type
   897 ;;		None
   898 ;; Return value:  Size  Location     Type
   899 ;;                  1    wreg      void 
   900 ;; Registers used:
   901 ;;		wreg, status,2, status,0
   902 ;; Tracked objects:
   903 ;;		On entry : 0/0
   904 ;;		On exit  : 0/0
   905 ;;		Unchanged: 0/0
   906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   910 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   911 ;;Total ram usage:        0 bytes
   912 ;; Hardware stack levels used: 1
   913 ;; Hardware stack levels required when called: 1
   914 ;; This function calls:
   915 ;;		Nothing
   916 ;; This function is called by:
   917 ;;		_main
   918 ;; This function uses a non-reentrant model
   919 ;;
   920                           
   921                           
   922                           ;psect for function _smt_init
   923  015D                     _smt_init:
   924  015D                     l839:	
   925                           ;incstack = 0
   926                           ; Regs used in _smt_init: [wreg+status,2+status,0]
   927                           
   928                           
   929                           ;smt_main.c: 44:     SMT1CON0bits.EN = 1;
   930  015D  003B               	movlb	27	; select bank27
   931  015E  1798               	bsf	24,7	;volatile
   932  015F                     l841:
   933                           
   934                           ;smt_main.c: 45:     SMT1CON1bits.MODE = 0b0111;
   935  015F  0819               	movf	25,w	;volatile
   936  0160  39F0               	andlw	-16
   937  0161  3807               	iorlw	7
   938  0162  0099               	movwf	25	;volatile
   939  0163                     l843:
   940                           
   941                           ;smt_main.c: 46:     SMT1CON1bits.SMT1GO = 1;
   942  0163  1799               	bsf	25,7	;volatile
   943  0164                     l845:
   944                           
   945                           ;smt_main.c: 47:     SMT1CON1bits.REPEAT =1;
   946  0164  1719               	bsf	25,6	;volatile
   947  0165                     l39:
   948  0165  0008               	return
   949  0166                     __end_of_smt_init:
   950                           
   951                           	psect	text3
   952  0135                     __ptext3:	
   953 ;; *************** function _printf *****************
   954 ;; Defined at:
   955 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\printf.c"
   956 ;; Parameters:    Size  Location     Type
   957 ;;  fmt             2   13[BANK0 ] PTR const unsigned char 
   958 ;;		 -> STR_1(10), 
   959 ;; Auto vars:     Size  Location     Type
   960 ;;  ret             2    0        int 
   961 ;;  ap              1   16[BANK0 ] PTR void [1]
   962 ;;		 -> ?_printf(2), 
   963 ;; Return value:  Size  Location     Type
   964 ;;                  2   13[BANK0 ] int 
   965 ;; Registers used:
   966 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   967 ;; Tracked objects:
   968 ;;		On entry : 0/0
   969 ;;		On exit  : 0/0
   970 ;;		Unchanged: 0/0
   971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   972 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
   973 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
   974 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
   975 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
   976 ;;Total ram usage:        4 bytes
   977 ;; Hardware stack levels used: 1
   978 ;; Hardware stack levels required when called: 5
   979 ;; This function calls:
   980 ;;		_vfprintf
   981 ;; This function is called by:
   982 ;;		_main
   983 ;; This function uses a non-reentrant model
   984 ;;
   985                           
   986                           
   987                           ;psect for function _printf
   988  0135                     _printf:
   989  0135                     l855:	
   990                           ;incstack = 0
   991                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   992                           
   993  0135  3058               	movlw	(low ((?_printf| 0+2)))& (0+255)
   994  0136  0020               	movlb	0	; select bank0
   995  0137  00D8               	movwf	??_printf
   996  0138  0858               	movf	??_printf,w
   997  0139  00D9               	movwf	printf@ap
   998  013A                     l857:
   999  013A  0857               	movf	printf@fmt+1,w
  1000  013B  00CF               	movwf	vfprintf@fmt+1
  1001  013C  0856               	movf	printf@fmt,w
  1002  013D  00CE               	movwf	vfprintf@fmt
  1003  013E  3059               	movlw	(low (printf@ap| 0))& (0+255)
  1004  013F  00D8               	movwf	??_printf
  1005  0140  0858               	movf	??_printf,w
  1006  0141  00D0               	movwf	vfprintf@ap
  1007  0142  3000               	movlw	0
  1008  0143  3180  20E6  3181   	fcall	_vfprintf
  1009  0146                     l596:
  1010  0146  0008               	return
  1011  0147                     __end_of_printf:
  1012                           
  1013                           	psect	text4
  1014  00E6                     __ptext4:	
  1015 ;; *************** function _vfprintf *****************
  1016 ;; Defined at:
  1017 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1018 ;; Parameters:    Size  Location     Type
  1019 ;;  fp              1    wreg     PTR struct _IO_FILE
  1020 ;;		 -> NULL(0), 
  1021 ;;  fmt             2    5[BANK0 ] PTR const unsigned char 
  1022 ;;		 -> STR_1(10), 
  1023 ;;  ap              1    7[BANK0 ] PTR PTR void 
  1024 ;;		 -> printf@ap(1), 
  1025 ;; Auto vars:     Size  Location     Type
  1026 ;;  fp              1   10[BANK0 ] PTR struct _IO_FILE
  1027 ;;		 -> NULL(0), 
  1028 ;;  cfmt            2   11[BANK0 ] PTR unsigned char 
  1029 ;;		 -> STR_1(10), 
  1030 ;; Return value:  Size  Location     Type
  1031 ;;                  2    5[BANK0 ] int 
  1032 ;; Registers used:
  1033 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1034 ;; Tracked objects:
  1035 ;;		On entry : 0/0
  1036 ;;		On exit  : 0/0
  1037 ;;		Unchanged: 0/0
  1038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1039 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1040 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1041 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1042 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1043 ;;Total ram usage:        8 bytes
  1044 ;; Hardware stack levels used: 1
  1045 ;; Hardware stack levels required when called: 4
  1046 ;; This function calls:
  1047 ;;		_vfpfcnvrt
  1048 ;; This function is called by:
  1049 ;;		_printf
  1050 ;; This function uses a non-reentrant model
  1051 ;;
  1052                           
  1053                           
  1054                           ;psect for function _vfprintf
  1055  00E6                     _vfprintf:
  1056                           
  1057                           ;incstack = 0
  1058                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1059                           ;vfprintf@fp stored from wreg
  1060  00E6  0020               	movlb	0	; select bank0
  1061  00E7  00D3               	movwf	vfprintf@fp
  1062  00E8                     l827:
  1063                           
  1064                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1065  00E8  084F               	movf	vfprintf@fmt+1,w
  1066  00E9  00D5               	movwf	vfprintf@cfmt+1
  1067  00EA  084E               	movf	vfprintf@fmt,w
  1068  00EB  00D4               	movwf	vfprintf@cfmt
  1069  00EC                     l829:
  1070                           
  1071                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1072  00EC  01C0               	clrf	_nout
  1073  00ED  01C1               	clrf	_nout+1
  1074                           
  1075                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1076  00EE  2900               	goto	l833
  1077  00EF                     l831:
  1078                           
  1079                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1080  00EF  3054               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  1081  00F0  00D1               	movwf	??_vfprintf
  1082  00F1  0851               	movf	??_vfprintf,w
  1083  00F2  00FA               	movwf	vfpfcnvrt@fmt
  1084  00F3  0850               	movf	vfprintf@ap,w
  1085  00F4  00D2               	movwf	??_vfprintf+1
  1086  00F5  0852               	movf	??_vfprintf+1,w
  1087  00F6  00FB               	movwf	vfpfcnvrt@ap
  1088  00F7  0853               	movf	vfprintf@fp,w
  1089  00F8  3180  202D  3180   	fcall	_vfpfcnvrt
  1090  00FB  087A               	movf	?_vfpfcnvrt,w
  1091  00FC  0020               	movlb	0	; select bank0
  1092  00FD  07C0               	addwf	_nout,f
  1093  00FE  087B               	movf	?_vfpfcnvrt+1,w
  1094  00FF  3DC1               	addwfc	_nout+1,f
  1095  0100                     l833:
  1096                           
  1097                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1098  0100  0854               	movf	vfprintf@cfmt,w
  1099  0101  0084               	movwf	4
  1100  0102  0855               	movf	vfprintf@cfmt+1,w
  1101  0103  0085               	movwf	5
  1102  0104  0012               	moviw fsr0++
  1103  0105  1D03               	btfss	3,2
  1104  0106  2908               	goto	u181
  1105  0107  2909               	goto	u180
  1106  0108                     u181:
  1107  0108  28EF               	goto	l831
  1108  0109                     u180:
  1109  0109                     l835:
  1110                           
  1111                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1112  0109  0841               	movf	_nout+1,w
  1113  010A  00CF               	movwf	?_vfprintf+1
  1114  010B  0840               	movf	_nout,w
  1115  010C  00CE               	movwf	?_vfprintf
  1116  010D                     l635:
  1117  010D  0008               	return
  1118  010E                     __end_of_vfprintf:
  1119                           
  1120                           	psect	text5
  1121  002D                     __ptext5:	
  1122 ;; *************** function _vfpfcnvrt *****************
  1123 ;; Defined at:
  1124 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1125 ;; Parameters:    Size  Location     Type
  1126 ;;  fp              1    wreg     PTR struct _IO_FILE
  1127 ;;		 -> NULL(0), 
  1128 ;;  fmt             1   10[COMMON] PTR PTR unsigned char 
  1129 ;;		 -> vfprintf@cfmt(2), 
  1130 ;;  ap              1   11[COMMON] PTR PTR void 
  1131 ;;		 -> printf@ap(1), 
  1132 ;; Auto vars:     Size  Location     Type
  1133 ;;  fp              1   12[COMMON] PTR struct _IO_FILE
  1134 ;;		 -> NULL(0), 
  1135 ;;  llu             8    0        unsigned long long 
  1136 ;;  ll              8    0        long long 
  1137 ;;  f               4    0        long long 
  1138 ;;  ct              3    0        unsigned char [3]
  1139 ;;  vp              2    0        PTR void 
  1140 ;;  i               2    0        int 
  1141 ;;  done            2    0        int 
  1142 ;;  cp              2    0        PTR unsigned char 
  1143 ;;  c               1    0        unsigned char 
  1144 ;; Return value:  Size  Location     Type
  1145 ;;                  2   10[COMMON] int 
  1146 ;; Registers used:
  1147 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1148 ;; Tracked objects:
  1149 ;;		On entry : 0/0
  1150 ;;		On exit  : 0/0
  1151 ;;		Unchanged: 0/0
  1152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1153 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1154 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1155 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1156 ;;      Totals:         3       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1157 ;;Total ram usage:        8 bytes
  1158 ;; Hardware stack levels used: 1
  1159 ;; Hardware stack levels required when called: 3
  1160 ;; This function calls:
  1161 ;;		_fputc
  1162 ;; This function is called by:
  1163 ;;		_vfprintf
  1164 ;; This function uses a non-reentrant model
  1165 ;;
  1166                           
  1167                           
  1168                           ;psect for function _vfpfcnvrt
  1169  002D                     _vfpfcnvrt:
  1170                           
  1171                           ;incstack = 0
  1172                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1173                           ;vfpfcnvrt@fp stored from wreg
  1174  002D  00FC               	movwf	vfpfcnvrt@fp
  1175  002E                     l795:
  1176                           
  1177                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1178  002E  087A               	movf	vfpfcnvrt@fmt,w
  1179  002F  0086               	movwf	6
  1180  0030  0187               	clrf	7
  1181  0031  3F40               	moviw [0]fsr1
  1182  0032  0020               	movlb	0	; select bank0
  1183  0033  00C9               	movwf	??_vfpfcnvrt
  1184  0034  3F41               	moviw [1]fsr1
  1185  0035  00CA               	movwf	??_vfpfcnvrt+1
  1186  0036  0849               	movf	??_vfpfcnvrt,w
  1187  0037  0084               	movwf	4
  1188  0038  084A               	movf	??_vfpfcnvrt+1,w
  1189  0039  0085               	movwf	5
  1190  003A  0012               	moviw fsr0++
  1191  003B  3A25               	xorlw	37
  1192  003C  1D03               	btfss	3,2
  1193  003D  283F               	goto	u161
  1194  003E  2840               	goto	u160
  1195  003F                     u161:
  1196  003F  2884               	goto	l819
  1197  0040                     u160:
  1198  0040                     l797:
  1199                           
  1200                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1201  0040  087A               	movf	vfpfcnvrt@fmt,w
  1202  0041  0086               	movwf	6
  1203  0042  0187               	clrf	7
  1204  0043  3001               	movlw	1
  1205  0044  0781               	addwf	1,f
  1206  0045  3141               	addfsr 1,1
  1207  0046  1803               	skipnc
  1208  0047  0A81               	incf	1,f
  1209  0048                     l799:
  1210                           
  1211                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1212  0048  01C2               	clrf	_width
  1213  0049  01C3               	clrf	_width+1
  1214  004A  01C6               	clrf	_flags
  1215  004B  01C7               	clrf	_flags+1
  1216  004C                     l801:
  1217                           
  1218                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1219  004C  30FF               	movlw	255
  1220  004D  00C4               	movwf	_prec
  1221  004E  30FF               	movlw	255
  1222  004F  00C5               	movwf	_prec+1
  1223  0050                     l803:
  1224                           
  1225                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  1226  0050  087A               	movf	vfpfcnvrt@fmt,w
  1227  0051  0086               	movwf	6
  1228  0052  0187               	clrf	7
  1229  0053  3F40               	moviw [0]fsr1
  1230  0054  00C9               	movwf	??_vfpfcnvrt
  1231  0055  3F41               	moviw [1]fsr1
  1232  0056  00CA               	movwf	??_vfpfcnvrt+1
  1233  0057  0849               	movf	??_vfpfcnvrt,w
  1234  0058  0084               	movwf	4
  1235  0059  084A               	movf	??_vfpfcnvrt+1,w
  1236  005A  0085               	movwf	5
  1237  005B  0012               	moviw fsr0++
  1238  005C  3A25               	xorlw	37
  1239  005D  1D03               	btfss	3,2
  1240  005E  2860               	goto	u171
  1241  005F  2861               	goto	u170
  1242  0060                     u171:
  1243  0060  2879               	goto	l813
  1244  0061                     u170:
  1245  0061                     l805:
  1246                           
  1247                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  1248  0061  087A               	movf	vfpfcnvrt@fmt,w
  1249  0062  0086               	movwf	6
  1250  0063  0187               	clrf	7
  1251  0064  3001               	movlw	1
  1252  0065  0781               	addwf	1,f
  1253  0066  3141               	addfsr 1,1
  1254  0067  1803               	skipnc
  1255  0068  0A81               	incf	1,f
  1256  0069                     l807:
  1257                           
  1258                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  1259  0069  3025               	movlw	37
  1260  006A  00F2               	movwf	fputc@c
  1261  006B  3000               	movlw	0
  1262  006C  00F3               	movwf	fputc@c+1
  1263  006D  087C               	movf	vfpfcnvrt@fp,w
  1264  006E  00C9               	movwf	??_vfpfcnvrt
  1265  006F  0849               	movf	??_vfpfcnvrt,w
  1266  0070  00F4               	movwf	fputc@fp
  1267  0071  3180  20A7  3180   	fcall	_fputc
  1268  0074                     l809:
  1269                           
  1270                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  1271  0074  3001               	movlw	1
  1272  0075  00FA               	movwf	?_vfpfcnvrt
  1273  0076  3000               	movlw	0
  1274  0077  00FB               	movwf	?_vfpfcnvrt+1
  1275  0078  28A6               	goto	l629
  1276  0079                     l813:
  1277                           
  1278                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  1279  0079  087A               	movf	vfpfcnvrt@fmt,w
  1280  007A  0086               	movwf	6
  1281  007B  0187               	clrf	7
  1282  007C  3001               	movlw	1
  1283  007D  0781               	addwf	1,f
  1284  007E  3141               	addfsr 1,1
  1285  007F  1803               	skipnc
  1286  0080  0A81               	incf	1,f
  1287  0081                     l815:
  1288                           
  1289                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  1290  0081  01FA               	clrf	?_vfpfcnvrt
  1291  0082  01FB               	clrf	?_vfpfcnvrt+1
  1292  0083  28A6               	goto	l629
  1293  0084                     l819:
  1294                           
  1295                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  1296  0084  087A               	movf	vfpfcnvrt@fmt,w
  1297  0085  0086               	movwf	6
  1298  0086  0187               	clrf	7
  1299  0087  3F40               	moviw [0]fsr1
  1300  0088  00C9               	movwf	??_vfpfcnvrt
  1301  0089  3F41               	moviw [1]fsr1
  1302  008A  00CA               	movwf	??_vfpfcnvrt+1
  1303  008B  0849               	movf	??_vfpfcnvrt,w
  1304  008C  0084               	movwf	4
  1305  008D  084A               	movf	??_vfpfcnvrt+1,w
  1306  008E  0085               	movwf	5
  1307  008F  0800               	movf	0,w	;code access
  1308  0090  00CB               	movwf	??_vfpfcnvrt+2
  1309  0091  01CC               	clrf	??_vfpfcnvrt+3
  1310  0092  084B               	movf	??_vfpfcnvrt+2,w
  1311  0093  00F2               	movwf	fputc@c
  1312  0094  084C               	movf	??_vfpfcnvrt+3,w
  1313  0095  00F3               	movwf	fputc@c+1
  1314  0096  087C               	movf	vfpfcnvrt@fp,w
  1315  0097  00CD               	movwf	??_vfpfcnvrt+4
  1316  0098  084D               	movf	??_vfpfcnvrt+4,w
  1317  0099  00F4               	movwf	fputc@fp
  1318  009A  3180  20A7  3180   	fcall	_fputc
  1319  009D                     l821:
  1320                           
  1321                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  1322  009D  087A               	movf	vfpfcnvrt@fmt,w
  1323  009E  0086               	movwf	6
  1324  009F  0187               	clrf	7
  1325  00A0  3001               	movlw	1
  1326  00A1  0781               	addwf	1,f
  1327  00A2  3141               	addfsr 1,1
  1328  00A3  1803               	skipnc
  1329  00A4  0A81               	incf	1,f
  1330  00A5  2874               	goto	l809
  1331  00A6                     l629:
  1332  00A6  0008               	return
  1333  00A7                     __end_of_vfpfcnvrt:
  1334                           
  1335                           	psect	text6
  1336  00A7                     __ptext6:	
  1337 ;; *************** function _fputc *****************
  1338 ;; Defined at:
  1339 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  1340 ;; Parameters:    Size  Location     Type
  1341 ;;  c               2    2[COMMON] int 
  1342 ;;  fp              1    4[COMMON] PTR struct _IO_FILE
  1343 ;;		 -> NULL(0), 
  1344 ;; Auto vars:     Size  Location     Type
  1345 ;;		None
  1346 ;; Return value:  Size  Location     Type
  1347 ;;                  2    2[COMMON] int 
  1348 ;; Registers used:
  1349 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1350 ;; Tracked objects:
  1351 ;;		On entry : 0/0
  1352 ;;		On exit  : 0/0
  1353 ;;		Unchanged: 0/0
  1354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1355 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1357 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1358 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1359 ;;Total ram usage:        8 bytes
  1360 ;; Hardware stack levels used: 1
  1361 ;; Hardware stack levels required when called: 2
  1362 ;; This function calls:
  1363 ;;		_putch
  1364 ;; This function is called by:
  1365 ;;		_vfpfcnvrt
  1366 ;; This function uses a non-reentrant model
  1367 ;;
  1368                           
  1369                           
  1370                           ;psect for function _fputc
  1371  00A7                     _fputc:
  1372  00A7                     l781:	
  1373                           ;incstack = 0
  1374                           ; Regs used in _fputc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1375                           
  1376  00A7  0874               	movf	fputc@fp,w
  1377  00A8  1903               	btfsc	3,2
  1378  00A9  28AB               	goto	u121
  1379  00AA  28AC               	goto	u120
  1380  00AB                     u121:
  1381  00AB  28B1               	goto	l785
  1382  00AC                     u120:
  1383  00AC                     l783:
  1384  00AC  0874               	movf	fputc@fp,w
  1385  00AD  1D03               	btfss	3,2
  1386  00AE  28B0               	goto	u131
  1387  00AF  28B1               	goto	u130
  1388  00B0                     u131:
  1389  00B0  28B6               	goto	l787
  1390  00B1                     u130:
  1391  00B1                     l785:
  1392  00B1  0872               	movf	fputc@c,w
  1393  00B2  3181  2166  3180   	fcall	_putch
  1394  00B5  28E5               	goto	l647
  1395  00B6                     l787:
  1396  00B6  0874               	movf	fputc@fp,w
  1397  00B7  3E03               	addlw	3
  1398  00B8  0086               	movwf	6
  1399  00B9  0187               	clrf	7
  1400  00BA  0016               	moviw fsr1++
  1401  00BB  0401               	iorwf	1,w
  1402  00BC  1903               	btfsc	3,2
  1403  00BD  28BF               	goto	u141
  1404  00BE  28C0               	goto	u140
  1405  00BF                     u141:
  1406  00BF  28DD               	goto	l791
  1407  00C0                     u140:
  1408  00C0                     l789:
  1409  00C0  0874               	movf	fputc@fp,w
  1410  00C1  3E03               	addlw	3
  1411  00C2  0086               	movwf	6
  1412  00C3  0187               	clrf	7
  1413  00C4  3F40               	moviw [0]fsr1
  1414  00C5  00F5               	movwf	??_fputc
  1415  00C6  3F41               	moviw [1]fsr1
  1416  00C7  00F6               	movwf	??_fputc+1
  1417  00C8  0A74               	incf	fputc@fp,w
  1418  00C9  0086               	movwf	6
  1419  00CA  0187               	clrf	7
  1420  00CB  3F40               	moviw [0]fsr1
  1421  00CC  00F7               	movwf	??_fputc+2
  1422  00CD  3F41               	moviw [1]fsr1
  1423  00CE  00F8               	movwf	??_fputc+3
  1424  00CF  0878               	movf	??_fputc+3,w
  1425  00D0  3A80               	xorlw	128
  1426  00D1  00F9               	movwf	??_fputc+4
  1427  00D2  0876               	movf	??_fputc+1,w
  1428  00D3  3A80               	xorlw	128
  1429  00D4  0279               	subwf	??_fputc+4,w
  1430  00D5  1D03               	skipz
  1431  00D6  28D9               	goto	u155
  1432  00D7  0875               	movf	??_fputc,w
  1433  00D8  0277               	subwf	??_fputc+2,w
  1434  00D9                     u155:
  1435  00D9  1803               	skipnc
  1436  00DA  28DC               	goto	u151
  1437  00DB  28DD               	goto	u150
  1438  00DC                     u151:
  1439  00DC  28E5               	goto	l647
  1440  00DD                     u150:
  1441  00DD                     l791:
  1442  00DD  0A74               	incf	fputc@fp,w
  1443  00DE  0086               	movwf	6
  1444  00DF  0187               	clrf	7
  1445  00E0  3001               	movlw	1
  1446  00E1  0781               	addwf	1,f
  1447  00E2  3141               	addfsr 1,1
  1448  00E3  1803               	skipnc
  1449  00E4  0A81               	incf	1,f
  1450  00E5                     l647:
  1451  00E5  0008               	return
  1452  00E6                     __end_of_fputc:
  1453                           
  1454                           	psect	text7
  1455  0166                     __ptext7:	
  1456 ;; *************** function _putch *****************
  1457 ;; Defined at:
  1458 ;;		line 105 in file "smt_main.c"
  1459 ;; Parameters:    Size  Location     Type
  1460 ;;  c               1    wreg     unsigned char 
  1461 ;; Auto vars:     Size  Location     Type
  1462 ;;  c               1    1[COMMON] unsigned char 
  1463 ;; Return value:  Size  Location     Type
  1464 ;;                  1    wreg      void 
  1465 ;; Registers used:
  1466 ;;		wreg
  1467 ;; Tracked objects:
  1468 ;;		On entry : 0/0
  1469 ;;		On exit  : 0/0
  1470 ;;		Unchanged: 0/0
  1471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1473 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1475 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1476 ;;Total ram usage:        1 bytes
  1477 ;; Hardware stack levels used: 1
  1478 ;; Hardware stack levels required when called: 1
  1479 ;; This function calls:
  1480 ;;		Nothing
  1481 ;; This function is called by:
  1482 ;;		_fputc
  1483 ;; This function uses a non-reentrant model
  1484 ;;
  1485                           
  1486                           
  1487                           ;psect for function _putch
  1488  0166                     _putch:
  1489                           
  1490                           ;incstack = 0
  1491                           ; Regs used in _putch: [wreg]
  1492                           ;putch@c stored from wreg
  1493  0166  00F1               	movwf	putch@c
  1494  0167                     l779:
  1495                           
  1496                           ;smt_main.c: 105: void putch(char c);smt_main.c: 106: {;smt_main.c: 107:        TX1REG =
      +                           c;
  1497  0167  0871               	movf	putch@c,w
  1498  0168  0023               	movlb	3	; select bank3
  1499  0169  009A               	movwf	26	;volatile
  1500  016A                     l62:	
  1501                           ;smt_main.c: 108:        while(TX1STAbits.TRMT != 1);
  1502                           
  1503  016A  1C9E               	btfss	30,1	;volatile
  1504  016B  296D               	goto	u111
  1505  016C  296E               	goto	u110
  1506  016D                     u111:
  1507  016D  296A               	goto	l62
  1508  016E                     u110:
  1509  016E                     l65:
  1510  016E  0008               	return
  1511  016F                     __end_of_putch:
  1512                           
  1513                           	psect	intentry
  1514  0004                     __pintentry:	
  1515 ;; *************** function _myIsr *****************
  1516 ;; Defined at:
  1517 ;;		line 96 in file "smt_main.c"
  1518 ;; Parameters:    Size  Location     Type
  1519 ;;		None
  1520 ;; Auto vars:     Size  Location     Type
  1521 ;;		None
  1522 ;; Return value:  Size  Location     Type
  1523 ;;                  1    wreg      void 
  1524 ;; Registers used:
  1525 ;;		wreg, status,2, status,0
  1526 ;; Tracked objects:
  1527 ;;		On entry : 0/0
  1528 ;;		On exit  : 0/0
  1529 ;;		Unchanged: 0/0
  1530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1533 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1534 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1535 ;;Total ram usage:        1 bytes
  1536 ;; Hardware stack levels used: 1
  1537 ;; This function calls:
  1538 ;;		Nothing
  1539 ;; This function is called by:
  1540 ;;		Interrupt level 1
  1541 ;; This function uses a non-reentrant model
  1542 ;;
  1543                           
  1544  0004                     _myIsr:
  1545                           
  1546                           ;incstack = 0
  1547  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  1548                           
  1549                           ; Regs used in _myIsr: [wreg+status,2+status,0]
  1550  0005  3180               	pagesel	$
  1551  0006                     i1l887:
  1552                           
  1553                           ;smt_main.c: 98:     if(PIR4bits.SMT1PRAIF)
  1554  0006  0020               	movlb	0	; select bank0
  1555  0007  1C93               	btfss	19,1	;volatile
  1556  0008  280A               	goto	u20_21
  1557  0009  280B               	goto	u20_20
  1558  000A                     u20_21:
  1559  000A  281D               	goto	i1l59
  1560  000B                     u20_20:
  1561  000B                     i1l889:
  1562                           
  1563                           ;smt_main.c: 99:     {;smt_main.c: 100:     LATBbits.LATB7 ^= 1;
  1564  000B  0022               	movlb	2	; select bank2
  1565  000C  0D0D               	rlf	13,w	;volatile
  1566  000D  0D0D               	rlf	13,w	;volatile
  1567  000E  3901               	andlw	1
  1568  000F  00F0               	movwf	??_myIsr
  1569  0010  3001               	movlw	1
  1570  0011  06F0               	xorwf	??_myIsr,f
  1571  0012  0CF0               	rrf	??_myIsr,f
  1572  0013  0CF0               	rrf	??_myIsr,f
  1573  0014  080D               	movf	13,w	;volatile
  1574  0015  0670               	xorwf	??_myIsr,w
  1575  0016  397F               	andlw	-129
  1576  0017  0670               	xorwf	??_myIsr,w
  1577  0018  008D               	movwf	13	;volatile
  1578  0019                     i1l891:
  1579                           
  1580                           ;smt_main.c: 101:     dataAvailable = 1;
  1581  0019  0020               	movlb	0	; select bank0
  1582  001A  01C8               	clrf	_dataAvailable
  1583  001B  0AC8               	incf	_dataAvailable,f
  1584  001C                     i1l893:
  1585                           
  1586                           ;smt_main.c: 102:     PIR4bits.SMT1PRAIF = 0;
  1587  001C  1093               	bcf	19,1	;volatile
  1588  001D                     i1l59:
  1589  001D  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1590  001E  0009               	retfie
  1591  001F                     __end_of_myIsr:
  1592  007E                     btemp	set	126	;btemp
  1593  007E                     int$flags	set	126
  1594  007E                     wtemp0	set	126
  1595                           
  1596                           	psect	idloc
  1597                           
  1598                           ;Config register IDLOC0 @ 0x8000
  1599                           ;	unspecified, using default values
  1600  8000                     	org	32768
  1601  8000  3FFF               	dw	16383
  1602                           
  1603                           ;Config register IDLOC1 @ 0x8001
  1604                           ;	unspecified, using default values
  1605  8001                     	org	32769
  1606  8001  3FFF               	dw	16383
  1607                           
  1608                           ;Config register IDLOC2 @ 0x8002
  1609                           ;	unspecified, using default values
  1610  8002                     	org	32770
  1611  8002  3FFF               	dw	16383
  1612                           
  1613                           ;Config register IDLOC3 @ 0x8003
  1614                           ;	unspecified, using default values
  1615  8003                     	org	32771
  1616  8003  3FFF               	dw	16383
  1617                           
  1618                           	psect	config
  1619                           
  1620                           ;Config register CONFIG1 @ 0x8007
  1621                           ;	Oscillator Selection Bits
  1622                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  1623                           ;	Power-up Timer Enable
  1624                           ;	PWRTE = OFF, PWRT disabled
  1625                           ;	MCLR Pin Function Select
  1626                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  1627                           ;	Flash Program Memory Code Protection
  1628                           ;	CP = OFF, Program memory code protection is disabled
  1629                           ;	Brown-out Reset Enable
  1630                           ;	BOREN = ON, Brown-out Reset enabled
  1631                           ;	Clock Out Enable
  1632                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  1633                           ;	Internal/External Switch Over
  1634                           ;	IESO = ON, Internal External Switch Over mode is enabled
  1635                           ;	Fail-Safe Clock Monitor Enable
  1636                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  1637  8007                     	org	32775
  1638  8007  3FFC               	dw	16380
  1639                           
  1640                           ;Config register CONFIG2 @ 0x8008
  1641                           ;	Flash Memory Self-Write Protection
  1642                           ;	WRT = OFF, Write protection off
  1643                           ;	Peripheral Pin Select one-way control
  1644                           ;	PPS1WAY = OFF, The PPSLOCK bit can be set and cleared repeatedly by software
  1645                           ;	Zero Cross Detect Disable Bit
  1646                           ;	ZCD = OFF, ZCD disable.  ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  1647                           ;	PLL Enable Bit
  1648                           ;	PLLEN = ON, 4x PLL is always enabled
  1649                           ;	Stack Overflow/Underflow Reset Enable
  1650                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  1651                           ;	Brown-out Reset Voltage Selection
  1652                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  1653                           ;	Low-Power Brown Out Reset
  1654                           ;	LPBOR = OFF, Low-Power BOR is disabled
  1655                           ;	Low-Voltage Programming Enable
  1656                           ;	LVP = ON, Low-voltage programming enabled
  1657  8008                     	org	32776
  1658  8008  3FFB               	dw	16379
  1659                           
  1660                           ;Config register CONFIG3 @ 0x8009
  1661                           ;	WDT Period Select
  1662                           ;	WDTCPS = WDTCPS1F, Software Control (WDTPS)
  1663                           ;	Watchdog Timer Enable
  1664                           ;	WDTE = OFF, WDT disabled
  1665                           ;	WDT Window Select
  1666                           ;	WDTCWS = WDTCWSSW, Software WDT window size control (WDTWS bits)
  1667                           ;	WDT Input Clock Selector
  1668                           ;	WDTCCS = SWC, Software control, controlled by WDTCS bits
  1669  8009                     	org	32777
  1670  8009  3F9F               	dw	16287

Data Sizes:
    Strings     10
    Constant    0
    Data        0
    BSS         41
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80     17      58
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), 

    S693_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_1(CODE[10]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 10
		 -> STR_1(CODE[10]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_1(CODE[10]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 


Critical Paths under _main in COMMON

    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_fputc
    _fputc->_putch

Critical Paths under _myIsr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _myIsr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _myIsr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myIsr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myIsr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _myIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _myIsr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _myIsr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _myIsr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _myIsr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _myIsr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _myIsr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _myIsr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _myIsr in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1590
                             _printf
                           _smt_init
                          _uart_init
 ---------------------------------------------------------------------------------
 (1) _uart_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _smt_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _printf                                               6     4      2    1590
                                             13 BANK0      4     2      2
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3    1462
                                              5 BANK0      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           40    38      2    1138
                                             10 COMMON     3     1      2
                                              0 BANK0      5     5      0
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     738
                                              2 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      22
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _myIsr                                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _printf
     _vfprintf
       _vfpfcnvrt
         _fputc
           _putch
   _smt_init
   _uart_init

 _myIsr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     11      3A       5       72.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      47      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      47      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Feb 28 01:14:36 2023

                     l42 0152                       l62 016A                       l39 0165  
                     l65 016E                      l801 004C                      l803 0050  
                    l635 010D                      l821 009D                      l629 00A6  
                    l805 0061                      l813 0079                      l647 00E5  
                    l815 0081                      l807 0069                      l831 00EF  
                    l809 0074                      l833 0100                      l841 015F  
                    l819 0084                      l835 0109                      l827 00E8  
                    l843 0163                      l851 014D                      l596 0146  
                    l781 00A7                      l829 00EC                      l845 0164  
                    l853 014F                      l861 010E                      l791 00DD  
                    l783 00AC                      l855 0135                      l839 015D  
                    l847 0147                      l871 0118                      l863 0111  
                    l785 00B1                      l857 013A                      l849 014C  
                    l881 0123                      l873 0119                      l865 0115  
                    l779 0167                      l787 00B6                      l795 002E  
                    l883 0129                      l875 011B                      l867 0116  
                    l789 00C0                      l797 0040                      l885 0130  
                    l877 011D                      l869 0117                      l799 0048  
                    l879 0120                      u110 016E                      u111 016D  
                    u120 00AC                      u121 00AB                      u130 00B1  
                    u131 00B0                      u140 00C0                      u141 00BF  
                    u150 00DD                      u151 00DC                      u160 0040  
                    u161 003F                      u170 0061                      u155 00D9  
                    u171 0060                      u180 0109                      u181 0108  
                    u190 0129                      u191 0128                      wreg 0009  
           _BAUD1CONbits 019F                     STR_1 0153                     i1l59 001D  
                   _dbuf 0020                     _main 010E                     _prec 0044  
                   _nout 0040                     fsr0h 0005                     fsr1h 0007  
                   indf0 0000                     fsr0l 0004                     indf1 0001  
                   fsr1l 0006                     btemp 007E                     start 001F  
                  ?_main 0070                    i1l891 0019                    i1l893 001C  
                  i1l887 0006                    i1l889 000B                    u20_20 000B  
                  u20_21 000A             vfpfcnvrt@fmt 007A                    _flags 0046  
                  _fputc 00A7                    _myIsr 0004                    _width 0042  
                  _putch 0166                    status 0003                    wtemp0 007E  
        __initialization 0021             __end_of_main 0135                   ??_main 007D  
                 ?_fputc 0072                   ?_myIsr 0070                   ?_putch 0070  
                 _RC7PPS 0EA7                   _INTCON 000B                   _SPBRGH 019C  
                 _SPBRGL 019B                   _TX1REG 019A             vfprintf@cfmt 0054  
                 _printf 0135                   fputc@c 0072         __end_of_smt_init 0166  
                 putch@c 0071         __end_of_vfprintf 010E  __end_of__initialization 0029  
         __pcstackCOMMON 0070            __end_of_fputc 00E6            __end_of_myIsr 001F  
          __end_of_putch 016F                  ??_fputc 0075                  ??_myIsr 0070  
                ??_putch 0071               __pbssBANK0 0020               __pmaintext 010E  
             __pintentry 0004                  ?_printf 0056       __size_of_uart_init 000C  
     __size_of_vfpfcnvrt 007A                ?_smt_init 0070                ?_vfprintf 004E  
                __ptext1 0147                  __ptext2 015D                  __ptext3 0135  
                __ptext4 00E6                  __ptext5 002D                  __ptext6 00A7  
                __ptext7 0166          __size_of_printf 0012                  clrloop0 0170  
          _dataAvailable 0048     end_of_initialization 0029                  fputc@fp 0074  
      __end_of_uart_init 0153        __end_of_vfpfcnvrt 00A7               ??_smt_init 0071  
             ??_vfprintf 0051                _TRISAbits 008C                _TRISBbits 008D  
            vfpfcnvrt@ap 007B              vfpfcnvrt@fp 007C           __end_of_printf 0147  
    start_initialization 0021              vfprintf@fmt 004E                 ??_printf 0058  
              ___latbits 0002            __pcstackBANK0 0049        __size_of_smt_init 0009  
      __size_of_vfprintf 0028           __size_of_fputc 003F           __size_of_myIsr 001B  
         __size_of_putch 0009                 _LATBbits 010D                clear_ram0 016F  
               _PIE4bits 0093                 _PIR4bits 0013                _uart_init 0147  
              _vfpfcnvrt 002D             _SMT1CON0bits 0D98             _SMT1CON1bits 0D99  
             vfprintf@ap 0050               vfprintf@fp 0053               ?_uart_init 0070  
             ?_vfpfcnvrt 007A            __size_of_main 0027               _RC1STAbits 019D  
               int$flags 007E                 _smt_init 015D                 _vfprintf 00E6  
              printf@fmt 0056                 intlevel1 0000               _OSCCONbits 0099  
            ??_uart_init 0071                 printf@ap 0059              ??_vfpfcnvrt 0049  
          __pstringtext1 0153            __pstringtext2 0000               _TX1STAbits 019E  
